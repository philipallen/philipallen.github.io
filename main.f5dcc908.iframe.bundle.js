/*! For license information please see main.f5dcc908.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_boi_react_native_docs=self.webpackChunk_boi_react_native_docs||[]).push([[179],{"../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../packages/boi-fonts/dist/boi-fonts.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/getUrl.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__),_OpenSans_Italic_woff2__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Italic.woff2"),_OpenSans_Italic_woff__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Italic.woff"),_OpenSans_Italic_ttf__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Italic.ttf"),_OpenSans_Regular_woff2__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Regular.woff2"),_OpenSans_Regular_woff__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Regular.woff"),_OpenSans_Regular_ttf__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Regular.ttf"),_OpenSans_SemiBold_woff2__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-SemiBold.woff2"),_OpenSans_SemiBold_woff__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-SemiBold.woff"),_OpenSans_SemiBold_ttf__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-SemiBold.ttf"),_OpenSans_SemiBoldItalic_woff2__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-SemiBoldItalic.woff2"),_OpenSans_SemiBoldItalic_woff__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-SemiBoldItalic.woff"),_OpenSans_SemiBoldItalic_ttf__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-SemiBoldItalic.ttf"),_OpenSans_Bold_woff2__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Bold.woff2"),_OpenSans_Bold_woff__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Bold.woff"),_OpenSans_Bold_ttf__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("../../packages/boi-fonts/dist/OpenSans-Bold.ttf"),___CSS_LOADER_EXPORT___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()),___CSS_LOADER_URL_REPLACEMENT_0___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Italic_woff2__WEBPACK_IMPORTED_MODULE_3__),___CSS_LOADER_URL_REPLACEMENT_1___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Italic_woff__WEBPACK_IMPORTED_MODULE_4__),___CSS_LOADER_URL_REPLACEMENT_2___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Italic_ttf__WEBPACK_IMPORTED_MODULE_5__),___CSS_LOADER_URL_REPLACEMENT_3___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Regular_woff2__WEBPACK_IMPORTED_MODULE_6__),___CSS_LOADER_URL_REPLACEMENT_4___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Regular_woff__WEBPACK_IMPORTED_MODULE_7__),___CSS_LOADER_URL_REPLACEMENT_5___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Regular_ttf__WEBPACK_IMPORTED_MODULE_8__),___CSS_LOADER_URL_REPLACEMENT_6___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_SemiBold_woff2__WEBPACK_IMPORTED_MODULE_9__),___CSS_LOADER_URL_REPLACEMENT_7___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_SemiBold_woff__WEBPACK_IMPORTED_MODULE_10__),___CSS_LOADER_URL_REPLACEMENT_8___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_SemiBold_ttf__WEBPACK_IMPORTED_MODULE_11__),___CSS_LOADER_URL_REPLACEMENT_9___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_SemiBoldItalic_woff2__WEBPACK_IMPORTED_MODULE_12__),___CSS_LOADER_URL_REPLACEMENT_10___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_SemiBoldItalic_woff__WEBPACK_IMPORTED_MODULE_13__),___CSS_LOADER_URL_REPLACEMENT_11___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_SemiBoldItalic_ttf__WEBPACK_IMPORTED_MODULE_14__),___CSS_LOADER_URL_REPLACEMENT_12___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Bold_woff2__WEBPACK_IMPORTED_MODULE_15__),___CSS_LOADER_URL_REPLACEMENT_13___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Bold_woff__WEBPACK_IMPORTED_MODULE_16__),___CSS_LOADER_URL_REPLACEMENT_14___=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_OpenSans_Bold_ttf__WEBPACK_IMPORTED_MODULE_17__);___CSS_LOADER_EXPORT___.push([module.id,'@font-face {\n  font-family: "OpenSans-Italic";\n  src: url('+___CSS_LOADER_URL_REPLACEMENT_0___+') format("woff21"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_1___+') format("woff"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_2___+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-Regular";\n  src: url('+___CSS_LOADER_URL_REPLACEMENT_3___+') format("woff2"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_4___+') format("woff"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_5___+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-SemiBold";\n  src: url('+___CSS_LOADER_URL_REPLACEMENT_6___+') format("woff2"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_7___+') format("woff"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_8___+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-SemiBoldItalic";\n  src: url('+___CSS_LOADER_URL_REPLACEMENT_9___+') format("woff2"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_10___+') format("woff"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_11___+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-Bold";\n  src: url('+___CSS_LOADER_URL_REPLACEMENT_12___+') format("woff2"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_13___+') format("woff"),\n    url('+___CSS_LOADER_URL_REPLACEMENT_14___+') format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n',"",{version:3,sources:["webpack://./../../packages/boi-fonts/dist/boi-fonts.css"],names:[],mappings:"AAAA;EACE,8BAA8B;EAC9B;;8DAE+C;EAC/C,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,+BAA+B;EAC/B;;8DAEgD;EAChD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gCAAgC;EAChC;;8DAEiD;EACjD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,sCAAsC;EACtC;;+DAEuD;EACvD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,4BAA4B;EAC5B;;+DAE6C;EAC7C,mBAAmB;EACnB,kBAAkB;AACpB",sourcesContent:['@font-face {\n  font-family: "OpenSans-Italic";\n  src: url("OpenSans-Italic.woff2") format("woff21"),\n    url("OpenSans-Italic.woff") format("woff"),\n    url("OpenSans-Italic.ttf") format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-Regular";\n  src: url("OpenSans-Regular.woff2") format("woff2"),\n    url("OpenSans-Regular.woff") format("woff"),\n    url("OpenSans-Regular.ttf") format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-SemiBold";\n  src: url("OpenSans-SemiBold.woff2") format("woff2"),\n    url("OpenSans-SemiBold.woff") format("woff"),\n    url("OpenSans-SemiBold.ttf") format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-SemiBoldItalic";\n  src: url("OpenSans-SemiBoldItalic.woff2") format("woff2"),\n    url("OpenSans-SemiBoldItalic.woff") format("woff"),\n    url("OpenSans-SemiBoldItalic.ttf") format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "OpenSans-Bold";\n  src: url("OpenSans-Bold.woff2") format("woff2"),\n    url("OpenSans-Bold.woff") format("woff"),\n    url("OpenSans-Bold.ttf") format("truetype");\n  font-weight: normal;\n  font-style: normal;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"../../packages/boi-fonts/dist/boi-fonts.css":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_boi_fonts_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../packages/boi-fonts/dist/boi-fonts.css"),options={insert:"head",singleton:!1};_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_boi_fonts_css__WEBPACK_IMPORTED_MODULE_1__.Z,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_boi_fonts_css__WEBPACK_IMPORTED_MODULE_1__.Z.locals||{}},"../../packages/boi-react-native-components/src/Alert/Alert.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithTitle=exports.CustomIconColor=exports.CustomIcon=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),Icons=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-icons/dist/index.js")),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_reactUtils=__webpack_require__("../../packages/boi-react-utils/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/Alert/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var color=_app.lightScheme.color,_default={title:"components/Alert",component:_.Alert,args:{text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."},argTypes:{icon:(0,_reactUtils.getIconSelectArgType)(Icons),pressableProps:{control:{disable:!0}}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.Alert,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic";var WithTitle=function WithTitle(args){return(0,_jsxRuntime.jsx)(_.Alert,Object.assign({},args))};exports.WithTitle=WithTitle,WithTitle.displayName="WithTitle",WithTitle.args={title:"What is this error about?",pressableProps:{onPress:(0,_addonActions.action)("onPress")}};var CustomIcon=function CustomIcon(args){return(0,_jsxRuntime.jsx)(_.Alert,Object.assign({},args))};exports.CustomIcon=CustomIcon,CustomIcon.displayName="CustomIcon",CustomIcon.args={icon:(0,_jsxRuntime.jsx)(Icons.EditIcon,{})};var CustomIconColor=function CustomIconColor(args){return(0,_jsxRuntime.jsx)(_.Alert,Object.assign({},args))};exports.CustomIconColor=CustomIconColor,CustomIconColor.displayName="CustomIconColor",CustomIconColor.args={icon:(0,_jsxRuntime.jsx)(Icons.EditIcon,{color:color.red})},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <Alert {...args} />\n)"}},Basic.parameters),WithTitle.parameters=Object.assign({storySource:{source:"(args) => (\n  <Alert {...args} />\n)"}},WithTitle.parameters),CustomIcon.parameters=Object.assign({storySource:{source:"(args) => (\n  <Alert {...args} />\n)"}},CustomIcon.parameters),CustomIconColor.parameters=Object.assign({storySource:{source:"(args) => (\n  <Alert {...args} />\n)"}},CustomIconColor.parameters);exports.__namedExportsOrder=["Basic","WithTitle","CustomIcon","CustomIconColor"]},"../../packages/boi-react-native-components/src/BasicAlert/BasicAlert.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _=__webpack_require__("../../packages/boi-react-native-components/src/BasicAlert/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/BasicAlert",component:_.BasicAlert};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.BasicAlert,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <BasicAlert {...args} />\n)"}},Basic.parameters);exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/BottomSheet/BottomSheet.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0;_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_BottomSheet=__webpack_require__("../../packages/boi-react-native-components/src/BottomSheet/BottomSheet.web.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/BottomSheet",component:_BottomSheet.BottomSheet,args:{index:1,snapPoints:[70,"25%","40%","75%"],children:function children(){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{alignItems:"center",marginTop:32},children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{children:"Custom text"}),"android"===_reactNative.Platform.OS?(0,_jsxRuntime.jsx)(_reactNative.Text,{style:{color:"red",textAlign:"center"},children:"You can't drag and adjust the BottomSheet on Android inside Storybook. You may use Storybook controls to set the current index."}):void 0,(0,_jsxRuntime.jsx)(_reactNative.Text,{style:{fontSize:128,marginTop:"55%"},children:" 🎉"})]})}}};exports.default=_default;var Basic=_BottomSheet.BottomSheet;exports.Basic=Basic,Basic.args={};exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/Button/Button.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.StartIcon=exports.EndIcon=exports.CustomIconColour=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _Button=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/Button.tsx")),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/Button",component:_Button.default,argTypes:{disabled:{control:{type:"boolean"}},startIcon:{control:{disable:!0}},endIcon:{control:{disable:!0}}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={text:"Button Text"};var StartIcon=function StartIcon(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.StartIcon=StartIcon,StartIcon.displayName="StartIcon",StartIcon.args={text:"Button Text",startIcon:(0,_jsxRuntime.jsx)(_reactNativeIcons.ArrowLeftIcon,{height:20,width:20})};var EndIcon=function EndIcon(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.EndIcon=EndIcon,EndIcon.displayName="EndIcon",EndIcon.args={text:"Button Text",endIcon:(0,_jsxRuntime.jsx)(_reactNativeIcons.ArrowRightIcon,{height:20,width:20})};var CustomIconColour=function CustomIconColour(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.CustomIconColour=CustomIconColour,CustomIconColour.displayName="CustomIconColour",CustomIconColour.args={text:"Button Text",endIcon:(0,_jsxRuntime.jsx)(_reactNativeIcons.ArrowRightIcon,{height:20,width:20,color:"hotpink"})},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},Basic.parameters),StartIcon.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},StartIcon.parameters),EndIcon.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},EndIcon.parameters),CustomIconColour.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},CustomIconColour.parameters);exports.__namedExportsOrder=["Basic","StartIcon","EndIcon","CustomIconColour"]},"../../packages/boi-react-native-components/src/ButtonV2/Button.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.StartIcon=exports.SecondaryAlt=exports.Secondary=exports.PrimaryAlt=exports.Primary=exports.EndIcon=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _Button=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/Button.tsx")),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/ButtonV2",component:_Button.default,argTypes:{disabled:{control:{type:"boolean"}},startIcon:{control:{disable:!0}},endIcon:{control:{disable:!0}}},args:{text:"Button Text"},parameters:{backgrounds:{default:"Ground Grey",values:[{name:"Ground Grey",value:"#ECEEF6"},{name:"Ireland Blue",value:"#265AF1"},{name:"DM Primary",value:"#121212"}]}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic";var Primary=function Primary(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args,{variant:"primary"}))};exports.Primary=Primary,Primary.displayName="Primary",Primary.argTypes={variant:{control:{disable:!0}}};var PrimaryAlt=function PrimaryAlt(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args,{variant:"primaryAlt"}))};exports.PrimaryAlt=PrimaryAlt,PrimaryAlt.displayName="PrimaryAlt",PrimaryAlt.argTypes={variant:{control:{disable:!0}}};var Secondary=function Secondary(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args,{variant:"secondary"}))};exports.Secondary=Secondary,Secondary.displayName="Secondary",Secondary.argTypes={variant:{control:{disable:!0}}};var SecondaryAlt=function SecondaryAlt(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args,{variant:"secondaryAlt"}))};exports.SecondaryAlt=SecondaryAlt,SecondaryAlt.displayName="SecondaryAlt",SecondaryAlt.argTypes={variant:{control:{disable:!0}}};var StartIcon=function StartIcon(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.StartIcon=StartIcon,StartIcon.displayName="StartIcon",StartIcon.args={startIcon:(0,_jsxRuntime.jsx)(_reactNativeIcons.ArrowLeftIcon,{height:20,width:20})};var EndIcon=function EndIcon(args){return(0,_jsxRuntime.jsx)(_Button.default,Object.assign({},args))};exports.EndIcon=EndIcon,EndIcon.displayName="EndIcon",EndIcon.args={endIcon:(0,_jsxRuntime.jsx)(_reactNativeIcons.ArrowRightIcon,{height:20,width:20})},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},Basic.parameters),Primary.parameters=Object.assign({storySource:{source:'(args) => (\n  <Button {...args} variant="primary" />\n)'}},Primary.parameters),PrimaryAlt.parameters=Object.assign({storySource:{source:'(args) => (\n  <Button {...args} variant="primaryAlt" />\n)'}},PrimaryAlt.parameters),Secondary.parameters=Object.assign({storySource:{source:'(args) => (\n  <Button {...args} variant="secondary" />\n)'}},Secondary.parameters),SecondaryAlt.parameters=Object.assign({storySource:{source:'(args) => (\n  <Button {...args} variant="secondaryAlt" />\n)'}},SecondaryAlt.parameters),StartIcon.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},StartIcon.parameters),EndIcon.parameters=Object.assign({storySource:{source:"(args) => (\n  <Button {...args} />\n)"}},EndIcon.parameters);exports.__namedExportsOrder=["Basic","Primary","PrimaryAlt","Secondary","SecondaryAlt","StartIcon","EndIcon"]},"../../packages/boi-react-native-components/src/Card/Card.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Rounded=exports.Elevation=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_=__webpack_require__("../../packages/boi-react-native-components/src/Card/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),color=_app.lightScheme.color,_default={title:"components/Card",component:_.Card,args:{children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:{height:150}})},argTypes:{children:{control:{disable:!0}}},decorators:[function(Story){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{padding:20},children:(0,_jsxRuntime.jsx)(Story,{})})}],parameters:{backgrounds:{default:"Highlight Panels",values:[{name:"Highlight Panels",value:color.highlightPanels}]}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.Card,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic";var Rounded=function Rounded(args){return(0,_jsxRuntime.jsx)(_.Card,Object.assign({},args))};exports.Rounded=Rounded,Rounded.displayName="Rounded",Rounded.args={variant:"rounded"};var Elevation=function Elevation(args){return(0,_jsxRuntime.jsx)(_.Card,Object.assign({},args))};exports.Elevation=Elevation,Elevation.displayName="Elevation",Elevation.args={variant:"rounded",elevation:6},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  return <Card {...args} />;\n}"}},Basic.parameters),Rounded.parameters=Object.assign({storySource:{source:"(args) => {\n  return <Card {...args} />;\n}"}},Rounded.parameters),Elevation.parameters=Object.assign({storySource:{source:"(args) => {\n  return <Card {...args} />;\n}"}},Elevation.parameters);exports.__namedExportsOrder=["Basic","Rounded","Elevation"]},"../../packages/boi-react-native-components/src/Checkbox/Checkbox.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithLabel=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/Checkbox/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/Checkbox",component:_.Checkbox};function useCommonArgs(){var _useArgs=(0,_clientApi.useArgs)(),updateArgs=(0,_slicedToArray2.default)(_useArgs,2)[1];return{handleChange:function handleChange(_ref){var checked=_ref.checked;(0,_addonActions.action)("onChange")({checked}),updateArgs({checked})}}}exports.default=_default;var Basic=function Basic(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Checkbox,Object.assign({},args,{onChange:handleChange}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={value:1,checked:!1};var WithLabel=function WithLabel(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Checkbox,Object.assign({},args,{onChange:handleChange}))};exports.WithLabel=WithLabel,WithLabel.displayName="WithLabel",WithLabel.args={value:1,label:"Option 01",checked:!1},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Checkbox {...args} onChange={handleChange} />;\n}"}},Basic.parameters),WithLabel.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Checkbox {...args} onChange={handleChange} />;\n}"}},WithLabel.parameters);exports.__namedExportsOrder=["Basic","WithLabel"]},"../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithChildren=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/CircularProgress/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/CircularProgress",component:_.CircularProgress,argTypes:{percent:{control:{type:"range",min:0,max:100}}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.CircularProgress,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={percent:25};var WithChildren=function WithChildren(args){var percent=args.percent;return(0,_jsxRuntime.jsx)(_.CircularProgress,Object.assign({},args,{children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:{fontSize:42,fontWeight:"700"},children:percent+"%"})}))};exports.WithChildren=WithChildren,WithChildren.displayName="WithChildren",WithChildren.args={percent:75},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  return <CircularProgress {...args} />;\n}"}},Basic.parameters),WithChildren.parameters=Object.assign({storySource:{source:'(args) => {\n  const { percent } = args;\n\n  return (\n    <CircularProgress {...args}>\n      <Text style={{ fontSize: 42, fontWeight: "700" }}>{`${percent}%`}</Text>\n    </CircularProgress>\n  );\n}'}},WithChildren.parameters);exports.__namedExportsOrder=["Basic","WithChildren"]},"../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Customised=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),Icons=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-icons/dist/index.js")),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_reactUtils=__webpack_require__("../../packages/boi-react-utils/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/IconButtonBase/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var color=_app.lightScheme.color,_default={title:"components/IconButtonBase",component:_.IconButtonBase,argTypes:{icon:(0,_reactUtils.getIconSelectArgType)(Icons),backgroundColor:(0,_reactUtils.getColorSelectArgType)(color)}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.IconButtonBase,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={icon:(0,_jsxRuntime.jsx)(Icons.SendMoneyIcon,{color:color.darkGrey}),backgroundColor:color.eggshell,text:"Send Money"};var Customised=function Customised(args){return(0,_jsxRuntime.jsx)(_.IconButtonBase,Object.assign({},args))};exports.Customised=Customised,Customised.displayName="Customised",Customised.args={icon:function icon(_ref){var isFocusVisible=_ref.isFocusVisible,pressed=_ref.pressed,hovered=_ref.hovered,iconColor=color.darkGrey;return pressed||!hovered&&!isFocusVisible||(iconColor=color.white),(0,_jsxRuntime.jsx)(Icons.SendMoneyIcon,{color:iconColor})},backgroundColor:function backgroundColor(_ref2){var isFocusVisible=_ref2.isFocusVisible,pressed=_ref2.pressed,hovered=_ref2.hovered,backgroundColor=color.eggshell;return pressed?backgroundColor=color.teal:(hovered||isFocusVisible)&&(backgroundColor=color.fern),backgroundColor},text:"This is a really long label hopefully it doesn't break our component",textProps:{numberOfLines:2},pressableProps:{disabled:!1,onPress:(0,_addonActions.action)("onPress")}},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <IconButtonBase {...args} />\n)"}},Basic.parameters),Customised.parameters=Object.assign({storySource:{source:"(args) => (\n  <IconButtonBase {...args} />\n)"}},Customised.parameters);exports.__namedExportsOrder=["Basic","Customised"]},"../../packages/boi-react-native-components/src/Map/Map.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/Map/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/Map",component:_.Map,decorators:[function(Story){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{height:300},children:(0,_jsxRuntime.jsx)(Story,{})})}]};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.Map,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={googleMapsApiKey:"AIzaSyC4Lg3pnVgwHab2po48Ie7dkNJwzONsY1M",initialZoomLevel:14,center:{latitude:53.35014,longitude:-6.266155},markers:[{latitude:53.35014,longitude:-6.266155}]},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  return <Map {...args} />;\n}"}},Basic.parameters);exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/MapCard/MapCard.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_=__webpack_require__("../../packages/boi-react-native-components/src/MapCard/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),color=_app.lightScheme.color,_default={title:"components/MapCard",component:_.MapCard,decorators:[function(Story){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{padding:20},children:(0,_jsxRuntime.jsx)(Story,{})})}],parameters:{backgrounds:{default:"Background",values:[{name:"Background",value:color.background}]}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.MapCard,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={googleMapsApiKey:"AIzaSyC4Lg3pnVgwHab2po48Ie7dkNJwzONsY1M",title:"Bank of Ireland, Dublin",subtitle:"10th May 2023 - 12:30",price:"€10",latitude:53.35014,longitude:-6.266155},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  return <MapCard {...args} />;\n}"}},Basic.parameters);exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/NumberField/NumberField.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Interactive=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react/index.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_NumberField=__webpack_require__("../../packages/boi-react-native-components/src/NumberField/NumberField.tsx"),_Adornament=__webpack_require__("../../packages/boi-react-native-components/src/Adornament/Adornament.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var disableBuggyAccessibilityPropsOnIOS=_reactNative.Platform.select({android:{},ios:{onAccessibilityEscape:void 0,onAccessibilityAction:void 0,onAccessibilityTap:void 0,onMagicTap:void 0}}),_default={title:"components/NumberField",component:_NumberField.NumberField};exports.default=_default;var Interactive=function Interactive(args){var _useState=(0,_react.useState)(args.value),_useState2=(0,_slicedToArray2.default)(_useState,2),value=_useState2[0],setValue=_useState2[1];return(0,_jsxRuntime.jsx)(_NumberField.NumberField,Object.assign({},args,{value,onChangeText:function onChangeText(newValue){args.onChangeText&&args.onChangeText(newValue),setValue(newValue)}}))};exports.Interactive=Interactive,Interactive.displayName="Interactive",Interactive.args=Object.assign({maxDecimalPlaces:2,hasCommaSeperators:!0,min:-500,max:75e7,startAdornament:(0,_jsxRuntime.jsx)(_Adornament.Adornament,{children:(0,_jsxRuntime.jsx)(_reactNative.Text,{children:"€"})}),placeholder:"My NumberField"},disableBuggyAccessibilityPropsOnIOS),Interactive.parameters=Object.assign({storySource:{source:"(args) => {\n  const [value, setValue] = useState(args.value);\n  const onChangeText = (newValue: string) => {\n    if (args.onChangeText) {\n      args.onChangeText(newValue);\n    }\n    setValue(newValue);\n  };\n  return <NumberField {...args} value={value} onChangeText={onChangeText} />;\n}"}},Interactive.parameters);exports.__namedExportsOrder=["Interactive"]},"../../packages/boi-react-native-components/src/OuterField/OuterField.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithAdornament=exports.Disabled=exports.Default=exports.Active=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_OuterField=__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.tsx"),_Adornament=__webpack_require__("../../packages/boi-react-native-components/src/Adornament/index.ts"),_PressableAdornament=__webpack_require__("../../packages/boi-react-native-components/src/PressableAdornament/index.ts"),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),inputDimensions=_app.lightScheme.inputDimensions,inputText=_app.lightScheme.inputText,_default={title:"components/OuterField",component:_OuterField.OuterField,args:{children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:{flex:1,height:inputDimensions.height}})}};exports.default=_default;var Default=function Default(args){return(0,_jsxRuntime.jsx)(_OuterField.OuterField,Object.assign({},args))};exports.Default=Default,Default.displayName="Default",Default.args={};var Active=function Active(args){return(0,_jsxRuntime.jsx)(_OuterField.OuterField,Object.assign({},args))};exports.Active=Active,Active.displayName="Active",Active.args={isActive:!0};var Disabled=function Disabled(args){return(0,_jsxRuntime.jsx)(_OuterField.OuterField,Object.assign({},args))};exports.Disabled=Disabled,Disabled.displayName="Disabled",Disabled.args={disabled:!0};var WithAdornament=function WithAdornament(args){return(0,_jsxRuntime.jsx)(_OuterField.OuterField,Object.assign({},args))};exports.WithAdornament=WithAdornament,WithAdornament.displayName="WithAdornament",WithAdornament.args={startAdornament:(0,_jsxRuntime.jsx)(_Adornament.Adornament,{children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:{fontSize:inputText.fontSize},children:"€"})}),endAdornament:(0,_jsxRuntime.jsx)(_PressableAdornament.PressableAdornament,{onPress:(0,_addonActions.action)("AdornamentPress"),children:(0,_jsxRuntime.jsx)(_reactNativeIcons.CalculatorIcon,{height:24,width:24})})},Default.parameters=Object.assign({storySource:{source:"(args) => (\n  <OuterField {...args} />\n)"}},Default.parameters),Active.parameters=Object.assign({storySource:{source:"(args) => (\n  <OuterField {...args} />\n)"}},Active.parameters),Disabled.parameters=Object.assign({storySource:{source:"(args) => (\n  <OuterField {...args} />\n)"}},Disabled.parameters),WithAdornament.parameters=Object.assign({storySource:{source:"(args) => (\n  <OuterField {...args} />\n)"}},WithAdornament.parameters);exports.__namedExportsOrder=["Default","Active","Disabled","WithAdornament"]},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),color=_app.lightScheme.color,_default={title:"components/QuickLinks",component:_.QuickLinks,parameters:{backgrounds:{default:"Highlight Panels",values:[{name:"Highlight Panels",value:color.highlightPanels}]}}};exports.default=_default;var Basic=function Basic(args){var _useArgs=(0,_clientApi.useArgs)(),updateArgs=(0,_slicedToArray2.default)(_useArgs,2)[1];return(0,_jsxRuntime.jsx)(_.QuickLinks,Object.assign({},args,{onChange:function handleChange(items){(0,_addonActions.action)("onChange")({items}),updateArgs({items})}}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={items:[{key:"0",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.SendMoneyIcon,{color:color.darkGrey}),title:"Send money",category:"Payments",enabled:!0},{key:"1",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.TransferIcon,{color:color.darkGrey}),title:"Transfer",category:"Payments",enabled:!0},{key:"2",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.UserIcon,{color:color.darkGrey}),title:"Payees",category:"Payments",enabled:!0},{key:"3",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.SendMobileIcon,{color:color.darkGrey}),title:"Pay to mobile",category:"Services",enabled:!0},{key:"4",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.LoanIcon,{color:color.darkGrey}),title:"Products",category:"Apply",enabled:!1},{key:"5",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.MobileIcon,{color:color.darkGrey}),title:"Mobile top up",category:"Payments",enabled:!1},{key:"6",icon:(0,_jsxRuntime.jsx)(_reactNativeIcons.MobileIcon,{color:color.darkGrey}),title:"My registered devices",category:"Profile",enabled:!1}],maxItemsEnabled:4};exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/Radio/Radio.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithLabel=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/Radio/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/Radio",component:_.Radio};function useCommonArgs(){var _useArgs=(0,_clientApi.useArgs)(),updateArgs=(0,_slicedToArray2.default)(_useArgs,2)[1];return{handleChange:function handleChange(_ref){var checked=_ref.checked;(0,_addonActions.action)("onChange")({checked}),updateArgs({checked})}}}exports.default=_default;var Basic=function Basic(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Radio,Object.assign({},args,{onChange:handleChange}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={value:1,checked:!1};var WithLabel=function WithLabel(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Radio,Object.assign({},args,{onChange:handleChange}))};exports.WithLabel=WithLabel,WithLabel.displayName="WithLabel",WithLabel.args={value:1,label:"Option 01",checked:!1},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Radio {...args} onChange={handleChange} />;\n}"}},Basic.parameters),WithLabel.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Radio {...args} onChange={handleChange} />;\n}"}},WithLabel.parameters);exports.__namedExportsOrder=["Basic","WithLabel"]},"../../packages/boi-react-native-components/src/RadioGroup/RadioGroup.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/RadioGroup/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/RadioGroup",component:_.RadioGroup,argTypes:{checkedValue:{control:{type:"number"}}}};exports.default=_default;var Basic=function Basic(args){var _useArgs=(0,_clientApi.useArgs)(),_useArgs2=(0,_slicedToArray2.default)(_useArgs,2),checkedValue=_useArgs2[0].checkedValue,updateArgs=_useArgs2[1];return(0,_jsxRuntime.jsx)(_.RadioGroup,Object.assign({},args,{checkedValue,onChange:function handleChange(_ref){var value=_ref.value;(0,_addonActions.action)("onChange")({value}),updateArgs({checkedValue:value})}}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={name:"radio-group-name",options:[{label:"Option 01",value:1},{label:"Option 02",value:2},{label:"Option 03",value:3}]},Basic.parameters=Object.assign({storySource:{source:'(args) => {\n  const [{ checkedValue }, updateArgs] = useArgs();\n\n  const handleChange = ({ value }: { value: number | string }) => {\n    action("onChange")({ value });\n    updateArgs({ checkedValue: value });\n  };\n\n  return (\n    <RadioGroup {...args} checkedValue={checkedValue} onChange={handleChange} />\n  );\n}'}},Basic.parameters);exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/Select/Select.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Interactive=exports.InScrollView=exports.Basic=exports.AsAdornament=void 0;var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js"));__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.map.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.fill.js");_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_Select=__webpack_require__("../../packages/boi-react-native-components/src/Select/Select.tsx"),_SelectAdornament=__webpack_require__("../../packages/boi-react-native-components/src/Select/SelectAdornament/index.ts"),_TextField=__webpack_require__("../../packages/boi-react-native-components/src/TextField/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/Select",component:_Select.Select,args:{placeholder:"My Selectbox",options:[{label:"Item 1",value:"1"},{label:"Item 2",value:"2"},{label:"Item 3",value:"3"},{label:"Item 4",value:"4"},{label:"Item 5",value:"5"},{label:"Item 6",value:"6"},{label:"Item 7",value:"7"},{label:"Item 8",value:"8"}]},decorators:[function(Story){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{paddingHorizontal:8,marginTop:8},children:(0,_jsxRuntime.jsx)(Story,{})})}]};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_Select.Select,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={};var Interactive=function Interactive(args){var _useArgs=(0,_clientApi.useArgs)(),_useArgs2=(0,_slicedToArray2.default)(_useArgs,2),value=_useArgs2[0].value,updateArgs=_useArgs2[1];return(0,_jsxRuntime.jsx)(_Select.Select,Object.assign({},args,{value,onChange:function onChange(newValue){args.onChange&&args.onChange(newValue),updateArgs({value:newValue})}}))};exports.Interactive=Interactive,Interactive.displayName="Interactive",Interactive.args={};var InScrollView=function InScrollView(args){var _useArgs3=(0,_clientApi.useArgs)(),_useArgs4=(0,_slicedToArray2.default)(_useArgs3,2),value=_useArgs4[0].value,updateArgs=_useArgs4[1],onChange=function onChange(newValue){args.onChange&&args.onChange(newValue),updateArgs({value:newValue})};return(0,_jsxRuntime.jsx)(_reactNative.ScrollView,{children:new Array(40).fill(0).map((function(_v,index){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{paddingBottom:8},children:(0,_jsxRuntime.jsx)(_Select.Select,Object.assign({},args,{value,onChange}))},index)}))})};exports.InScrollView=InScrollView,InScrollView.displayName="InScrollView",InScrollView.args={};var AsAdornament=function AsAdornament(args){var _useArgs5=(0,_clientApi.useArgs)(),_useArgs6=(0,_slicedToArray2.default)(_useArgs5,2),value=_useArgs6[0].value,updateArgs=_useArgs6[1];return(0,_jsxRuntime.jsx)(_TextField.TextField,{placeholder:"Phone Number",startAdornament:(0,_jsxRuntime.jsx)(_SelectAdornament.SelectAdornament,Object.assign({},args,{value,onChange:function onChange(newValue){args.onChange&&args.onChange(newValue),updateArgs({value:newValue})}}))})};exports.AsAdornament=AsAdornament,AsAdornament.displayName="AsAdornament",AsAdornament.args={placeholder:"Country",options:[{label:"🇮🇪",value:"+353"},{label:"🇬🇧",value:"+44"},{label:"🇧🇷",value:"+55"},{label:"Norway",value:"+47"},{label:"Papua New Guinea ",value:"+675"}]},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <Select {...args} />\n)"}},Basic.parameters),Interactive.parameters=Object.assign({storySource:{source:"(args) => {\n  const [{ value }, updateArgs] = useArgs();\n  const onChange = (newValue: string) => {\n    if (args.onChange) {\n      args.onChange(newValue);\n    }\n    updateArgs({ value: newValue });\n  };\n  return <Select {...args} value={value} onChange={onChange} />;\n}"}},Interactive.parameters),InScrollView.parameters=Object.assign({storySource:{source:"(args) => {\n  const [{ value }, updateArgs] = useArgs();\n  const onChange = (newValue: string) => {\n    if (args.onChange) {\n      args.onChange(newValue);\n    }\n    updateArgs({ value: newValue });\n  };\n  const count = 40;\n  return (\n    <ScrollView>\n      {new Array(count).fill(0).map((_v, index) => (\n        <View key={index} style={{ paddingBottom: 8 }}>\n          <Select {...args} value={value} onChange={onChange} />\n        </View>\n      ))}\n    </ScrollView>\n  );\n}"}},InScrollView.parameters),AsAdornament.parameters=Object.assign({storySource:{source:'(args) => {\n  const [{ value }, updateArgs] = useArgs();\n  const onChange = (newValue: string) => {\n    if (args.onChange) {\n      args.onChange(newValue);\n    }\n    updateArgs({ value: newValue });\n  };\n  return (\n    <TextField\n      placeholder="Phone Number"\n      startAdornament={\n        <SelectAdornament {...args} value={value} onChange={onChange} />\n      }\n    />\n  );\n}'}},AsAdornament.parameters);exports.__namedExportsOrder=["Basic","Interactive","InScrollView","AsAdornament"]},"../../packages/boi-react-native-components/src/Slider/Slider.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Initial25=exports.Disabled=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _=__webpack_require__("../../packages/boi-react-native-components/src/Slider/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_default={title:"components/Slider",componenr:_.Slider,argTypes:{disabled:{control:{type:"boolean"}},minimumValue:{control:{type:"number"}},maximumValue:{control:{type:"number"}},onValueChange:{action:"changed"}}};exports.default=_default;var buildOnValueChangeHandler=function buildOnValueChangeHandler(args){return function(newValue){args.onValueChange&&args.onValueChange(newValue)}},Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_.Slider,Object.assign({},args,{value:args.value,onValueChange:buildOnValueChangeHandler(args)}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={value:1,minimumValue:1,maximumValue:100};var Initial25=function Initial25(args){return(0,_jsxRuntime.jsx)(_.Slider,Object.assign({},args,{value:args.value,onValueChange:buildOnValueChangeHandler(args)}))};exports.Initial25=Initial25,Initial25.displayName="Initial25",Initial25.args={value:25,minimumValue:1,maximumValue:100};var Disabled=function Disabled(args){return(0,_jsxRuntime.jsx)(_.Slider,Object.assign({},args,{value:args.value,onValueChange:buildOnValueChangeHandler(args)}))};exports.Disabled=Disabled,Disabled.displayName="Disabled",Disabled.args={disabled:!0,value:20,minimumValue:1,maximumValue:100},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <Slider\n    {...args}\n    value={args.value}\n    onValueChange={buildOnValueChangeHandler(args)}\n  />\n)"}},Basic.parameters),Initial25.parameters=Object.assign({storySource:{source:"(args) => (\n  <Slider\n    {...args}\n    value={args.value}\n    onValueChange={buildOnValueChangeHandler(args)}\n  />\n)"}},Initial25.parameters),Disabled.parameters=Object.assign({storySource:{source:"(args) => (\n  <Slider\n    {...args}\n    value={args.value}\n    onValueChange={buildOnValueChangeHandler(args)}\n  />\n)"}},Disabled.parameters);exports.__namedExportsOrder=["Basic","Initial25","Disabled"]},"../../packages/boi-react-native-components/src/Stepper/Step/Step.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Step/index.ts"),stepperStyles=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Stepper.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var _default={title:"components/Step",component:_.Step,args:{index:0,title:"My Title",orientation:"horizontal"},argTypes:{orientation:{control:{type:"select"},options:["horizontal","vertical"]}}};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:"horizontal"===args.orientation?stepperStyles.container.default:stepperStyles.container.isVertical,children:(0,_jsxRuntime.jsx)(_.Step,Object.assign({},args))})};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={},Basic.parameters=Object.assign({storySource:{source:'(args) => (\n  <View\n    style={\n      args.orientation === "horizontal"\n        ? stepperStyles.container.default\n        : stepperStyles.container.isVertical\n    }\n  >\n    <Step {...args} />\n  </View>\n)'}},Basic.parameters);exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/Stepper/Stepper.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Basic=void 0;var _=__webpack_require__("../../packages/boi-react-native-components/src/Stepper/index.ts"),_default={title:"components/Stepper",component:_.Stepper,args:{steps:[{title:"First step",isCompleted:!0},{title:"Second step"},{title:"Third step"},{title:"Forth step",isDisabled:!0}],activeStepIndex:1,orientation:"horizontal"}};exports.default=_default;var Basic=_.Stepper;exports.Basic=Basic,Basic.args={};exports.__namedExportsOrder=["Basic"]},"../../packages/boi-react-native-components/src/Switch/Switch.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.WithText=exports.Expanded=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_reactUtils=__webpack_require__("../../packages/boi-react-utils/dist/index.js"),_=__webpack_require__("../../packages/boi-react-native-components/src/Switch/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),color=_app.lightScheme.color,_default={title:"components/Switch",component:_.Switch,argTypes:{checkedTextColor:(0,_reactUtils.getColorSelectArgType)(color),uncheckedTextColor:(0,_reactUtils.getColorSelectArgType)(color),checkedBackgroundColor:(0,_reactUtils.getColorSelectArgType)(color),uncheckedBackgroundColor:(0,_reactUtils.getColorSelectArgType)(color)}};function useCommonArgs(){var _useArgs=(0,_clientApi.useArgs)(),updateArgs=(0,_slicedToArray2.default)(_useArgs,2)[1];return{handleChange:function handleChange(checked){(0,_addonActions.action)("onChange")({checked}),updateArgs({checked})}}}exports.default=_default;var Basic=function Basic(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Switch,Object.assign({},args,{onChange:handleChange}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={checked:!1,ariaLabel:"Switch Label"};var WithText=function WithText(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Switch,Object.assign({},args,{onChange:handleChange}))};exports.WithText=WithText,WithText.displayName="WithText",WithText.args={checked:!1,checkedText:"On",uncheckedText:"Off",ariaLabel:"Switch Label"};var Expanded=function Expanded(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Switch,Object.assign({},args,{onChange:handleChange}))};exports.Expanded=Expanded,Expanded.displayName="Expanded",Expanded.args={checked:!1,width:250,checkedText:"Approved",uncheckedText:"Swipe to approve",checkedTextColor:color.darkGrey,checkedBackgroundColor:color.teal,disableTapGesture:!0,ariaLabel:"Switch Label"},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Switch {...args} onChange={handleChange} />;\n}"}},Basic.parameters),WithText.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Switch {...args} onChange={handleChange} />;\n}"}},WithText.parameters),Expanded.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Switch {...args} onChange={handleChange} />;\n}"}},Expanded.parameters);exports.__namedExportsOrder=["Basic","WithText","Expanded"]},"../../packages/boi-react-native-components/src/Tabs/Tabs.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Center=exports.Basic=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/esm/index.js"),_clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_=__webpack_require__("../../packages/boi-react-native-components/src/Tabs/index.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),color=_app.lightScheme.color,_default={title:"components/Tabs",component:_.Tabs,decorators:[function(Story){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{padding:20},children:(0,_jsxRuntime.jsx)(Story,{})})}],argTypes:{variant:{control:{type:"select"},options:["inline","center"]}},parameters:{backgrounds:{default:"Background",values:[{name:"Background",value:color.background}]}}};function useCommonArgs(){var _useArgs=(0,_clientApi.useArgs)(),updateArgs=(0,_slicedToArray2.default)(_useArgs,2)[1];return{handleChange:function handleChange(tabIndex){(0,_addonActions.action)("onChange")({tabIndex}),updateArgs({activeTabIndex:tabIndex})}}}exports.default=_default;var Basic=function Basic(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Tabs,Object.assign({},args,{onChange:handleChange}))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args={tabs:[{label:"All insights"},{label:"Unread insights"}],activeTabIndex:0};var Center=function Center(args){var handleChange=useCommonArgs().handleChange;return(0,_jsxRuntime.jsx)(_.Tabs,Object.assign({},args,{onChange:handleChange}))};exports.Center=Center,Center.displayName="Center",Center.args={tabs:[{label:"All insights"},{label:"Unread insights"}],activeTabIndex:0,variant:"center"},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Tabs {...args} onChange={handleChange} />;\n}"}},Basic.parameters),Center.parameters=Object.assign({storySource:{source:"(args) => {\n  const { handleChange } = useCommonArgs();\n\n  return <Tabs {...args} onChange={handleChange} />;\n}"}},Center.parameters);exports.__namedExportsOrder=["Basic","Center"]},"../../packages/boi-react-native-components/src/TextField/TextField.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Interactive=exports.Basic=void 0;var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js"));__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react/index.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_TextField=__webpack_require__("../../packages/boi-react-native-components/src/TextField/TextField.tsx"),_Background=__webpack_require__("../../packages/boi-react-native-components/src/Background/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var disableBuggyAccessibilityPropsOnIOS=_reactNative.Platform.select({android:{},ios:{onAccessibilityEscape:void 0,onAccessibilityAction:void 0,onAccessibilityTap:void 0,onMagicTap:void 0}}),_default={title:"components/TextField",component:_TextField.TextField,decorators:[function(Story){return(0,_jsxRuntime.jsx)(_Background.Background,{children:(0,_jsxRuntime.jsx)(Story,{})})}]};exports.default=_default;var Basic=function Basic(args){return(0,_jsxRuntime.jsx)(_TextField.TextField,Object.assign({},args))};exports.Basic=Basic,Basic.displayName="Basic",Basic.args=Object.assign({defaultValue:"Hello World"},disableBuggyAccessibilityPropsOnIOS);var Interactive=function Interactive(args){var _useState=(0,_react.useState)(args.value),_useState2=(0,_slicedToArray2.default)(_useState,2),value=_useState2[0],setValue=_useState2[1];return(0,_jsxRuntime.jsx)(_TextField.TextField,Object.assign({},args,{value,onChangeText:function onChangeText(newValue){args.onChangeText&&args.onChangeText(newValue),setValue(newValue)}}))};exports.Interactive=Interactive,Interactive.displayName="Interactive",Interactive.args=Object.assign({placeholder:"My TextField"},disableBuggyAccessibilityPropsOnIOS),Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <TextField {...args} />\n)"}},Basic.parameters),Interactive.parameters=Object.assign({storySource:{source:"(args) => {\n  const [value, setValue] = useState(args.value);\n  const onChangeText = (newValue: string) => {\n    if (args.onChangeText) {\n      args.onChangeText(newValue);\n    }\n    setValue(newValue);\n  };\n  return <TextField {...args} value={value} onChangeText={onChangeText} />;\n}"}},Interactive.parameters);exports.__namedExportsOrder=["Basic","Interactive"]},"../../packages/boi-react-native-components/src/Typography/Typography.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.Interactive=exports.Examples=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_reactUtils=__webpack_require__("../../packages/boi-react-utils/dist/index.js"),_Typography=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Typography/Typography.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),color=_app.lightScheme.color,_default={title:"Content/Typography",component:_Typography.default,argTypes:{variant:{control:{type:"select"},options:["h1","h2","h3","h4","bodyLarge","body","bodySmall","bodyXSmall"]},children:{control:{type:"text"}},color:(0,_reactUtils.getColorSelectArgType)(color)}};exports.default=_default;var Interactive=function Interactive(args){return(0,_jsxRuntime.jsx)(_Typography.default,Object.assign({},args))};exports.Interactive=Interactive,Interactive.displayName="Interactive",Interactive.args={variant:"h1",testID:"fake-data-test-id",children:"This is some text"};var Examples=function Examples(){return(0,_jsxRuntime.jsxs)(_reactNative.View,{children:[(0,_jsxRuntime.jsx)(_Typography.default,{numberOfLines:1,color:color.fern,variant:"h1",children:"Heading 1 with a load of Lorem ipsum dolor sit amet to test the numberOfLines prop."}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"h2",children:"Heading 2"}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"h3",children:"Heading 3"}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"h4",children:"Heading 4"}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"bodyLarge",children:"Body large"}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"body",children:"Body"}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"bodySmall",children:"Body small"}),(0,_jsxRuntime.jsx)(_Typography.default,{variant:"bodyXSmall",children:"Body extra small"})]})};exports.Examples=Examples,Examples.displayName="Examples",Interactive.parameters=Object.assign({storySource:{source:"(args) => {\n  return <Typography {...args} />;\n}"}},Interactive.parameters),Examples.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <View>\n      <Typography numberOfLines={1} color={color.fern} variant="h1">\n        Heading 1 with a load of Lorem ipsum dolor sit amet to test the\n        numberOfLines prop.\n      </Typography>\n      <Typography variant="h2">Heading 2</Typography>\n      <Typography variant="h3">Heading 3</Typography>\n      <Typography variant="h4">Heading 4</Typography>\n      <Typography variant="bodyLarge">Body large</Typography>\n      <Typography variant="body">Body</Typography>\n      <Typography variant="bodySmall">Body small</Typography>\n      <Typography variant="bodyXSmall">Body extra small</Typography>\n    </View>\n  );\n}'}},Examples.parameters);exports.__namedExportsOrder=["Interactive","Examples"]},"../../packages/boi-react-native-icons/src/Icons.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__namedExportsOrder=exports.FullList=exports.Editable=void 0;var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));__webpack_require__("../../node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.values.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.map.js");var _react=_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),Icons=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-icons/build/index.ts")),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_reactUtils=__webpack_require__("../../packages/boi-react-utils/dist/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["Icon"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var color=_app.lightScheme.color,iconNames=Object.keys(Icons),iconComponents=Object.values(Icons),_default={title:"Icons",component:function IconHolder(_ref){var Icon=_ref.Icon,props=(0,_objectWithoutProperties2.default)(_ref,_excluded);return _react.default.cloneElement(Icon,props)},argTypes:{Icon:(0,_reactUtils.getIconSelectArgType)(Icons),color:(0,_reactUtils.getColorSelectArgType)(color),height:{control:{type:"number"}},width:{control:{type:"number"}}}};exports.default=_default;var Editable={args:{Icon:(0,_jsxRuntime.jsx)(Icons.AppleIcon,{}),color:color.pear,height:48,width:48}};exports.Editable=Editable;var FullList={};exports.FullList=FullList,FullList.decorators=[function(){return(0,_jsxRuntime.jsx)(_reactNative.ScrollView,{children:iconComponents.map((function(IconComponent,i){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:{display:"flex",flexDirection:"row",alignItems:"center",paddingBottom:8},children:[(0,_jsxRuntime.jsx)(IconComponent,{height:48,width:48,style:{marginRight:16}}),(0,_jsxRuntime.jsx)(_reactNative.Text,{children:iconNames[i]})]},i)}))})}];exports.__namedExportsOrder=["Editable","FullList"]},"./.storybook/preview.js":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.parameters=void 0,__webpack_require__("../../packages/boi-fonts/dist/boi-fonts.css");exports.parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}}},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-properties.js");var _clientApi=__webpack_require__("../../node_modules/@storybook/client-api/dist/esm/index.js"),config=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./.storybook/preview.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(config).forEach((function(key){var value=config[key];switch(key){case"args":return(0,_clientApi.addArgs)(value);case"argTypes":return(0,_clientApi.addArgTypes)(value);case"decorators":return value.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)}));case"parameters":return(0,_clientApi.addParameters)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,_clientApi.addArgsEnhancer)(enhancer)}));case"render":return(0,_clientApi.setGlobalRender)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,_clientApi.addParameters)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{__webpack_require__("../../node_modules/@storybook/react/dist/esm/client/index.js")},"../../packages/boi-js-utils/dist/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-names.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.reduce.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("../../node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.match.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.trim.js"),__webpack_require__("../../node_modules/core-js/modules/es.math.trunc.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.split.js"),__webpack_require__("../../node_modules/core-js/modules/es.number.is-nan.js"),__webpack_require__("../../node_modules/core-js/modules/es.function.name.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.from.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.is-array.js");var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,src_exports={};function _clampNumber(number,min,max){return number<=min?min:number>=max?max:number}!function __export(target,all){for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})}(src_exports,{clampNumber:function clampNumber(){return _clampNumber},flipObject:function flipObject(){return _flipObject},formatNumber:function formatNumber(){return _formatNumber},getEnvFromString:function getEnvFromString(){return _getEnvFromString},safeValueAsNumber:function safeValueAsNumber(){return _safeValueAsNumber}}),module.exports=function __toCommonJS(mod){return function __copyProps(to,from,except,desc){if(from&&"object"==typeof from||"function"==typeof from){var _step,_loop=function _loop(key){__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:function get(){return from[key]},enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})},_iterator=_createForOfIteratorHelper(__getOwnPropNames(from));try{for(_iterator.s();!(_step=_iterator.n()).done;)_loop(_step.value)}catch(err){_iterator.e(err)}finally{_iterator.f()}}return to}(__defProp({},"__esModule",{value:!0}),mod)}(src_exports);var _flipObject=function _flipObject(obj){return Object.keys(obj).reduce((function(newObject,key){return newObject[obj[key]]=isNaN(+key)?key:+key,newObject}),{})};function _formatNumber(_ref){var _a,_b,_c,_ref$value=_ref.value,value=void 0===_ref$value?"":_ref$value,_ref$max=_ref.max,max=void 0===_ref$max?999999999:_ref$max,_ref$min=_ref.min,min=void 0===_ref$min?0:_ref$min,_ref$maxDecimalPlaces=_ref.maxDecimalPlaces,maxDecimalPlaces=void 0===_ref$maxDecimalPlaces?0:_ref$maxDecimalPlaces,_ref$hasCommaSeperato=_ref.hasCommaSeperators,hasCommaSeperators=void 0!==_ref$hasCommaSeperato&&_ref$hasCommaSeperato,isDecimal=!1,valueAsString=null==value?void 0:value.toString(),lastCharacter=null==valueAsString?void 0:valueAsString.slice(-1);if(isNaN(Number(lastCharacter))&&"."!==lastCharacter&&(valueAsString=null==valueAsString?void 0:valueAsString.slice(0,-1)),1===(null==(_a=null==valueAsString?void 0:valueAsString.match(/\,/))?void 0:_a.length)&&(valueAsString=String(valueAsString).replace(/,/g,"")),min<0&&"-"===value)return"-";if(isNaN(Number(valueAsString))||null===value||0===(null==valueAsString?void 0:valueAsString.trim().length))return"";maxDecimalPlaces>0&&1===(null==(_b=null==valueAsString?void 0:valueAsString.match(/\./))?void 0:_b.length)&&(isDecimal=!0);var currencyString,valueAsNumber=Number(valueAsString),wholeNumber=Math.trunc(valueAsNumber),fractionalNumber=null==(_c=null==valueAsString?void 0:valueAsString.split("."))?void 0:_c[1];(null==fractionalNumber?void 0:fractionalNumber.length)>maxDecimalPlaces&&(fractionalNumber=fractionalNumber.slice(0,-1)),wholeNumber>max&&(wholeNumber=max),wholeNumber===max&&isDecimal&&(isDecimal=!1),wholeNumber<min&&(wholeNumber=min),min<0&&wholeNumber===min&&isDecimal&&(isDecimal=!1),hasCommaSeperators&&0!==wholeNumber&&(currencyString=new Intl.NumberFormat("en",{}).format(wholeNumber));var minusChar=isBetweenZeroAndMinusOne(wholeNumber)||isMinusZero(wholeNumber)?"-":"";return isDecimal&&fractionalNumber&&maxDecimalPlaces>0?minusChar+(currencyString||wholeNumber)+"."+fractionalNumber:isDecimal&&maxDecimalPlaces>0?minusChar+(currencyString||wholeNumber)+".":minusChar+(currencyString||wholeNumber).toString()}var isMinusZero=function isMinusZero(val){return 1/val==-1/0},isBetweenZeroAndMinusOne=function isBetweenZeroAndMinusOne(val){return val<0&&val>-1},validEnvs=["development","production","test"],_getEnvFromString=function _getEnvFromString(){for(var env=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",_i=0,_validEnvs=validEnvs;_i<_validEnvs.length;_i++){var validEnv=_validEnvs[_i];if(env===validEnv)return validEnv}return"development"},_safeValueAsNumber=function _safeValueAsNumber(value){try{if("number"==typeof value)return value;var convertedValue=new Number(""+value).valueOf();return Number.isNaN(convertedValue)?0:convertedValue}catch(err){return 0}}},"../../packages/boi-react-native-components/src/Adornament/Adornament.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStyles=getStyles,exports.wrapper=void 0,__webpack_require__("../../node_modules/core-js/modules/es.string.small.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_designTokens=__webpack_require__("../../packages/boi-design-tokens/build/app/light/design-tokens.mjs"),wrapper=_reactNative.StyleSheet.create({default:{display:"flex",alignItems:"center",justifyContent:"center"},small:{width:_designTokens.adornmentWidth.small},large:{width:_designTokens.adornmentWidth.large}});function getStyles(size){var style=[wrapper.default];return style.push(wrapper[size]),style}exports.wrapper=wrapper;try{getStyles.displayName="getStyles",getStyles.__docgenInfo={description:"",displayName:"getStyles",props:{'"toString"':{defaultValue:{value:"function toString() { [native code] }"},description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string",raw:null,value:null}},'"charAt"':{defaultValue:null,description:"Returns the character at the specified index.\n@param [object Object],[object Object],[object Object]",name:"charAt",required:!0,type:{name:"(pos: number) => string",raw:null,value:null}},'"charCodeAt"':{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param [object Object],[object Object],[object Object]",name:"charCodeAt",required:!0,type:{name:"(index: number) => number",raw:null,value:null}},'"concat"':{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param [object Object],[object Object],[object Object]",name:"concat",required:!0,type:{name:"(...strings: string[]) => string",raw:null,value:null}},'"indexOf"':{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number",raw:null,value:null}},'"lastIndexOf"':{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number",raw:null,value:null}},'"localeCompare"':{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }",raw:null,value:null}},'"match"':{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }",raw:null,value:null}},'"replace"':{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }",raw:null,value:null}},'"search"':{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }",raw:null,value:null}},'"slice"':{defaultValue:null,description:"Returns a section of a string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string",raw:null,value:null}},'"split"':{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }",raw:null,value:null}},'"substring"':{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string",raw:null,value:null}},'"toLowerCase"':{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string",raw:null,value:null}},'"toLocaleLowerCase"':{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string",raw:null,value:null}},'"toUpperCase"':{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string",raw:null,value:null}},'"toLocaleUpperCase"':{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string",raw:null,value:null}},'"trim"':{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string",raw:null,value:null}},'"length"':{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number",raw:null,value:null}},'"substr"':{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated [object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string",raw:null,value:null}},'"valueOf"':{defaultValue:{value:"function valueOf() { [native code] }"},description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string",raw:null,value:null}},'"codePointAt"':{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number",raw:null,value:null}},'"includes"':{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean",raw:null,value:null}},'"endsWith"':{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean",raw:null,value:null}},'"normalize"':{defaultValue:null,description:"Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }',raw:null,value:null}},'"repeat"':{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param [object Object],[object Object],[object Object]",name:"repeat",required:!0,type:{name:"(count: number) => string",raw:null,value:null}},'"startsWith"':{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean",raw:null,value:null}},'"anchor"':{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated [object Object]\n@param [object Object]",name:"anchor",required:!0,type:{name:"(name: string) => string",raw:null,value:null}},'"big"':{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated [object Object]",name:"big",required:!0,type:{name:"() => string",raw:null,value:null}},'"blink"':{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated [object Object]",name:"blink",required:!0,type:{name:"() => string",raw:null,value:null}},'"bold"':{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated [object Object]",name:"bold",required:!0,type:{name:"() => string",raw:null,value:null}},'"fixed"':{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated [object Object]",name:"fixed",required:!0,type:{name:"() => string",raw:null,value:null}},'"fontcolor"':{defaultValue:null,description:"Returns a `<font>` HTML element and sets the color attribute value\n@deprecated [object Object]",name:"fontcolor",required:!0,type:{name:"(color: string) => string",raw:null,value:null}},'"fontsize"':{defaultValue:null,description:"Returns a `<font>` HTML element and sets the size attribute value\n@deprecated [object Object]\n@deprecated [object Object]",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }",raw:null,value:null}},'"italics"':{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated [object Object]",name:"italics",required:!0,type:{name:"() => string",raw:null,value:null}},'"link"':{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated [object Object]",name:"link",required:!0,type:{name:"(url: string) => string",raw:null,value:null}},'"small"':{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated [object Object]",name:"small",required:!0,type:{name:"() => string",raw:null,value:null}},'"strike"':{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated [object Object]",name:"strike",required:!0,type:{name:"() => string",raw:null,value:null}},'"sub"':{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated [object Object]",name:"sub",required:!0,type:{name:"() => string",raw:null,value:null}},'"sup"':{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated [object Object]",name:"sup",required:!0,type:{name:"() => string",raw:null,value:null}},'"padStart"':{defaultValue:null,description:"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string",raw:null,value:null}},'"padEnd"':{defaultValue:null,description:"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string",raw:null,value:null}},'"trimEnd"':{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string",raw:null,value:null}},'"trimStart"':{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string",raw:null,value:null}},'"trimLeft"':{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated [object Object]",name:"trimLeft",required:!0,type:{name:"() => string",raw:null,value:null}},'"trimRight"':{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated [object Object]",name:"trimRight",required:!0,type:{name:"() => string",raw:null,value:null}},'"matchAll"':{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param [object Object],[object Object],[object Object]",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>",raw:null,value:null}},'"replaceAll"':{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }",raw:null,value:null}},'"at"':{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param [object Object],[object Object],[object Object]",name:"at",required:!0,type:{name:"(index: number) => string",raw:null,value:null}},'"__@iterator@10150"':{defaultValue:null,description:"Iterator",name:"__@iterator@10150",required:!0,type:{name:"() => IterableIterator<string>",raw:null,value:null}}}}}catch(e){}try{getStyles.displayName="getStyles",getStyles.__docgenInfo={description:"",displayName:"getStyles",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Adornament/Adornament.styles.tsx#getStyles"]={docgenInfo:getStyles.__docgenInfo,name:"getStyles",path:"../../packages/boi-react-native-components/src/Adornament/Adornament.styles.tsx#getStyles"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Adornament/Adornament.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Adornament=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=(_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js")),__webpack_require__("../../node_modules/react-native-web/dist/index.js")),_Adornament=__webpack_require__("../../packages/boi-react-native-components/src/Adornament/Adornament.styles.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["style","children","size"],Adornament=function Adornament(_ref){var style=_ref.style,children=_ref.children,_ref$size=_ref.size,size=void 0===_ref$size?"small":_ref$size,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded),defaultStyles=(0,_Adornament.getStyles)(size);return(0,_jsxRuntime.jsx)(_reactNative.View,Object.assign({},rest,{style:[defaultStyles,style],children}))};exports.Adornament=Adornament,Adornament.displayName="Adornament";try{Adornament.displayName="Adornament",Adornament.__docgenInfo={description:"",displayName:"Adornament",props:{'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"size"':{defaultValue:{value:"small"},description:"",name:"size",required:!1,type:{name:"AdornmentSizeType",raw:null,value:null}}}}}catch(e){}try{Adornament.displayName="Adornament",Adornament.__docgenInfo={description:"",displayName:"Adornament",props:{size:{defaultValue:{value:"small"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Adornament/Adornament.tsx#Adornament"]={docgenInfo:Adornament.__docgenInfo,name:"Adornament",path:"../../packages/boi-react-native-components/src/Adornament/Adornament.tsx#Adornament"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Adornament/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Adornament",{enumerable:!0,get:function get(){return _Adornament.Adornament}});var _Adornament=__webpack_require__("../../packages/boi-react-native-components/src/Adornament/Adornament.tsx")},"../../packages/boi-react-native-components/src/Alert/Alert.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.iconSeverityColors=exports.default=exports.containerSeverityStyles=exports.ALERT_ICON_DIMENSIONS=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color;exports.ALERT_ICON_DIMENSIONS=24;var styles=_reactNative.StyleSheet.create({container:{display:"flex",flexDirection:"row",borderWidth:1,borderStyle:"solid",borderRadius:8,padding:10,gap:15},containerSeverityInfo:{borderColor:color.primaryBlue,backgroundColor:color.white},containerSeverityError:{borderColor:color.red,backgroundColor:color.white},containerSeveritySuccess:{borderColor:color.teal,backgroundColor:color.teal},iconWrapper:{minWidth:24,maxWidth:72,overflow:"hidden"},content:{flex:1,alignSelf:"center"},title:{marginBottom:10,color:color.darkGrey,fontWeight:"600"},text:{color:color.darkGrey},closeButton:{},closeIcon:{width:20,height:20,color:color.darkGrey}}),containerSeverityStyles={info:styles.containerSeverityInfo,error:styles.containerSeverityError,success:styles.containerSeveritySuccess};exports.containerSeverityStyles=containerSeverityStyles;var iconSeverityColors={info:color.darkBlue,error:color.red,success:color.darkGrey};exports.iconSeverityColors=iconSeverityColors;var _default=styles;exports.default=_default},"../../packages/boi-react-native-components/src/Alert/Alert.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=Alert,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _react=__webpack_require__("../../node_modules/react/index.js"),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_Alert=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Alert/Alert.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function Alert(props){var text=props.text,icon=props.icon,title=props.title,_props$severity=props.severity,severity=void 0===_props$severity?"info":_props$severity,_props$textAlign=props.textAlign,textAlign=void 0===_props$textAlign?"left":_props$textAlign,pressableProps=props.pressableProps,_props$testID=props.testID,testID=void 0===_props$testID?"alert":_props$testID,iconComponent=(0,_react.useMemo)((function(){if(!1===icon)return null;var iconProps={width:_Alert.ALERT_ICON_DIMENSIONS,height:_Alert.ALERT_ICON_DIMENSIONS,color:_Alert.iconSeverityColors[severity],testID:testID+"-"+severity+"-icon"};return!0===icon||void 0===icon?{info:(0,_jsxRuntime.jsx)(_reactNativeIcons.HelpIcon,Object.assign({},iconProps)),error:(0,_jsxRuntime.jsx)(_reactNativeIcons.HelpIcon,Object.assign({},iconProps)),success:(0,_jsxRuntime.jsx)(_reactNativeIcons.HelpIcon,Object.assign({},iconProps))}[severity]:(0,_react.cloneElement)(icon,Object.assign({},iconProps,icon.props))}),[icon,severity,testID]);return(0,_jsxRuntime.jsxs)(_reactNative.View,{role:"alert",accessibilityRole:"alert",style:[_Alert.default.container,_Alert.containerSeverityStyles[severity]],testID,children:[iconComponent&&(0,_jsxRuntime.jsx)(_reactNative.View,{style:_Alert.default.iconWrapper,testID:testID+"-icon-wrapper",children:iconComponent}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:_Alert.default.content,children:[title&&(0,_jsxRuntime.jsx)(_reactNative.Text,{style:[_Alert.default.title,{textAlign}],role:"heading",children:title}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:[_Alert.default.text,{textAlign}],children:text})]}),(null==pressableProps?void 0:pressableProps.onPress)&&(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsx)(_reactNative.Pressable,Object.assign({accessibilityLabel:"Close"},pressableProps,{role:"button",accessibilityRole:"button",style:[_Alert.default.closeButton],testID:testID+"-button",children:(0,_jsxRuntime.jsx)(_reactNativeIcons.CloseIcon,{style:_Alert.default.closeIcon})}))})]})}Alert.displayName="Alert";try{Alert.displayName="Alert",Alert.__docgenInfo={description:"",displayName:"Alert",props:{'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"icon"':{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"boolean | Element",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"severity"':{defaultValue:null,description:"",name:"severity",required:!1,type:{name:"AlertSeverity",raw:null,value:null}},'"textAlign"':{defaultValue:null,description:"",name:"textAlign",required:!1,type:{name:'"left" | "center"',raw:null,value:null}},'"pressableProps"':{defaultValue:null,description:"",name:"pressableProps",required:!1,type:{name:'Omit<PressableProps, "role" | "accessibilityRole" | "style" | "testID" | "children">',raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Alert.displayName="Alert",Alert.__docgenInfo={description:"",displayName:"Alert",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"boolean | Element"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},severity:{defaultValue:null,description:"",name:"severity",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"info"'},{value:'"success"'}]}},textAlign:{defaultValue:null,description:"",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'}]}},pressableProps:{defaultValue:null,description:"",name:"pressableProps",required:!1,type:{name:'Omit<PressableProps, "testID" | "children" | "role" | "accessibilityRole" | "style">'}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Alert/Alert.tsx#Alert"]={docgenInfo:Alert.__docgenInfo,name:"Alert",path:"../../packages/boi-react-native-components/src/Alert/Alert.tsx#Alert"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Alert/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Alert",{enumerable:!0,get:function get(){return _Alert.default}});var _Alert=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Alert/Alert.tsx"))},"../../packages/boi-react-native-components/src/Background/Background.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_default=_reactNative.StyleSheet.create({light:{backgroundColor:_app.lightScheme.color.background},dark:{backgroundColor:_app.darkScheme.color.background}});exports.default=_default},"../../packages/boi-react-native-components/src/Background/Background.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Background=void 0;var _react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react/index.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Background=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Background/Background.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var Background=(0,_react.memo)((function(props){var style=["light"===(0,_reactNative.useColorScheme)()?_Background.default.light:_Background.default.dark,{flex:1}];return(0,_jsxRuntime.jsx)(_reactNative.View,{style,children:props.children})}));exports.Background=Background;try{Background.displayName="Background",Background.__docgenInfo={description:"",displayName:"Background",props:{}}}catch(e){}try{Background.displayName="Background",Background.__docgenInfo={description:"",displayName:"Background",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Background/Background.tsx#Background"]={docgenInfo:Background.__docgenInfo,name:"Background",path:"../../packages/boi-react-native-components/src/Background/Background.tsx#Background"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Background/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Background",{enumerable:!0,get:function get(){return _Background.Background}});var _Background=__webpack_require__("../../packages/boi-react-native-components/src/Background/Background.tsx")},"../../packages/boi-react-native-components/src/BasicAlert/BasicAlert.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=BasicAlert,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _Alert=__webpack_require__("../../packages/boi-react-native-components/src/Alert/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function BasicAlert(props){return(0,_jsxRuntime.jsx)(_Alert.Alert,Object.assign({},props,{icon:!1,textAlign:"center"}))}BasicAlert.displayName="BasicAlert";try{BasicAlert.displayName="BasicAlert",BasicAlert.__docgenInfo={description:"",displayName:"BasicAlert",props:{'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"severity"':{defaultValue:null,description:"",name:"severity",required:!1,type:{name:"AlertSeverity",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{BasicAlert.displayName="BasicAlert",BasicAlert.__docgenInfo={description:"",displayName:"BasicAlert",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},severity:{defaultValue:null,description:"",name:"severity",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"info"'},{value:'"success"'}]}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/BasicAlert/BasicAlert.tsx#BasicAlert"]={docgenInfo:BasicAlert.__docgenInfo,name:"BasicAlert",path:"../../packages/boi-react-native-components/src/BasicAlert/BasicAlert.tsx#BasicAlert"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/BasicAlert/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"BasicAlert",{enumerable:!0,get:function get(){return _BasicAlert.default}});var _BasicAlert=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/BasicAlert/BasicAlert.tsx"))},"../../packages/boi-react-native-components/src/BottomSheet/BottomSheet.web.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.BottomSheet=void 0;_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),BottomSheet=function BottomSheet(){return(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsx)(_reactNative.Text,{children:"BottomSheet is not supported for web"})})};exports.BottomSheet=BottomSheet,BottomSheet.displayName="BottomSheet"},"../../packages/boi-react-native-components/src/Button/Button.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=__webpack_require__("../../node_modules/react-native-web/dist/index.js").StyleSheet.create({wrapper:{flexDirection:"row",alignItems:"center",gap:10}});exports.default=_default},"../../packages/boi-react-native-components/src/Button/Button.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Button=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/Button.styles.ts")),_ButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBase/index.ts")),_ButtonBaseText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBaseText/index.ts")),_ButtonBaseIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBaseIcon/index.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["text","startIcon","endIcon"],Button=function Button(props){var text=props.text,startIcon=props.startIcon,endIcon=props.endIcon,otherProps=(0,_objectWithoutProperties2.default)(props,_excluded),variant=props.variant,disabled=props.disabled;return(0,_jsxRuntime.jsx)(_ButtonBase.default,Object.assign({},otherProps,{children:function children(buttonState){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_Button.default.wrapper],children:[startIcon&&(0,_jsxRuntime.jsx)(_ButtonBaseIcon.default,{icon:startIcon,buttonState,variant,disabled:Boolean(disabled)}),(0,_jsxRuntime.jsx)(_ButtonBaseText.default,{text,buttonState,variant,disabled:Boolean(disabled)}),endIcon&&(0,_jsxRuntime.jsx)(_ButtonBaseIcon.default,{icon:endIcon,buttonState,variant,disabled:Boolean(disabled)})]})}}))};Button.displayName="Button";var _default=Button;exports.default=_default;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{'"hitSlop"':{defaultValue:null,description:"Additional distance outside of this view in which a press is detected.",name:"hitSlop",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"onHoverIn"':{defaultValue:null,description:"Called when the hover is activated to provide visual feedback.",name:"onHoverIn",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onHoverOut"':{defaultValue:null,description:"Called when the hover is deactivated to undo visual feedback.",name:"onHoverOut",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"Called when a single tap gesture is detected.",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Called when a touch is engaged before `onPress`.",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Called when a touch is released before `onPress`.",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"Called when a long-tap gesture is detected.",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Called after the element loses focus.\n@platform [object Object]",name:"onBlur",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Called after the element is focused.\n@platform [object Object]",name:"onFocus",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"cancelable"':{defaultValue:null,description:"Whether a press gesture can be interrupted by a parent gesture such as a\nscroll event. Defaults to true.",name:"cancelable",required:!1,type:{name:"boolean",raw:null,value:null}},'"delayHoverIn"':{defaultValue:null,description:"Duration to wait after hover in before calling `onHoverIn`.\n@platform [object Object]",name:"delayHoverIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayHoverOut"':{defaultValue:null,description:"Duration to wait after hover out before calling `onHoverOut`.\n@platform [object Object]",name:"delayHoverOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"Whether the press behavior is disabled.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"pressRetentionOffset"':{defaultValue:null,description:"Additional distance outside of this view in which a touch is considered a\npress before `onPressOut` is triggered.",name:"pressRetentionOffset",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"android_disableSound"':{defaultValue:null,description:"If true, doesn't play system sound on touch.",name:"android_disableSound",required:!1,type:{name:"boolean",raw:null,value:null}},'"android_ripple"':{defaultValue:null,description:"Enables the Android ripple effect and configures its color.",name:"android_ripple",required:!1,type:{name:"PressableAndroidRippleConfig",raw:null,value:null}},'"testOnly_pressed"':{defaultValue:null,description:"Used only for documentation or testing (e.g. snapshot testing).",name:"testOnly_pressed",required:!1,type:{name:"boolean",raw:null,value:null}},'"unstable_pressDelay"':{defaultValue:null,description:"Duration (in milliseconds) to wait after press down before calling onPressIn.",name:"unstable_pressDelay",required:!1,type:{name:"number",raw:null,value:null}},'"size"':{defaultValue:null,description:"",name:"size",required:!1,type:{name:"ButtonBaseSize",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"ButtonBaseVariant",raw:null,value:null}},'"corners"':{defaultValue:null,description:"",name:"corners",required:!1,type:{name:"ButtonBaseCorners",raw:null,value:null}},'"alignment"':{defaultValue:null,description:"",name:"alignment",required:!1,type:{name:"ButtonBaseAlignment",raw:null,value:null}},'"fullWidth"':{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean",raw:null,value:null}},'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"startIcon"':{defaultValue:null,description:"",name:"startIcon",required:!1,type:{name:"Element",raw:null,value:null}},'"endIcon"':{defaultValue:null,description:"",name:"endIcon",required:!1,type:{name:"Element",raw:null,value:null}}}}}catch(e){}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"warning"'}]}},corners:{defaultValue:null,description:"",name:"corners",required:!1,type:{name:"enum",value:[{value:'"fancy"'},{value:'"rounded"'}]}},alignment:{defaultValue:null,description:"",name:"alignment",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},startIcon:{defaultValue:null,description:"",name:"startIcon",required:!1,type:{name:"Element"}},endIcon:{defaultValue:null,description:"",name:"endIcon",required:!1,type:{name:"Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"../../packages/boi-react-native-components/src/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Button/ButtonBase/ButtonBase.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.buttonVariantStyles=exports.buttonSizeStyles=exports.buttonCornersStyles=exports.buttonAlignmentStyles=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,styles=_reactNative.StyleSheet.create({container:{alignItems:"flex-start",flex:1},button:{alignSelf:"flex-start",flexGrow:0,borderWidth:1,borderStyle:"solid",borderColor:"transparent",userSelect:"none"},buttonSizeSmall:{paddingVertical:5,paddingHorizontal:10},buttonSizeMedium:{paddingVertical:10,paddingHorizontal:20},buttonSizeLarge:{paddingVertical:15,paddingHorizontal:30},buttonCornersFancy:{borderTopRightRadius:10,borderBottomLeftRadius:10},buttonCornersRounded:{borderRadius:10},buttonAlignmentLeft:{alignItems:"flex-start"},buttonAlignmentCenter:{alignItems:"center"},buttonAlignmentRight:{alignItems:"flex-end"},buttonVariantPrimary:{borderColor:color.primaryBlue,backgroundColor:color.primaryBlue},buttonVariantSecondary:{borderColor:color.darkGrey,backgroundColor:color.white},buttonVariantTertiary:{borderColor:color.darkBlue,backgroundColor:color.darkBlue},buttonVariantWarning:{borderColor:color.red,backgroundColor:color.red},buttonVariantPrimaryPressed:{borderColor:color.darkBlue,backgroundColor:color.darkBlue},buttonVariantTertiaryPressed:{borderColor:color.darkGrey,backgroundColor:color.white},buttonDisabled:{borderColor:color.fieldOutline,backgroundColor:color.white},buttonFullWidth:{width:"100%"}}),buttonSizeStyles={small:styles.buttonSizeSmall,medium:styles.buttonSizeMedium,large:styles.buttonSizeLarge};exports.buttonSizeStyles=buttonSizeStyles;var buttonVariantStyles={primary:styles.buttonVariantPrimary,secondary:styles.buttonVariantSecondary,tertiary:styles.buttonVariantTertiary,warning:styles.buttonVariantWarning};exports.buttonVariantStyles=buttonVariantStyles;var buttonCornersStyles={fancy:styles.buttonCornersFancy,rounded:styles.buttonCornersRounded};exports.buttonCornersStyles=buttonCornersStyles;var buttonAlignmentStyles={left:styles.buttonAlignmentLeft,center:styles.buttonAlignmentCenter,right:styles.buttonAlignmentRight};exports.buttonAlignmentStyles=buttonAlignmentStyles;var _default=styles;exports.default=_default},"../../packages/boi-react-native-components/src/Button/ButtonBase/ButtonBase.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_ButtonBase=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBase/ButtonBase.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["children","size","variant","corners","alignment","fullWidth"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var ButtonBase=function ButtonBase(props){var children=props.children,_props$size=props.size,size=void 0===_props$size?"medium":_props$size,_props$variant=props.variant,variant=void 0===_props$variant?"primary":_props$variant,corners=props.corners,alignment=props.alignment,fullWidth=props.fullWidth,pressableProps=(0,_objectWithoutProperties2.default)(props,_excluded),disabled=pressableProps.disabled;return(0,_jsxRuntime.jsx)(_reactNative.View,{style:_ButtonBase.default.container,children:(0,_jsxRuntime.jsx)(_reactNative.Pressable,Object.assign({},pressableProps,{style:function getStyle(_ref){var pressed=_ref.pressed,hovered=_ref.hovered,style=[_ButtonBase.default.button,_ButtonBase.buttonSizeStyles[size],_ButtonBase.buttonVariantStyles[variant]];return corners&&style.push(_ButtonBase.buttonCornersStyles[corners]),alignment&&style.push(_ButtonBase.buttonAlignmentStyles[alignment]),fullWidth&&style.push(_ButtonBase.default.buttonFullWidth),!pressed&&!hovered||disabled||("primary"===variant?style.push(_ButtonBase.default.buttonVariantPrimaryPressed):"tertiary"===variant&&style.push(_ButtonBase.default.buttonVariantTertiaryPressed)),disabled&&style.push(_ButtonBase.default.buttonDisabled),style},role:"button",accessibilityRole:"button",children}))})};ButtonBase.displayName="ButtonBase";var _default=ButtonBase;exports.default=_default;try{ButtonBase.displayName="ButtonBase",ButtonBase.__docgenInfo={description:"",displayName:"ButtonBase",props:{'"hitSlop"':{defaultValue:null,description:"Additional distance outside of this view in which a press is detected.",name:"hitSlop",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"onHoverIn"':{defaultValue:null,description:"Called when the hover is activated to provide visual feedback.",name:"onHoverIn",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onHoverOut"':{defaultValue:null,description:"Called when the hover is deactivated to undo visual feedback.",name:"onHoverOut",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"Called when a single tap gesture is detected.",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Called when a touch is engaged before `onPress`.",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Called when a touch is released before `onPress`.",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"Called when a long-tap gesture is detected.",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Called after the element loses focus.\n@platform [object Object]",name:"onBlur",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Called after the element is focused.\n@platform [object Object]",name:"onFocus",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"cancelable"':{defaultValue:null,description:"Whether a press gesture can be interrupted by a parent gesture such as a\nscroll event. Defaults to true.",name:"cancelable",required:!1,type:{name:"boolean",raw:null,value:null}},'"delayHoverIn"':{defaultValue:null,description:"Duration to wait after hover in before calling `onHoverIn`.\n@platform [object Object]",name:"delayHoverIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayHoverOut"':{defaultValue:null,description:"Duration to wait after hover out before calling `onHoverOut`.\n@platform [object Object]",name:"delayHoverOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"Whether the press behavior is disabled.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"pressRetentionOffset"':{defaultValue:null,description:"Additional distance outside of this view in which a touch is considered a\npress before `onPressOut` is triggered.",name:"pressRetentionOffset",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"android_disableSound"':{defaultValue:null,description:"If true, doesn't play system sound on touch.",name:"android_disableSound",required:!1,type:{name:"boolean",raw:null,value:null}},'"android_ripple"':{defaultValue:null,description:"Enables the Android ripple effect and configures its color.",name:"android_ripple",required:!1,type:{name:"PressableAndroidRippleConfig",raw:null,value:null}},'"testOnly_pressed"':{defaultValue:null,description:"Used only for documentation or testing (e.g. snapshot testing).",name:"testOnly_pressed",required:!1,type:{name:"boolean",raw:null,value:null}},'"unstable_pressDelay"':{defaultValue:null,description:"Duration (in milliseconds) to wait after press down before calling onPressIn.",name:"unstable_pressDelay",required:!1,type:{name:"number",raw:null,value:null}},'"size"':{defaultValue:null,description:"",name:"size",required:!1,type:{name:"ButtonBaseSize",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"ButtonBaseVariant",raw:null,value:null}},'"corners"':{defaultValue:null,description:"",name:"corners",required:!1,type:{name:"ButtonBaseCorners",raw:null,value:null}},'"alignment"':{defaultValue:null,description:"",name:"alignment",required:!1,type:{name:"ButtonBaseAlignment",raw:null,value:null}},'"fullWidth"':{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{ButtonBase.displayName="ButtonBase",ButtonBase.__docgenInfo={description:"",displayName:"ButtonBase",props:{size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"warning"'}]}},corners:{defaultValue:null,description:"",name:"corners",required:!1,type:{name:"enum",value:[{value:'"fancy"'},{value:'"rounded"'}]}},alignment:{defaultValue:null,description:"",name:"alignment",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Button/ButtonBase/ButtonBase.tsx#ButtonBase"]={docgenInfo:ButtonBase.__docgenInfo,name:"ButtonBase",path:"../../packages/boi-react-native-components/src/Button/ButtonBase/ButtonBase.tsx#ButtonBase"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Button/ButtonBase/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _ButtonBase.default}});var _ButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBase/ButtonBase.tsx"))},"../../packages/boi-react-native-components/src/Button/ButtonBaseIcon/ButtonBaseIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _react=__webpack_require__("../../node_modules/react/index.js"),_children=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Button/common/children.styles.tsx"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var ButtonBaseIcon=function ButtonBaseIcon(props){var icon=props.icon,_props$buttonState=props.buttonState,pressed=_props$buttonState.pressed,hovered=_props$buttonState.hovered,_props$variant=props.variant,variant=void 0===_props$variant?"primary":_props$variant,disabled=props.disabled;return(0,_react.cloneElement)(icon,Object.assign({color:function getColor(){var color=_children.childrenVariantStyles[variant].color;return!pressed&&!hovered||disabled||"tertiary"===variant&&(color=_children.default.childrenVariantTertiaryPressed.color),disabled&&(color=_children.default.childrenDisabled.color),color}()},icon.props))},_default=ButtonBaseIcon;exports.default=_default;try{ButtonBaseIcon.displayName="ButtonBaseIcon",ButtonBaseIcon.__docgenInfo={description:"",displayName:"ButtonBaseIcon",props:{'"icon"':{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"Element",raw:null,value:null}},'"buttonState"':{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"ButtonBaseVariant",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{ButtonBaseIcon.displayName="ButtonBaseIcon",ButtonBaseIcon.__docgenInfo={description:"",displayName:"ButtonBaseIcon",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"Element"}},buttonState:{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"warning"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Button/ButtonBaseIcon/ButtonBaseIcon.tsx#ButtonBaseIcon"]={docgenInfo:ButtonBaseIcon.__docgenInfo,name:"ButtonBaseIcon",path:"../../packages/boi-react-native-components/src/Button/ButtonBaseIcon/ButtonBaseIcon.tsx#ButtonBaseIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Button/ButtonBaseIcon/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _ButtonBaseIcon.default}});var _ButtonBaseIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBaseIcon/ButtonBaseIcon.tsx"))},"../../packages/boi-react-native-components/src/Button/ButtonBaseText/ButtonBaseText.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_children=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Button/common/children.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var ButtonBaseText=function ButtonBaseText(props){var text=props.text,_props$buttonState=props.buttonState,pressed=_props$buttonState.pressed,hovered=_props$buttonState.hovered,_props$variant=props.variant,variant=void 0===_props$variant?"primary":_props$variant,disabled=props.disabled;return(0,_jsxRuntime.jsx)(_reactNative.Text,{style:function getStyle(){var style=[_children.childrenVariantStyles[variant]];return!pressed&&!hovered||disabled||"tertiary"===variant&&style.push(_children.default.childrenVariantTertiaryPressed),disabled&&style.push(_children.default.childrenDisabled),style}(),testID:"button-text",children:text})};ButtonBaseText.displayName="ButtonBaseText";var _default=ButtonBaseText;exports.default=_default;try{ButtonBaseText.displayName="ButtonBaseText",ButtonBaseText.__docgenInfo={description:"",displayName:"ButtonBaseText",props:{'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"buttonState"':{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"ButtonBaseVariant",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{ButtonBaseText.displayName="ButtonBaseText",ButtonBaseText.__docgenInfo={description:"",displayName:"ButtonBaseText",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},buttonState:{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"warning"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Button/ButtonBaseText/ButtonBaseText.tsx#ButtonBaseText"]={docgenInfo:ButtonBaseText.__docgenInfo,name:"ButtonBaseText",path:"../../packages/boi-react-native-components/src/Button/ButtonBaseText/ButtonBaseText.tsx#ButtonBaseText"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Button/ButtonBaseText/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _ButtonBaseText.default}});var _ButtonBaseText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Button/ButtonBaseText/ButtonBaseText.tsx"))},"../../packages/boi-react-native-components/src/Button/common/children.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.childrenVariantStyles=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,styles=_reactNative.StyleSheet.create({childrenVariantPrimary:{color:color.white},childrenVariantSecondary:{color:color.darkGrey},childrenVariantTertiary:{color:color.white},childrenVariantWarning:{color:color.white},childrenVariantTertiaryPressed:{color:color.darkGrey},childrenDisabled:{color:color.fieldOutline}}),childrenVariantStyles={primary:styles.childrenVariantPrimary,secondary:styles.childrenVariantSecondary,tertiary:styles.childrenVariantTertiary,warning:styles.childrenVariantWarning};exports.childrenVariantStyles=childrenVariantStyles;var _default=styles;exports.default=_default},"../../packages/boi-react-native-components/src/ButtonV2/Button.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=__webpack_require__("../../node_modules/react-native-web/dist/index.js").StyleSheet.create({wrapper:{flexDirection:"row",alignItems:"center",gap:10}});exports.default=_default},"../../packages/boi-react-native-components/src/ButtonV2/Button.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Button=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/Button.styles.ts")),_ButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/index.ts")),_ButtonBaseText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseText/index.ts")),_ButtonBaseIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseIcon/index.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["text","variant","startIcon","endIcon","testID"],Button=function Button(props){var text=props.text,_props$variant=props.variant,variant=void 0===_props$variant?"primary":_props$variant,startIcon=props.startIcon,endIcon=props.endIcon,_props$testID=props.testID,testID=void 0===_props$testID?"button":_props$testID,otherProps=(0,_objectWithoutProperties2.default)(props,_excluded);return(0,_jsxRuntime.jsx)(_ButtonBase.default,Object.assign({},otherProps,{variant,testID,children:function children(buttonState){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_Button.default.wrapper],children:[startIcon&&(0,_jsxRuntime.jsx)(_ButtonBaseIcon.default,{icon:startIcon,buttonState,variant}),(0,_jsxRuntime.jsx)(_ButtonBaseText.default,{text,buttonState,variant,testID}),endIcon&&(0,_jsxRuntime.jsx)(_ButtonBaseIcon.default,{icon:endIcon,buttonState,variant})]})}}))};Button.displayName="Button";var _default=Button;exports.default=_default;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{'"hitSlop"':{defaultValue:null,description:"Additional distance outside of this view in which a press is detected.",name:"hitSlop",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"onHoverIn"':{defaultValue:null,description:"Called when the hover is activated to provide visual feedback.",name:"onHoverIn",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onHoverOut"':{defaultValue:null,description:"Called when the hover is deactivated to undo visual feedback.",name:"onHoverOut",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"Called when a single tap gesture is detected.",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Called when a touch is engaged before `onPress`.",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Called when a touch is released before `onPress`.",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"Called when a long-tap gesture is detected.",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Called after the element loses focus.\n@platform [object Object]",name:"onBlur",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Called after the element is focused.\n@platform [object Object]",name:"onFocus",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"cancelable"':{defaultValue:null,description:"Whether a press gesture can be interrupted by a parent gesture such as a\nscroll event. Defaults to true.",name:"cancelable",required:!1,type:{name:"boolean",raw:null,value:null}},'"delayHoverIn"':{defaultValue:null,description:"Duration to wait after hover in before calling `onHoverIn`.\n@platform [object Object]",name:"delayHoverIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayHoverOut"':{defaultValue:null,description:"Duration to wait after hover out before calling `onHoverOut`.\n@platform [object Object]",name:"delayHoverOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"Whether the press behavior is disabled.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"pressRetentionOffset"':{defaultValue:null,description:"Additional distance outside of this view in which a touch is considered a\npress before `onPressOut` is triggered.",name:"pressRetentionOffset",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"android_disableSound"':{defaultValue:null,description:"If true, doesn't play system sound on touch.",name:"android_disableSound",required:!1,type:{name:"boolean",raw:null,value:null}},'"android_ripple"':{defaultValue:null,description:"Enables the Android ripple effect and configures its color.",name:"android_ripple",required:!1,type:{name:"PressableAndroidRippleConfig",raw:null,value:null}},'"testOnly_pressed"':{defaultValue:null,description:"Used only for documentation or testing (e.g. snapshot testing).",name:"testOnly_pressed",required:!1,type:{name:"boolean",raw:null,value:null}},'"unstable_pressDelay"':{defaultValue:null,description:"Duration (in milliseconds) to wait after press down before calling onPressIn.",name:"unstable_pressDelay",required:!1,type:{name:"number",raw:null,value:null}},'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"ButtonVariant",raw:null,value:null}},'"startIcon"':{defaultValue:null,description:"",name:"startIcon",required:!1,type:{name:"Element",raw:null,value:null}},'"endIcon"':{defaultValue:null,description:"",name:"endIcon",required:!1,type:{name:"Element",raw:null,value:null}}}}}catch(e){}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"primaryAlt"'},{value:'"secondaryAlt"'}]}},startIcon:{defaultValue:null,description:"",name:"startIcon",required:!1,type:{name:"Element"}},endIcon:{defaultValue:null,description:"",name:"endIcon",required:!1,type:{name:"Element"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/ButtonV2/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"../../packages/boi-react-native-components/src/ButtonV2/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/ButtonBase.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function useStyles(){return"dark"===(0,_reactNative.useColorScheme)()?darkStyles:lightStyles},__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_designTokens=__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/design-tokens.ts");function createStyles(theme){theme||(theme="light");var styles=_reactNative.StyleSheet.create({container:{alignItems:"flex-start",flex:1},button:Object.assign({alignSelf:"flex-start",justifyContent:"center",height:_designTokens.button.height.value,paddingLeft:_designTokens.button.paddingLeft.value,paddingRight:_designTokens.button.paddingRight.value,borderWidth:_designTokens.button.borderWidth.value,borderStyle:"solid",borderColor:"transparent",borderRadius:_designTokens.button.borderRadius.value,userSelect:"none"},_reactNative.Platform.select({web:{outlineStyle:"none"}})),buttonFocused:Object.assign({},_reactNative.Platform.select({web:{outlineWidth:_designTokens.button.outlineWidth.value,outlineStyle:"solid",outlineOffset:_designTokens.button.outlineOffset.value}})),buttonVariantPrimary:{backgroundColor:_designTokens.button.backgroundColor.primary.base[theme].value},buttonVariantPrimaryAlt:{backgroundColor:_designTokens.button.backgroundColor.primaryAlt.base[theme].value},buttonVariantSecondary:{borderColor:_designTokens.button.borderColor.secondary.base[theme].value,backgroundColor:_designTokens.button.backgroundColor.secondary.base[theme].value},buttonVariantSecondaryAlt:{borderColor:_designTokens.button.borderColor.secondaryAlt.base[theme].value,backgroundColor:_designTokens.button.backgroundColor.secondaryAlt.base[theme].value},buttonVariantPrimaryPressed:{backgroundColor:_designTokens.button.backgroundColor.primary.active[theme].value},buttonVariantPrimaryAltPressed:{backgroundColor:_designTokens.button.backgroundColor.primaryAlt.active[theme].value},buttonVariantSecondaryPressed:{borderColor:_designTokens.button.borderColor.secondary.active[theme].value,backgroundColor:_designTokens.button.backgroundColor.secondary.active[theme].value},buttonVariantSecondaryAltPressed:{borderColor:_designTokens.button.borderColor.secondaryAlt.active[theme].value,backgroundColor:_designTokens.button.backgroundColor.secondaryAlt.active[theme].value},buttonVariantPrimaryFocused:Object.assign({},_reactNative.Platform.select({web:{outlineColor:_designTokens.button.outlineColor.primary[theme].value}})),buttonVariantPrimaryAltFocused:Object.assign({},_reactNative.Platform.select({web:{outlineColor:_designTokens.button.outlineColor.primaryAlt[theme].value}})),buttonVariantSecondaryFocused:Object.assign({},_reactNative.Platform.select({web:{outlineColor:_designTokens.button.outlineColor.secondary[theme].value}})),buttonVariantSecondaryAltFocused:Object.assign({},_reactNative.Platform.select({web:{outlineColor:_designTokens.button.outlineColor.secondaryAlt[theme].value}})),buttonVariantPrimaryHovered:{backgroundColor:_designTokens.button.backgroundColor.primary.hovered[theme].value},buttonVariantPrimaryAltHovered:{backgroundColor:_designTokens.button.backgroundColor.primaryAlt.hovered[theme].value},buttonVariantSecondaryHovered:{borderColor:_designTokens.button.borderColor.secondary.hover[theme].value,backgroundColor:_designTokens.button.backgroundColor.secondary.hovered[theme].value},buttonVariantSecondaryAltHovered:{borderColor:_designTokens.button.borderColor.secondaryAlt.hover[theme].value,backgroundColor:_designTokens.button.backgroundColor.secondaryAlt.hovered[theme].value},buttonDisabled:{opacity:_designTokens.button.opacity.disabled.value}});return{styles,buttonVariantStyles:{primary:styles.buttonVariantPrimary,primaryAlt:styles.buttonVariantPrimaryAlt,secondary:styles.buttonVariantSecondary,secondaryAlt:styles.buttonVariantSecondaryAlt},buttonVariantPressedStyles:{primary:styles.buttonVariantPrimaryPressed,primaryAlt:styles.buttonVariantPrimaryAltPressed,secondary:styles.buttonVariantSecondaryPressed,secondaryAlt:styles.buttonVariantSecondaryAltPressed},buttonVariantFocusedStyles:{primary:styles.buttonVariantPrimaryFocused,primaryAlt:styles.buttonVariantPrimaryAltFocused,secondary:styles.buttonVariantSecondaryFocused,secondaryAlt:styles.buttonVariantSecondaryAltFocused},buttonVariantHoveredStyles:{primary:styles.buttonVariantPrimaryHovered,primaryAlt:styles.buttonVariantPrimaryAltHovered,secondary:styles.buttonVariantSecondaryHovered,secondaryAlt:styles.buttonVariantSecondaryAltHovered}}}var lightStyles=createStyles("light"),darkStyles=createStyles("dark")},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/ButtonBase.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_focus=__webpack_require__("../../node_modules/@react-native-aria/focus/lib/module/index.web.js"),_ButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/ButtonBase.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["variant","children","disabled"],ButtonBase=function ButtonBase(props){var variant=props.variant,children=props.children,disabled=props.disabled,pressableProps=(0,_objectWithoutProperties2.default)(props,_excluded),_useStyles=(0,_ButtonBase.default)(),styles=_useStyles.styles,buttonVariantStyles=_useStyles.buttonVariantStyles,buttonVariantHoveredStyles=_useStyles.buttonVariantHoveredStyles,buttonVariantFocusedStyles=_useStyles.buttonVariantFocusedStyles,buttonVariantPressedStyles=_useStyles.buttonVariantPressedStyles,_useFocusRing=(0,_focus.useFocusRing)(),isFocusVisible=_useFocusRing.isFocusVisible,focusProps=_useFocusRing.focusProps;return(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.container,children:(0,_jsxRuntime.jsx)(_reactNative.Pressable,Object.assign({},focusProps,pressableProps,{disabled,style:function getStyle(_ref){var pressed=_ref.pressed,hovered=_ref.hovered,style=[styles.button,buttonVariantStyles[variant]];return pressed&&!disabled?style.push(buttonVariantPressedStyles[variant]):isFocusVisible&&!disabled?(style.push(styles.buttonFocused),style.push(buttonVariantFocusedStyles[variant])):hovered&&!disabled&&style.push(buttonVariantHoveredStyles[variant]),disabled&&style.push(styles.buttonDisabled),style},role:"button",accessibilityRole:"button",children}))})};ButtonBase.displayName="ButtonBase";var _default=ButtonBase;exports.default=_default;try{ButtonBase.displayName="ButtonBase",ButtonBase.__docgenInfo={description:"",displayName:"ButtonBase",props:{'"hitSlop"':{defaultValue:null,description:"Additional distance outside of this view in which a press is detected.",name:"hitSlop",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"onHoverIn"':{defaultValue:null,description:"Called when the hover is activated to provide visual feedback.",name:"onHoverIn",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onHoverOut"':{defaultValue:null,description:"Called when the hover is deactivated to undo visual feedback.",name:"onHoverOut",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"Called when a single tap gesture is detected.",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Called when a touch is engaged before `onPress`.",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Called when a touch is released before `onPress`.",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"Called when a long-tap gesture is detected.",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Called after the element loses focus.\n@platform [object Object]",name:"onBlur",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Called after the element is focused.\n@platform [object Object]",name:"onFocus",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"cancelable"':{defaultValue:null,description:"Whether a press gesture can be interrupted by a parent gesture such as a\nscroll event. Defaults to true.",name:"cancelable",required:!1,type:{name:"boolean",raw:null,value:null}},'"delayHoverIn"':{defaultValue:null,description:"Duration to wait after hover in before calling `onHoverIn`.\n@platform [object Object]",name:"delayHoverIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayHoverOut"':{defaultValue:null,description:"Duration to wait after hover out before calling `onHoverOut`.\n@platform [object Object]",name:"delayHoverOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"Whether the press behavior is disabled.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"pressRetentionOffset"':{defaultValue:null,description:"Additional distance outside of this view in which a touch is considered a\npress before `onPressOut` is triggered.",name:"pressRetentionOffset",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"android_disableSound"':{defaultValue:null,description:"If true, doesn't play system sound on touch.",name:"android_disableSound",required:!1,type:{name:"boolean",raw:null,value:null}},'"android_ripple"':{defaultValue:null,description:"Enables the Android ripple effect and configures its color.",name:"android_ripple",required:!1,type:{name:"PressableAndroidRippleConfig",raw:null,value:null}},'"testOnly_pressed"':{defaultValue:null,description:"Used only for documentation or testing (e.g. snapshot testing).",name:"testOnly_pressed",required:!1,type:{name:"boolean",raw:null,value:null}},'"unstable_pressDelay"':{defaultValue:null,description:"Duration (in milliseconds) to wait after press down before calling onPressIn.",name:"unstable_pressDelay",required:!1,type:{name:"number",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"ButtonVariant",raw:null,value:null}}}}}catch(e){}try{ButtonBase.displayName="ButtonBase",ButtonBase.__docgenInfo={description:"",displayName:"ButtonBase",props:{variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"primaryAlt"'},{value:'"secondaryAlt"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/ButtonBase.tsx#ButtonBase"]={docgenInfo:ButtonBase.__docgenInfo,name:"ButtonBase",path:"../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/ButtonBase.tsx#ButtonBase"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _ButtonBase.default}});var _ButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBase/ButtonBase.tsx"))},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseIcon/ButtonBaseIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _react=__webpack_require__("../../node_modules/react/index.js"),_children=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/common/children.styles.tsx")),ButtonBaseIcon=function ButtonBaseIcon(props){var variant=props.variant,icon=props.icon,_props$buttonState=props.buttonState,pressed=_props$buttonState.pressed,hovered=_props$buttonState.hovered,_useStyles=(0,_children.default)(),childrenVariantStyles=_useStyles.childrenVariantStyles,childrenVariantHoveredStyles=_useStyles.childrenVariantHoveredStyles,childrenVariantPressedStyles=_useStyles.childrenVariantPressedStyles,color=function getColor(){var color=childrenVariantStyles[variant].color;return pressed?color=childrenVariantPressedStyles[variant].color:hovered&&(color=childrenVariantHoveredStyles[variant].color),color}();return(0,_react.cloneElement)(icon,Object.assign({color},icon.props))},_default=ButtonBaseIcon;exports.default=_default;try{ButtonBaseIcon.displayName="ButtonBaseIcon",ButtonBaseIcon.__docgenInfo={description:"",displayName:"ButtonBaseIcon",props:{'"variant"':{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"ButtonVariant",raw:null,value:null}},'"icon"':{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"Element",raw:null,value:null}},'"buttonState"':{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType",raw:null,value:null}}}}}catch(e){}try{ButtonBaseIcon.displayName="ButtonBaseIcon",ButtonBaseIcon.__docgenInfo={description:"",displayName:"ButtonBaseIcon",props:{variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"primaryAlt"'},{value:'"secondaryAlt"'}]}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"Element"}},buttonState:{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseIcon/ButtonBaseIcon.tsx#ButtonBaseIcon"]={docgenInfo:ButtonBaseIcon.__docgenInfo,name:"ButtonBaseIcon",path:"../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseIcon/ButtonBaseIcon.tsx#ButtonBaseIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseIcon/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _ButtonBaseIcon.default}});var _ButtonBaseIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseIcon/ButtonBaseIcon.tsx"))},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseText/ButtonBaseText.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_children=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/common/children.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ButtonBaseText=function ButtonBaseText(props){var variant=props.variant,text=props.text,_props$buttonState=props.buttonState,pressed=_props$buttonState.pressed,hovered=_props$buttonState.hovered,testID=props.testID,_useStyles=(0,_children.default)(),styles=_useStyles.styles,childrenVariantStyles=_useStyles.childrenVariantStyles,childrenVariantHoveredStyles=_useStyles.childrenVariantHoveredStyles,childrenVariantPressedStyles=_useStyles.childrenVariantPressedStyles,style=function getStyle(){var style=[styles.childrenText,childrenVariantStyles[variant]];return pressed?style.push(childrenVariantPressedStyles[variant]):hovered&&style.push(childrenVariantHoveredStyles[variant]),style}();return(0,_jsxRuntime.jsx)(_reactNative.Text,{style,numberOfLines:1,testID:testID+"-text",children:text})};ButtonBaseText.displayName="ButtonBaseText";var _default=ButtonBaseText;exports.default=_default;try{ButtonBaseText.displayName="ButtonBaseText",ButtonBaseText.__docgenInfo={description:"",displayName:"ButtonBaseText",props:{'"variant"':{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"ButtonVariant",raw:null,value:null}},'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"buttonState"':{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!0,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ButtonBaseText.displayName="ButtonBaseText",ButtonBaseText.__docgenInfo={description:"",displayName:"ButtonBaseText",props:{variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"primaryAlt"'},{value:'"secondaryAlt"'}]}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},buttonState:{defaultValue:null,description:"",name:"buttonState",required:!0,type:{name:"PressableStateCallbackType"}},testID:{defaultValue:null,description:"",name:"testID",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseText/ButtonBaseText.tsx#ButtonBaseText"]={docgenInfo:ButtonBaseText.__docgenInfo,name:"ButtonBaseText",path:"../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseText/ButtonBaseText.tsx#ButtonBaseText"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseText/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _ButtonBaseText.default}});var _ButtonBaseText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/ButtonBaseText/ButtonBaseText.tsx"))},"../../packages/boi-react-native-components/src/ButtonV2/common/children.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function useStyles(){return"dark"===(0,_reactNative.useColorScheme)()?darkStyles:lightStyles};var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_designTokens=__webpack_require__("../../packages/boi-react-native-components/src/ButtonV2/design-tokens.ts");function createStyles(theme){theme||(theme="light");var styles=_reactNative.StyleSheet.create({childrenText:{fontWeight:_designTokens.button.fontWeight.value},childrenVariantPrimary:{color:_designTokens.button.color.primary.base[theme].value},childrenVariantPrimaryAlt:{color:_designTokens.button.color.primaryAlt.base[theme].value},childrenVariantSecondary:{color:_designTokens.button.color.secondary.base[theme].value},childrenVariantSecondaryAlt:{color:_designTokens.button.color.secondaryAlt.base[theme].value},childrenVariantPrimaryPressed:{color:_designTokens.button.color.primary.active[theme].value},childrenVariantPrimaryAltPressed:{color:_designTokens.button.color.primaryAlt.active[theme].value},childrenVariantSecondaryPressed:{color:_designTokens.button.color.secondary.active[theme].value},childrenVariantSecondaryAltPressed:{color:_designTokens.button.color.secondaryAlt.active[theme].value},childrenVariantPrimaryHovered:{color:_designTokens.button.color.primary.hovered[theme].value},childrenVariantPrimaryAltHovered:{color:_designTokens.button.color.primaryAlt.hovered[theme].value},childrenVariantSecondaryHovered:{color:_designTokens.button.color.secondary.hovered[theme].value},childrenVariantSecondaryAltHovered:{color:_designTokens.button.color.secondaryAlt.hovered[theme].value}});return{styles,childrenVariantStyles:{primary:styles.childrenVariantPrimary,primaryAlt:styles.childrenVariantPrimaryAlt,secondary:styles.childrenVariantSecondary,secondaryAlt:styles.childrenVariantSecondaryAlt},childrenVariantPressedStyles:{primary:styles.childrenVariantPrimaryPressed,primaryAlt:styles.childrenVariantPrimaryAltPressed,secondary:styles.childrenVariantSecondaryPressed,secondaryAlt:styles.childrenVariantSecondaryAltPressed},childrenVariantHoveredStyles:{primary:styles.childrenVariantPrimaryHovered,primaryAlt:styles.childrenVariantPrimaryAltHovered,secondary:styles.childrenVariantSecondaryHovered,secondaryAlt:styles.childrenVariantSecondaryAltHovered}}}var lightStyles=createStyles("light"),darkStyles=createStyles("dark")},"../../packages/boi-react-native-components/src/ButtonV2/design-tokens.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.button=void 0;var colors={bankOfIrelandBlue:{value:"#265AF1"},actionBlue:{value:"#0E2AD0"},navyBlue:{value:"#00067B"},black:{value:"#000000"},darkGrey:{value:"#333333"},mediumGrey:{value:"#666666"},lightGrey:{value:"#BBBBBB"},groundGrey:{value:"#E6EEF6"},white:{value:"#FFFFFF"},ragRed:{value:"#CF223F"},ragAmber:{value:"#FCB900"},ragGreen:{value:"#429448"},lightTeal:{value:"#86FBAD"},lightBlue:{value:"#B2DBFF"},lightLime:{value:"#C4FB50"},dmEggshell:{value:"#78B4FF"},dmDarkEggshell:{value:"#4887D5"},dmPrimary:{value:"#121212"},dmSecondary:{value:"#1E1E1E"},dmRagRed:{value:"#E3526A"},dmRagAmber:{value:"#FCB900"},dmRagGreen:{value:"#429448"},custom01:{value:"rgba(0, 0, 0, 0.24)"},custom02:{value:"rgba(0, 0, 0, 0.48)"},custom03:{value:"#0B209E"},custom04:{value:"#3767A2"},custom05:{value:"#00055D"}},mappedColor={bankOfIrelandBlue:{value:colors.bankOfIrelandBlue.value},actionBlue:{value:colors.dmEggshell.value},navyBlue:{value:colors.dmDarkEggshell.value},black:{value:colors.white.value},darkGrey:{value:colors.white.value},mediumGrey:{value:colors.lightGrey.value},lightGrey:{value:colors.mediumGrey.value},groundGrey:{value:colors.dmPrimary.value},white:{value:colors.dmSecondary.value},ragRed:{value:colors.dmRagRed.value},ragAmber:{value:colors.dmRagAmber.value},ragGreen:{value:colors.dmRagGreen.value},lightTeal:{value:colors.lightTeal.value},lightBlue:{value:colors.lightBlue.value},lightLime:{value:colors.lightLime.value},dmEggshell:{value:colors.dmEggshell.value},dmDarkEggshell:{value:colors.dmDarkEggshell.value},dmPrimary:{value:colors.dmPrimary.value},dmSecondary:{value:colors.dmSecondary.value},dmRagRed:{value:colors.dmRagRed.value},dmRagAmber:{value:colors.dmRagAmber.value},dmRagGreen:{value:colors.dmRagGreen.value},custom01:{value:colors.custom01.value},custom02:{value:colors.custom02.value},custom03:{value:colors.custom03.value},custom04:{value:colors.custom04.value},custom05:{value:colors.custom05.value}};function createThemeColors(color){return{light:{value:colors[color].value},dark:{value:mappedColor[color].value}}}var button={height:{value:50},paddingLeft:{value:32},paddingRight:{value:32},borderWidth:{value:2},borderRadius:{value:8},outlineWidth:{value:2},outlineOffset:{value:2},fontWeight:{value:"600"},opacity:{disabled:{value:.5}},color:{primary:{base:{light:{value:colors.white.value},dark:{value:colors.navyBlue.value}},hovered:{light:{value:colors.groundGrey.value},dark:{value:colors.custom05.value}},active:{light:{value:colors.lightGrey.value},dark:{value:colors.black.value}}},primaryAlt:{base:{light:{value:colors.actionBlue.value},dark:{value:colors.navyBlue.value}},hovered:{light:{value:colors.custom03.value},dark:{value:colors.custom05.value}},active:{light:{value:colors.navyBlue.value},dark:{value:colors.black.value}}},secondary:{base:createThemeColors("actionBlue"),hovered:{light:{value:colors.custom03.value},dark:{value:colors.dmDarkEggshell.value}},active:{light:{value:colors.navyBlue.value},dark:{value:colors.custom04.value}}},secondaryAlt:{base:{light:{value:colors.white.value},dark:{value:colors.dmEggshell.value}},hovered:{light:{value:colors.groundGrey.value},dark:{value:colors.dmDarkEggshell.value}},active:{light:{value:colors.lightGrey.value},dark:{value:colors.custom04.value}}}},backgroundColor:{primary:{base:createThemeColors("actionBlue"),hovered:{light:{value:colors.custom03.value},dark:{value:colors.dmDarkEggshell.value}},active:{light:{value:colors.navyBlue.value},dark:{value:colors.custom04.value}}},primaryAlt:{base:{light:{value:colors.white.value},dark:{value:colors.dmEggshell.value}},hovered:{light:{value:colors.groundGrey.value},dark:{value:colors.dmDarkEggshell.value}},active:{light:{value:colors.lightGrey.value},dark:{value:colors.custom04.value}}},secondary:{base:createThemeColors("white"),hovered:createThemeColors("groundGrey"),active:{light:{value:colors.lightGrey.value},dark:{value:colors.black.value}}},secondaryAlt:{base:{light:{value:"transparent"},dark:{value:colors.dmSecondary.value}},hovered:{light:{value:colors.custom01.value},dark:{value:colors.dmPrimary.value}},active:{light:{value:colors.custom02.value},dark:{value:colors.black.value}}}},borderColor:{secondary:{base:createThemeColors("actionBlue"),hover:{light:{value:colors.custom03.value},dark:{value:colors.dmDarkEggshell.value}},active:{light:{value:colors.navyBlue.value},dark:{value:colors.custom04.value}}},secondaryAlt:{base:{light:{value:colors.white.value},dark:{value:colors.dmEggshell.value}},hover:{light:{value:colors.groundGrey.value},dark:{value:colors.dmDarkEggshell.value}},active:{light:{value:colors.lightGrey.value},dark:{value:colors.custom04.value}}}},outlineColor:{primary:createThemeColors("actionBlue"),primaryAlt:{light:{value:colors.white.value},dark:{value:colors.dmEggshell.value}},secondary:createThemeColors("actionBlue"),secondaryAlt:{light:{value:colors.white.value},dark:{value:colors.dmEggshell.value}}}};exports.button=button},"../../packages/boi-react-native-components/src/Card/Card.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.variantStyles=exports.elevationStyles=exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,styles=_reactNative.StyleSheet.create({wrapper:{overflow:"hidden",backgroundColor:color.white},variantRounded:{borderTopRightRadius:20,borderBottomLeftRadius:20},elevation1:Object.assign({},_reactNative.Platform.select({android:{elevation:1},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:1},shadowOpacity:.18,shadowRadius:1},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px"}})),elevation2:Object.assign({},_reactNative.Platform.select({android:{elevation:2},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:1},shadowOpacity:.2,shadowRadius:1.41},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 3px 1px -2px, rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px"}})),elevation3:Object.assign({},_reactNative.Platform.select({android:{elevation:3},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:1},shadowOpacity:.22,shadowRadius:2.22},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 3px 3px -2px, rgba(0, 0, 0, 0.14) 0px 3px 4px 0px, rgba(0, 0, 0, 0.12) 0px 1px 8px 0px"}})),elevation4:Object.assign({},_reactNative.Platform.select({android:{elevation:4},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:2},shadowOpacity:.23,shadowRadius:2.62},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 2px 4px -1px, rgba(0, 0, 0, 0.14) 0px 4px 5px 0px, rgba(0, 0, 0, 0.12) 0px 1px 10px 0px"}})),elevation6:Object.assign({},_reactNative.Platform.select({android:{elevation:6},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:3},shadowOpacity:.27,shadowRadius:4.65},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 3px 5px -1px, rgba(0, 0, 0, 0.14) 0px 6px 10px 0px, rgba(0, 0, 0, 0.12) 0px 1px 18px 0px"}})),elevation8:Object.assign({},_reactNative.Platform.select({android:{elevation:8},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:4},shadowOpacity:.3,shadowRadius:4.65},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 5px 5px -3px, rgba(0, 0, 0, 0.14) 0px 8px 10px 1px, rgba(0, 0, 0, 0.12) 0px 3px 14px 2px"}})),elevation12:Object.assign({},_reactNative.Platform.select({android:{elevation:12},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:6},shadowOpacity:.37,shadowRadius:7.49},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 7px 8px -4px, rgba(0, 0, 0, 0.14) 0px 12px 17px 2px, rgba(0, 0, 0, 0.12) 0px 5px 22px 4px"}})),elevation16:Object.assign({},_reactNative.Platform.select({android:{elevation:16},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:8},shadowOpacity:.44,shadowRadius:10.32},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 8px 10px -5px, rgba(0, 0, 0, 0.14) 0px 16px 24px 2px, rgba(0, 0, 0, 0.12) 0px 6px 30px 5px"}})),elevation24:Object.assign({},_reactNative.Platform.select({android:{elevation:24},ios:{shadowColor:color.darkGrey,shadowOffset:{width:0,height:12},shadowOpacity:.58,shadowRadius:16},web:{boxShadow:"rgba(0, 0, 0, 0.2) 0px 11px 15px -7px, rgba(0, 0, 0, 0.14) 0px 24px 38px 3px, rgba(0, 0, 0, 0.12) 0px 9px 46px 8px"}}))}),variantStyles={rounded:styles.variantRounded};exports.variantStyles=variantStyles;var elevationStyles={1:styles.elevation1,2:styles.elevation2,3:styles.elevation3,4:styles.elevation4,6:styles.elevation6,8:styles.elevation8,12:styles.elevation12,16:styles.elevation16,24:styles.elevation24};exports.elevationStyles=elevationStyles;var _default=styles;exports.default=_default},"../../packages/boi-react-native-components/src/Card/Card.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=Card;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Card=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Card/Card.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function Card(props){var children=props.children,variant=props.variant,elevation=props.elevation,_props$testID=props.testID,testID=void 0===_props$testID?"card":_props$testID;return(0,_jsxRuntime.jsx)(_reactNative.View,{style:[variant?_Card.variantStyles[variant]:void 0,elevation?_Card.elevationStyles[elevation]:void 0],testID,children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:[_Card.default.wrapper,variant?_Card.variantStyles[variant]:void 0],children})})}Card.displayName="Card";try{Card.displayName="Card",Card.__docgenInfo={description:"",displayName:"Card",props:{'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:'"rounded"',raw:null,value:null}},'"elevation"':{defaultValue:null,description:"",name:"elevation",required:!1,type:{name:"CardElevation",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Card.displayName="Card",Card.__docgenInfo={description:"",displayName:"Card",props:{variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:'"rounded"'}},elevation:{defaultValue:null,description:"",name:"elevation",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"16"},{value:"8"},{value:"6"},{value:"2"},{value:"3"},{value:"4"},{value:"12"},{value:"24"}]}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Card/Card.tsx#Card"]={docgenInfo:Card.__docgenInfo,name:"Card",path:"../../packages/boi-react-native-components/src/Card/Card.tsx#Card"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Card/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Card",{enumerable:!0,get:function get(){return _Card.default}});var _Card=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Card/Card.tsx"))},"../../packages/boi-react-native-components/src/Checkbox/Checkbox.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _ToggleableBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function Checkbox(props){return(0,_jsxRuntime.jsx)(_ToggleableBase.default,Object.assign({},props,{type:"checkbox"}))}Checkbox.displayName="Checkbox";var _default=Checkbox;exports.default=_default;try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{'"value"':{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void",raw:null,value:null}},'"name"':{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string",raw:null,value:null}},'"label"':{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string",raw:null,value:null}},'"checked"':{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"ariaLabel"':{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Checkbox/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"../../packages/boi-react-native-components/src/Checkbox/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Checkbox/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Checkbox",{enumerable:!0,get:function get(){return _Checkbox.default}});var _Checkbox=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Checkbox/Checkbox.tsx"))},"../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=__webpack_require__("../../node_modules/react-native-web/dist/index.js").StyleSheet.create({container:{alignItems:"flex-start",flex:1},childrenWrapper:{position:"absolute",display:"flex",alignItems:"center",justifyContent:"center",overflow:"hidden"},svg:{position:"relative",transform:[{rotate:"-90deg"}]}});exports.default=_default},"../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=CircularProgress,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_reactNativeSvg=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_reactNativeReanimated=__webpack_require__("../../node_modules/react-native-reanimated/lib/module/index.web.js"),_jsUtils=__webpack_require__("../../packages/boi-js-utils/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_CircularProgress=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var color=_app.lightScheme.color,SIZE=200,STROKE_WIDTH=SIZE/10,RADIUS=(SIZE-STROKE_WIDTH)/2,CIRCUMFERENCE=2*RADIUS*Math.PI;function CircularProgress(props){var children=props.children,_props$testID=props.testID,testID=void 0===_props$testID?"circular-progress":_props$testID,percent=(0,_jsUtils.clampNumber)(props.percent,0,100),strokeDashoffset=(0,_reactNativeReanimated.interpolate)(percent,[0,100],[2*Math.PI,0])*RADIUS,circleProps={fill:"none",cy:SIZE/2,cx:SIZE/2,r:RADIUS,strokeWidth:STROKE_WIDTH};return(0,_jsxRuntime.jsxs)(_reactNative.View,{accessible:!0,role:"progressbar",accessibilityRole:"progressbar",accessibilityValue:{min:0,max:100,now:percent},style:_CircularProgress.default.container,testID,children:[children&&(0,_jsxRuntime.jsx)(_reactNative.View,{style:[_CircularProgress.default.childrenWrapper,{width:SIZE,height:SIZE,borderRadius:SIZE,padding:STROKE_WIDTH}],children}),(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,{width:SIZE,height:SIZE,style:_CircularProgress.default.svg,children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.Circle,Object.assign({},circleProps,{stroke:color.background})),(0,_jsxRuntime.jsx)(_reactNativeSvg.Circle,Object.assign({},circleProps,{stroke:color.teal,strokeDasharray:CIRCUMFERENCE+" "+CIRCUMFERENCE,strokeDashoffset}))]})]})}CircularProgress.displayName="CircularProgress";try{CircularProgress.displayName="CircularProgress",CircularProgress.__docgenInfo={description:"",displayName:"CircularProgress",props:{'"percent"':{defaultValue:null,description:"",name:"percent",required:!0,type:{name:"number",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{CircularProgress.displayName="CircularProgress",CircularProgress.__docgenInfo={description:"",displayName:"CircularProgress",props:{percent:{defaultValue:null,description:"",name:"percent",required:!0,type:{name:"number"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.tsx#CircularProgress"]={docgenInfo:CircularProgress.__docgenInfo,name:"CircularProgress",path:"../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.tsx#CircularProgress"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/CircularProgress/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"CircularProgress",{enumerable:!0,get:function get(){return _CircularProgress.default}});var _CircularProgress=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.tsx"))},"../../packages/boi-react-native-components/src/FormError/FormError.dark.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.text=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),lightStyles=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/FormError/FormError.styles.tsx"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var color=_app.darkScheme.color,text=_reactNative.StyleSheet.create({default:Object.assign({},lightStyles.text.default,{color:color.red})});exports.text=text},"../../packages/boi-react-native-components/src/FormError/FormError.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.text=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,text=_reactNative.StyleSheet.create({default:{marginTop:2,color:color.red}});exports.text=text},"../../packages/boi-react-native-components/src/FormError/FormError.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.FormError=void 0;_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),lightStyles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/FormError/FormError.styles.tsx")),darkStyles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/FormError/FormError.dark.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var FormError=function FormError(_ref){var message=_ref.message,styles="light"===(0,_reactNative.useColorScheme)()?lightStyles:darkStyles;return message?(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.text.default,children:message}):null};exports.FormError=FormError,FormError.displayName="FormError";try{FormError.displayName="FormError",FormError.__docgenInfo={description:"",displayName:"FormError",props:{'"message"':{defaultValue:null,description:"",name:"message",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{FormError.displayName="FormError",FormError.__docgenInfo={description:"",displayName:"FormError",props:{message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/FormError/FormError.tsx#FormError"]={docgenInfo:FormError.__docgenInfo,name:"FormError",path:"../../packages/boi-react-native-components/src/FormError/FormError.tsx#FormError"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,_default=_reactNative.StyleSheet.create({wrapper:{display:"flex",alignItems:"flex-start",flex:1},button:Object.assign({},_reactNative.Platform.select({web:{outlineStyle:"none"}})),container:{display:"flex",alignItems:"center",maxWidth:100},containerGap:{gap:10},iconWrapper:{},iconWrapperSizeSmall:{width:40,height:40,padding:10,borderRadius:40},iconWrapperSizeMedium:{width:60,height:60,padding:15,borderRadius:60},iconWrapperSizeLarge:{width:80,height:80,padding:20,borderRadius:80},iconWrapperFocused:Object.assign({},_reactNative.Platform.select({web:{outlineWidth:4,outlineStyle:"solid",outlineColor:color.lightBlue}})),text:{userSelect:"none",fontWeight:"600",textAlign:"center"}});exports.default=_default},"../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=IconButtonBase,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_focus=__webpack_require__("../../node_modules/@react-native-aria/focus/lib/module/index.web.js"),_IconButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function IconButtonBase(props){var icon=props.icon,backgroundColor=props.backgroundColor,_props$size=props.size,size=void 0===_props$size?"medium":_props$size,text=props.text,textProps=props.textProps,pressableProps=props.pressableProps,_props$testID=props.testID,testID=void 0===_props$testID?"icon-button":_props$testID,_useFocusRing=(0,_focus.useFocusRing)(),isFocusVisible=_useFocusRing.isFocusVisible,focusProps=_useFocusRing.focusProps,getIconWrapperStyle=function getIconWrapperStyle(pressableState){var style=[_IconButtonBase.default.iconWrapper,{backgroundColor:"function"==typeof backgroundColor?backgroundColor(Object.assign({},pressableState,{isFocusVisible})):backgroundColor}];return"small"===size?style.push(_IconButtonBase.default.iconWrapperSizeSmall):"medium"===size?style.push(_IconButtonBase.default.iconWrapperSizeMedium):"large"===size&&style.push(_IconButtonBase.default.iconWrapperSizeLarge),isFocusVisible&&style.push(_IconButtonBase.default.iconWrapperFocused),style};return(0,_jsxRuntime.jsx)(_reactNative.View,{style:_IconButtonBase.default.wrapper,testID,children:(0,_jsxRuntime.jsx)(_reactNative.Pressable,Object.assign({},focusProps,pressableProps,{role:"button",accessibilityRole:"button",style:_IconButtonBase.default.button,testID:testID+"-pressable",children:function children(pressableState){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_IconButtonBase.default.container,text?_IconButtonBase.default.containerGap:{}],children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:getIconWrapperStyle(pressableState),children:"function"==typeof icon?icon(Object.assign({},pressableState,{isFocusVisible})):icon}),text&&(0,_jsxRuntime.jsx)(_reactNative.Text,Object.assign({},textProps,{style:_IconButtonBase.default.text,testID:testID+"-text",children:text}))]})}}))})}IconButtonBase.displayName="IconButtonBase";try{IconButtonBase.displayName="IconButtonBase",IconButtonBase.__docgenInfo={description:"",displayName:"IconButtonBase",props:{'"icon"':{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"Element | ((state: ButtonState) => Element)",raw:null,value:null}},'"backgroundColor"':{defaultValue:null,description:"",name:"backgroundColor",required:!0,type:{name:"string | ((state: ButtonState) => string)",raw:null,value:null}},'"size"':{defaultValue:null,description:"",name:"size",required:!1,type:{name:'"small" | "medium" | "large"',raw:null,value:null}},'"text"':{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string",raw:null,value:null}},'"textProps"':{defaultValue:null,description:"",name:"textProps",required:!1,type:{name:'Omit<TextProps, "style" | "testID" | "children">',raw:null,value:null}},'"pressableProps"':{defaultValue:null,description:"",name:"pressableProps",required:!1,type:{name:'Omit<PressableProps, "style" | "testID" | "accessibilityRole" | "role">',raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{IconButtonBase.displayName="IconButtonBase",IconButtonBase.__docgenInfo={description:"",displayName:"IconButtonBase",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"Element | ((state: ButtonState) => Element)"}},backgroundColor:{defaultValue:null,description:"",name:"backgroundColor",required:!0,type:{name:"string | ((state: ButtonState) => string)"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string"}},textProps:{defaultValue:null,description:"",name:"textProps",required:!1,type:{name:'Omit<TextProps, "testID" | "children" | "style">'}},pressableProps:{defaultValue:null,description:"",name:"pressableProps",required:!1,type:{name:'Omit<PressableProps, "testID" | "role" | "accessibilityRole" | "style">'}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.tsx#IconButtonBase"]={docgenInfo:IconButtonBase.__docgenInfo,name:"IconButtonBase",path:"../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.tsx#IconButtonBase"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/IconButtonBase/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"IconButtonBase",{enumerable:!0,get:function get(){return _IconButtonBase.default}});var _IconButtonBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.tsx"))},"../../packages/boi-react-native-components/src/Map/Map.web.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=Map,__webpack_require__("../../node_modules/core-js/modules/es.array.map.js");var _api=__webpack_require__("../../node_modules/@react-google-maps/api/dist/esm.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),mapContainerStyle={width:"100%",height:"100%"};function Map(props){var googleMapsApiKey=props.googleMapsApiKey,initialZoomLevel=props.initialZoomLevel,center=props.center,markers=props.markers;return(0,_api.useJsApiLoader)({id:"google-map-script",googleMapsApiKey}).isLoaded?(0,_jsxRuntime.jsx)(_api.GoogleMap,{zoom:initialZoomLevel,center:{lat:center.latitude,lng:center.longitude},mapContainerStyle,children:null==markers?void 0:markers.map((function(marker){return(0,_jsxRuntime.jsx)(_api.Marker,{position:{lat:marker.latitude,lng:marker.longitude}},marker.latitude+marker.longitude)}))}):null}Map.displayName="Map";try{Mapweb.displayName="Mapweb",Mapweb.__docgenInfo={description:"",displayName:"Mapweb",props:{'"googleMapsApiKey"':{defaultValue:null,description:"",name:"googleMapsApiKey",required:!0,type:{name:"string",raw:null,value:null}},'"initialZoomLevel"':{defaultValue:null,description:"",name:"initialZoomLevel",required:!0,type:{name:"number",raw:null,value:null}},'"center"':{defaultValue:null,description:"",name:"center",required:!0,type:{name:"{ latitude: number; longitude: number; }",raw:null,value:null}},'"markers"':{defaultValue:null,description:"",name:"markers",required:!1,type:{name:"TMapMarker[]",raw:null,value:null}},'"minZoomLevel"':{defaultValue:null,description:"",name:"minZoomLevel",required:!1,type:{name:"number",raw:null,value:null}},'"maxZoomLevel"':{defaultValue:null,description:"",name:"maxZoomLevel",required:!1,type:{name:"number",raw:null,value:null}}}}}catch(e){}try{Mapweb.displayName="Mapweb",Mapweb.__docgenInfo={description:"",displayName:"Mapweb",props:{googleMapsApiKey:{defaultValue:null,description:"",name:"googleMapsApiKey",required:!0,type:{name:"string"}},initialZoomLevel:{defaultValue:null,description:"",name:"initialZoomLevel",required:!0,type:{name:"number"}},center:{defaultValue:null,description:"",name:"center",required:!0,type:{name:"{ latitude: number; longitude: number; }"}},markers:{defaultValue:null,description:"",name:"markers",required:!1,type:{name:"TMapMarker[]"}},minZoomLevel:{defaultValue:null,description:"",name:"minZoomLevel",required:!1,type:{name:"number"}},maxZoomLevel:{defaultValue:null,description:"",name:"maxZoomLevel",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Map/Map.web.tsx#Mapweb"]={docgenInfo:Mapweb.__docgenInfo,name:"Mapweb",path:"../../packages/boi-react-native-components/src/Map/Map.web.tsx#Mapweb"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Map/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Map",{enumerable:!0,get:function get(){return _Map.default}});var _Map=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Map/Map.web.tsx"))},"../../packages/boi-react-native-components/src/MapCard/MapCard.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,_default=_reactNative.StyleSheet.create({header:{gap:4,padding:10},text:{color:color.darkGrey},textTitle:{fontSize:16,fontWeight:"700"},textPrice:{fontWeight:"700"},mapWrapper:{height:125}});exports.default=_default},"../../packages/boi-react-native-components/src/MapCard/MapCard.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=MapCard;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Map=__webpack_require__("../../packages/boi-react-native-components/src/Map/index.ts"),_Card=__webpack_require__("../../packages/boi-react-native-components/src/Card/index.ts"),_MapCard=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/MapCard/MapCard.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function MapCard(props){var title=props.title,subtitle=props.subtitle,price=props.price,googleMapsApiKey=props.googleMapsApiKey,latitude=props.latitude,longitude=props.longitude,_props$testID=props.testID,testID=void 0===_props$testID?"map-card":_props$testID;return(0,_jsxRuntime.jsx)(_Card.Card,{variant:"rounded",elevation:1,testID,children:(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:_MapCard.default.header,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{numberOfLines:1,style:[_MapCard.default.text,_MapCard.default.textTitle],children:title}),(0,_jsxRuntime.jsx)(_reactNative.Text,{numberOfLines:1,style:_MapCard.default.text,children:subtitle}),(0,_jsxRuntime.jsx)(_reactNative.Text,{numberOfLines:1,style:[_MapCard.default.text,_MapCard.default.textPrice],children:price})]}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_MapCard.default.mapWrapper,pointerEvents:"none",children:(0,_jsxRuntime.jsx)(_Map.Map,{googleMapsApiKey,initialZoomLevel:14,center:{latitude,longitude},markers:[{latitude,longitude}]})})]})})}MapCard.displayName="MapCard";try{MapCard.displayName="MapCard",MapCard.__docgenInfo={description:"",displayName:"MapCard",props:{'"title"':{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string",raw:null,value:null}},'"subtitle"':{defaultValue:null,description:"",name:"subtitle",required:!0,type:{name:"string",raw:null,value:null}},'"price"':{defaultValue:null,description:"",name:"price",required:!0,type:{name:"string",raw:null,value:null}},'"googleMapsApiKey"':{defaultValue:null,description:"",name:"googleMapsApiKey",required:!0,type:{name:"string",raw:null,value:null}},'"latitude"':{defaultValue:null,description:"",name:"latitude",required:!0,type:{name:"number",raw:null,value:null}},'"longitude"':{defaultValue:null,description:"",name:"longitude",required:!0,type:{name:"number",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MapCard.displayName="MapCard",MapCard.__docgenInfo={description:"",displayName:"MapCard",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},subtitle:{defaultValue:null,description:"",name:"subtitle",required:!0,type:{name:"string"}},price:{defaultValue:null,description:"",name:"price",required:!0,type:{name:"string"}},googleMapsApiKey:{defaultValue:null,description:"",name:"googleMapsApiKey",required:!0,type:{name:"string"}},latitude:{defaultValue:null,description:"",name:"latitude",required:!0,type:{name:"number"}},longitude:{defaultValue:null,description:"",name:"longitude",required:!0,type:{name:"number"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/MapCard/MapCard.tsx#MapCard"]={docgenInfo:MapCard.__docgenInfo,name:"MapCard",path:"../../packages/boi-react-native-components/src/MapCard/MapCard.tsx#MapCard"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/MapCard/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"MapCard",{enumerable:!0,get:function get(){return _MapCard.default}});var _MapCard=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/MapCard/MapCard.tsx"))},"../../packages/boi-react-native-components/src/NumberField/NumberField.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.NumberField=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_TextField=(_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js")),__webpack_require__("../../packages/boi-react-native-components/src/TextField/TextField.tsx")),_jsUtils=__webpack_require__("../../packages/boi-js-utils/dist/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["maxDecimalPlaces","max","min","hasCommaSeperators","onChangeText"],NumberField=function NumberField(props){var _props$maxDecimalPlac=props.maxDecimalPlaces,maxDecimalPlaces=void 0===_props$maxDecimalPlac?0:_props$maxDecimalPlac,max=props.max,min=props.min,hasCommaSeperators=props.hasCommaSeperators,onChangeText=props.onChangeText,rest=(0,_objectWithoutProperties2.default)(props,_excluded);return(0,_jsxRuntime.jsx)(_TextField.TextField,Object.assign({},rest,{onChangeText:function handleChangeText(value){if(onChangeText){var digits=(0,_jsUtils.formatNumber)({value,max,min,maxDecimalPlaces,hasCommaSeperators});onChangeText(digits)}},inputMode:maxDecimalPlaces>0?"decimal":"numeric"}))};exports.NumberField=NumberField,NumberField.displayName="NumberField";try{NumberField.displayName="NumberField",NumberField.__docgenInfo={description:"",displayName:"NumberField",props:{'"allowFontScaling"':{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean",raw:null,value:null}},'"autoCapitalize"':{defaultValue:null,description:"Can tell TextInput to automatically capitalize certain characters.\n     characters: all characters,\n     words: first letter of each word\n     sentences: first letter of each sentence (default)\n     none: don't auto capitalize anything\n\nhttps://reactnative.dev/docs/textinput#autocapitalize",name:"autoCapitalize",required:!1,type:{name:'"none" | "sentences" | "words" | "characters"',raw:null,value:null}},'"autoCorrect"':{defaultValue:null,description:"If false, disables auto-correct.\nThe default value is true.",name:"autoCorrect",required:!1,type:{name:"boolean",raw:null,value:null}},'"autoFocus"':{defaultValue:null,description:"If true, focuses the input on componentDidMount.\nThe default value is false.",name:"autoFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"blurOnSubmit"':{defaultValue:null,description:"If true, the text field will blur when submitted.\nThe default value is true.",name:"blurOnSubmit",required:!1,type:{name:"boolean",raw:null,value:null}},'"caretHidden"':{defaultValue:null,description:"If true, caret is hidden. The default value is false.",name:"caretHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"contextMenuHidden"':{defaultValue:null,description:"If true, context menu is hidden. The default value is false.",name:"contextMenuHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"defaultValue"':{defaultValue:null,description:"Provides an initial value that will change when the user starts typing.\nUseful for simple use-cases where you don't want to deal with listening to events\nand updating the value prop to keep the controlled state in sync.",name:"defaultValue",required:!1,type:{name:"string",raw:null,value:null}},'"keyboardType"':{defaultValue:null,description:"enum(\"default\", 'numeric', 'email-address', \"ascii-capable\", 'numbers-and-punctuation', 'url', 'number-pad', 'phone-pad', 'name-phone-pad',\n'decimal-pad', 'twitter', 'web-search', 'visible-password')\nDetermines which keyboard to open, e.g.numeric.\nThe following values work across platforms: - default - numeric - email-address - phone-pad\nThe following values work on iOS: - ascii-capable - numbers-and-punctuation - url - number-pad - name-phone-pad - decimal-pad - twitter - web-search\nThe following values work on Android: - visible-password",name:"keyboardType",required:!1,type:{name:"KeyboardTypeOptions",raw:null,value:null}},'"maxLength"':{defaultValue:null,description:"Limits the maximum number of characters that can be entered.\nUse this instead of implementing the logic in JS to avoid flicker.",name:"maxLength",required:!1,type:{name:"number",raw:null,value:null}},'"multiline"':{defaultValue:null,description:"If true, the text input can be multiple lines. The default value is false.",name:"multiline",required:!1,type:{name:"boolean",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Callback that is called when the text input is blurred",name:"onBlur",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputFocusEventData>) => void",raw:null,value:null}},'"onChangeText"':{defaultValue:null,description:"Callback that is called when the text input's text changes.\nChanged text is passed as an argument to the callback handler.",name:"onChangeText",required:!1,type:{name:"((value: string) => void) & ((text: string) => void)",raw:null,value:null}},'"onContentSizeChange"':{defaultValue:null,description:"Callback that is called when the text input's content size changes.\nThis will be called with\n`{ nativeEvent: { contentSize: { width, height } } }`.\n\nOnly called for multiline text inputs.",name:"onContentSizeChange",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) => void",raw:null,value:null}},'"onEndEditing"':{defaultValue:null,description:"Callback that is called when text input ends.",name:"onEndEditing",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputEndEditingEventData>) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Callback that is called when a touch is engaged.",name:"onPressIn",required:!1,type:{name:"(e: NativeSyntheticEvent<NativeTouchEvent>) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Callback that is called when a touch is released.",name:"onPressOut",required:!1,type:{name:"(e: NativeSyntheticEvent<NativeTouchEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Callback that is called when the text input is focused",name:"onFocus",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputFocusEventData>) => void",raw:null,value:null}},'"onSelectionChange"':{defaultValue:null,description:"Callback that is called when the text input selection is changed.",name:"onSelectionChange",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => void",raw:null,value:null}},'"onSubmitEditing"':{defaultValue:null,description:"Callback that is called when the text input's submit button is pressed.",name:"onSubmitEditing",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputSubmitEditingEventData>) => void",raw:null,value:null}},'"onTextInput"':{defaultValue:null,description:"Callback that is called on new text input with the argument\n `{ nativeEvent: { text, previousText, range: { start, end } } }`.\n\nThis prop requires multiline={true} to be set.",name:"onTextInput",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputTextInputEventData>) => void",raw:null,value:null}},'"onScroll"':{defaultValue:null,description:"Invoked on content scroll with\n `{ nativeEvent: { contentOffset: { x, y } } }`.\n\nMay also contain other properties from ScrollEvent but on Android contentSize is not provided for performance reasons.",name:"onScroll",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputScrollEventData>) => void",raw:null,value:null}},'"onKeyPress"':{defaultValue:null,description:"Callback that is called when a key is pressed.\nThis will be called with\n `{ nativeEvent: { key: keyValue } }`\nwhere keyValue is 'Enter' or 'Backspace' for respective keys and the typed-in character otherwise including ' ' for space.\n\nFires before onChange callbacks.\nNote: on Android only the inputs from soft keyboard are handled, not the hardware keyboard inputs.",name:"onKeyPress",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputKeyPressEventData>) => void",raw:null,value:null}},'"placeholder"':{defaultValue:null,description:"The string that will be rendered before text input has been entered",name:"placeholder",required:!1,type:{name:"string",raw:null,value:null}},'"placeholderTextColor"':{defaultValue:null,description:"The text color of the placeholder string",name:"placeholderTextColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"returnKeyType"':{defaultValue:null,description:"enum('default', 'go', 'google', 'join', 'next', 'route', 'search', 'send', 'yahoo', 'done', 'emergency-call')\nDetermines how the return key should look.",name:"returnKeyType",required:!1,type:{name:"ReturnKeyTypeOptions",raw:null,value:null}},'"secureTextEntry"':{defaultValue:null,description:"If true, the text input obscures the text entered so that sensitive text like passwords stay secure.\nThe default value is false.",name:"secureTextEntry",required:!1,type:{name:"boolean",raw:null,value:null}},'"selectTextOnFocus"':{defaultValue:null,description:"If true, all text will automatically be selected on focus",name:"selectTextOnFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"selection"':{defaultValue:null,description:"The start and end of the text input's selection. Set start and end to\nthe same value to position the cursor.",name:"selection",required:!1,type:{name:"{ start: number; end?: number; }",raw:null,value:null}},'"selectionColor"':{defaultValue:null,description:"The highlight (and cursor on ios) color of the text input",name:"selectionColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"textAlign"':{defaultValue:null,description:"Align the input text to the left, center, or right sides of the input field.",name:"textAlign",required:!1,type:{name:'"left" | "center" | "right"',raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"inputAccessoryViewID"':{defaultValue:null,description:"Used to connect to an InputAccessoryView. Not part of react-natives documentation, but present in examples and\ncode.\nSee https://reactnative.dev/docs/inputaccessoryview for more information.",name:"inputAccessoryViewID",required:!1,type:{name:"string",raw:null,value:null}},'"value"':{defaultValue:null,description:"The value to show for the text input. TextInput is a controlled component,\nwhich means the native value will be forced to match this value prop if provided.\nFor most uses this works great, but in some cases this may cause flickering - one common cause is preventing edits by keeping value the same.\nIn addition to simply setting the same value, either set editable={false},\nor set/update maxLength to prevent unwanted edits without flicker.",name:"value",required:!1,type:{name:"string",raw:null,value:null}},'"maxFontSizeMultiplier"':{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"clearTextOnFocus"':{defaultValue:null,description:"If true, clears the text field automatically when editing begins",name:"clearTextOnFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"dataDetectorTypes"':{defaultValue:null,description:"Determines the types of data converted to clickable URLs in the text input.\nOnly valid if `multiline={true}` and `editable={false}`.\nBy default no data types are detected.\n\nYou can provide one type or an array of many types.\n\nPossible values for `dataDetectorTypes` are:\n\n- `'phoneNumber'`\n- `'link'`\n- `'address'`\n- `'calendarEvent'`\n- `'none'`\n- `'all'`",name:"dataDetectorTypes",required:!1,type:{name:"DataDetectorTypes | DataDetectorTypes[]",raw:null,value:null}},'"enablesReturnKeyAutomatically"':{defaultValue:null,description:"If true, the keyboard disables the return key when there is no text and automatically enables it when there is text.\nThe default value is false.",name:"enablesReturnKeyAutomatically",required:!1,type:{name:"boolean",raw:null,value:null}},'"keyboardAppearance"':{defaultValue:null,description:"Determines the color of the keyboard.",name:"keyboardAppearance",required:!1,type:{name:'"default" | "light" | "dark"',raw:null,value:null}},'"passwordRules"':{defaultValue:null,description:'Provide rules for your password.\nFor example, say you want to require a password with at least eight characters consisting of a mix of uppercase and lowercase letters, at least one number, and at most two consecutive characters.\n"required: upper; required: lower; required: digit; max-consecutive: 2; minlength: 8;"',name:"passwordRules",required:!1,type:{name:"string",raw:null,value:null}},'"rejectResponderTermination"':{defaultValue:null,description:"If `true`, allows TextInput to pass touch events to the parent component.\nThis allows components to be swipeable from the TextInput on iOS,\nas is the case on Android by default.\nIf `false`, TextInput always asks to handle the input (except when disabled).",name:"rejectResponderTermination",required:!1,type:{name:"boolean",raw:null,value:null}},'"selectionState"':{defaultValue:null,description:"See DocumentSelectionState.js, some state that is responsible for maintaining selection information for a document",name:"selectionState",required:!1,type:{name:"DocumentSelectionState",raw:null,value:null}},'"spellCheck"':{defaultValue:null,description:"If false, disables spell-check style (i.e. red underlines). The default value is inherited from autoCorrect",name:"spellCheck",required:!1,type:{name:"boolean",raw:null,value:null}},'"textContentType"':{defaultValue:null,description:"Give the keyboard and the system information about the expected\nsemantic meaning for the content that users enter.\n\nFor iOS 11+ you can set `textContentType` to `username` or `password` to\nenable autofill of login details from the device keychain.\n\nFor iOS 12+ `newPassword` can be used to indicate a new password input the\nuser may want to save in the keychain, and `oneTimeCode` can be used to indicate\nthat a field can be autofilled by a code arriving in an SMS.\n\nTo disable autofill, set textContentType to `none`.\n\nPossible values for `textContentType` are:\n\n - `'none'`\n - `'URL'`\n - `'addressCity'`\n - `'addressCityAndState'`\n - `'addressState'`\n - `'countryName'`\n - `'creditCardNumber'`\n - `'emailAddress'`\n - `'familyName'`\n - `'fullStreetAddress'`\n - `'givenName'`\n - `'jobTitle'`\n - `'location'`\n - `'middleName'`\n - `'name'`\n - `'namePrefix'`\n - `'nameSuffix'`\n - `'nickname'`\n - `'organizationName'`\n - `'postalCode'`\n - `'streetAddressLine1'`\n - `'streetAddressLine2'`\n - `'sublocality'`\n - `'telephoneNumber'`\n - `'username'`\n - `'password'`\n - `'newPassword'`\n - `'oneTimeCode'`",name:"textContentType",required:!1,type:{name:'"none" | "URL" | "addressCity" | "addressCityAndState" | "addressState" | "countryName" | "creditCardNumber" | "emailAddress" | "familyName" | "fullStreetAddress" | "givenName" | ... 16 more ... | "oneTimeCode"',raw:null,value:null}},'"scrollEnabled"':{defaultValue:null,description:"If false, scrolling of the text view will be disabled. The default value is true. Only works with multiline={true}",name:"scrollEnabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"autoComplete"':{defaultValue:null,description:"Specifies autocomplete hints for the system, so it can provide autofill. On Android, the system will always attempt to offer autofill by using heuristics to identify the type of content.\nTo disable autocomplete, set `autoComplete` to `off`.\n\n*Android Only*\n\nPossible values for `autoComplete` are:\n\n- `birthdate-day`\n- `birthdate-full`\n- `birthdate-month`\n- `birthdate-year`\n- `cc-csc`\n- `cc-exp`\n- `cc-exp-day`\n- `cc-exp-month`\n- `cc-exp-year`\n- `cc-number`\n- `email`\n- `gender`\n- `name`\n- `name-family`\n- `name-given`\n- `name-middle`\n- `name-middle-initial`\n- `name-prefix`\n- `name-suffix`\n- `password`\n- `password-new`\n- `postal-address`\n- `postal-address-country`\n- `postal-address-extended`\n- `postal-address-extended-postal-code`\n- `postal-address-locality`\n- `postal-address-region`\n- `postal-code`\n- `street-address`\n- `sms-otp`\n- `tel`\n- `tel-country-code`\n- `tel-national`\n- `tel-device`\n- `username`\n- `username-new`\n- `off`",name:"autoComplete",required:!1,type:{name:'"off" | "name" | "username" | "password" | "birthdate-day" | "birthdate-full" | "birthdate-month" | "birthdate-year" | "cc-csc" | "cc-exp" | "cc-exp-day" | "cc-exp-month" | ... 24 more ... | "username-new"',raw:null,value:null}},'"cursorColor"':{defaultValue:null,description:'When provided it will set the color of the cursor (or "caret") in the component.\nUnlike the behavior of `selectionColor` the cursor color will be set independently\nfrom the color of the text selection box.\n@platform [object Object]',name:"cursorColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"importantForAutofill"':{defaultValue:null,description:"Determines whether the individual fields in your app should be included in a\nview structure for autofill purposes on Android API Level 26+. Defaults to auto.\nTo disable auto complete, use `off`.\n\n*Android Only*\n\nThe following values work on Android only:\n\n- `auto` - let Android decide\n- `no` - not important for autofill\n- `noExcludeDescendants` - this view and its children aren't important for autofill\n- `yes` - is important for autofill\n- `yesExcludeDescendants` - this view is important for autofill but its children aren't",name:"importantForAutofill",required:!1,type:{name:'"auto" | "yes" | "no" | "noExcludeDescendants" | "yesExcludeDescendants"',raw:null,value:null}},'"disableFullscreenUI"':{defaultValue:null,description:"When false, if there is a small amount of space available around a text input (e.g. landscape orientation on a phone),\n  the OS may choose to have the user edit the text inside of a full screen text input mode.\nWhen true, this feature is disabled and users will always edit the text directly inside of the text input.\nDefaults to false.",name:"disableFullscreenUI",required:!1,type:{name:"boolean",raw:null,value:null}},'"inlineImageLeft"':{defaultValue:null,description:"If defined, the provided image resource will be rendered on the left.",name:"inlineImageLeft",required:!1,type:{name:"string",raw:null,value:null}},'"inlineImagePadding"':{defaultValue:null,description:"Padding between the inline image, if any, and the text input itself.",name:"inlineImagePadding",required:!1,type:{name:"number",raw:null,value:null}},'"numberOfLines"':{defaultValue:null,description:"Sets the number of lines for a TextInput.\nUse it with multiline set to true to be able to fill the lines.",name:"numberOfLines",required:!1,type:{name:"number",raw:null,value:null}},'"returnKeyLabel"':{defaultValue:null,description:"Sets the return key to the label. Use it instead of `returnKeyType`.\n@platform [object Object]",name:"returnKeyLabel",required:!1,type:{name:"string",raw:null,value:null}},'"textBreakStrategy"':{defaultValue:null,description:"Set text break strategy on Android API Level 23+, possible values are simple, highQuality, balanced\nThe default value is simple.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced"',raw:null,value:null}},'"underlineColorAndroid"':{defaultValue:null,description:"The color of the textInput underline.",name:"underlineColorAndroid",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"textAlignVertical"':{defaultValue:null,description:"Vertically align text when `multiline` is set to true",name:"textAlignVertical",required:!1,type:{name:'"center" | "auto" | "top" | "bottom"',raw:null,value:null}},'"showSoftInputOnFocus"':{defaultValue:null,description:"When false, it will prevent the soft keyboard from showing when the field is focused. The default value is true",name:"showSoftInputOnFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"verticalAlign"':{defaultValue:null,description:"Vertically align text when `multiline` is set to true",name:"verticalAlign",required:!1,type:{name:'"auto" | "top" | "bottom" | "middle"',raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"isActive"':{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean",raw:null,value:null}},'"error"':{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string",raw:null,value:null}},'"startAdornament"':{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"endAdornament"':{defaultValue:null,description:"",name:"endAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"inputRef"':{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>",raw:null,value:null}},'"noClearButton"':{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean",raw:null,value:null}},'"max"':{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number",raw:null,value:null}},'"min"':{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number",raw:null,value:null}},'"maxDecimalPlaces"':{defaultValue:null,description:"",name:"maxDecimalPlaces",required:!1,type:{name:"number",raw:null,value:null}},'"hasCommaSeperators"':{defaultValue:null,description:"",name:"hasCommaSeperators",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{NumberField.displayName="NumberField",NumberField.__docgenInfo={description:"",displayName:"NumberField",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChangeText:{defaultValue:null,description:"Callback that is called when the text input's text changes.\nChanged text is passed as an argument to the callback handler.",name:"onChangeText",required:!1,type:{name:"((value: string) => void) & ((text: string) => void)"}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},startAdornament:{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element"}},endAdornament:{defaultValue:null,description:"",name:"endAdornament",required:!1,type:{name:"Element"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>"}},noClearButton:{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},maxDecimalPlaces:{defaultValue:null,description:"",name:"maxDecimalPlaces",required:!1,type:{name:"number"}},hasCommaSeperators:{defaultValue:null,description:"",name:"hasCommaSeperators",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/NumberField/NumberField.tsx#NumberField"]={docgenInfo:NumberField.__docgenInfo,name:"NumberField",path:"../../packages/boi-react-native-components/src/NumberField/NumberField.tsx#NumberField"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/OuterField/OuterField.dark.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.container=exports.clearButton=exports.adornamentDivider=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),lightStyles=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.styles.tsx"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var inputBorder=_app.darkScheme.inputBorder,inputBorderActive=_app.darkScheme.inputBorderActive,inputBorderError=_app.darkScheme.inputBorderError,inputBorderDisabled=_app.darkScheme.inputBorderDisabled,inputColors=_app.darkScheme.inputColors,inputColorsDisabled=_app.darkScheme.inputColorsDisabled,container=_reactNative.StyleSheet.create({default:Object.assign({},lightStyles.container.default,{borderStyle:inputBorder.borderStyle,borderColor:inputBorder.borderColor}),isActive:{borderColor:inputBorderActive.borderColor},isDisabled:{borderColor:inputBorderDisabled.borderColor,opacity:inputColorsDisabled.opacity,color:inputColorsDisabled.color,backgroundColor:inputColorsDisabled.backgroundColor},hasError:{borderColor:inputBorderError.borderColor}});exports.container=container;var clearButton=_reactNative.StyleSheet.create({default:Object.assign({},lightStyles.clearButton.default,{color:inputColors.color,backgroundColor:inputColors.backgroundColor})});exports.clearButton=clearButton;var adornamentDivider=_reactNative.StyleSheet.create({default:Object.assign({},lightStyles.adornamentDivider.default,{borderLeftColor:inputBorder.borderColor})});exports.adornamentDivider=adornamentDivider},"../../packages/boi-react-native-components/src/OuterField/OuterField.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.container=exports.clearButton=exports.adornamentDivider=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),inputBorder=_app.lightScheme.inputBorder,inputBorderActive=_app.lightScheme.inputBorderActive,inputBorderError=_app.lightScheme.inputBorderError,inputBorderDisabled=_app.lightScheme.inputBorderDisabled,inputColors=_app.lightScheme.inputColors,inputColorsDisabled=_app.lightScheme.inputColorsDisabled,formElementContainer=_app.lightScheme.formElementContainer,clearButtonDimensions=_app.lightScheme.clearButtonDimensions,container=_reactNative.StyleSheet.create({default:{borderStyle:inputBorder.borderStyle,borderWidth:inputBorder.borderWidth,borderColor:inputBorder.borderColor,maxWidth:formElementContainer.maxWidth,display:"flex",flexDirection:"row"},isActive:{borderColor:inputBorderActive.borderColor},isDisabled:{borderColor:inputBorderDisabled.borderColor,opacity:inputColorsDisabled.opacity,color:inputColorsDisabled.color,backgroundColor:inputColorsDisabled.backgroundColor},hasError:{borderColor:inputBorderError.borderColor}});exports.container=container;var clearButton=_reactNative.StyleSheet.create({default:{width:clearButtonDimensions.width,height:clearButtonDimensions.height,color:inputColors.color,backgroundColor:inputColors.backgroundColor,justifyContent:"center"}});exports.clearButton=clearButton;var adornamentDivider=_reactNative.StyleSheet.create({default:{marginVertical:8,borderLeftWidth:1,borderLeftColor:inputBorder.borderColor}});exports.adornamentDivider=adornamentDivider},"../../packages/boi-react-native-components/src/OuterField/OuterField.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.OuterField=void 0;_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_FormError=__webpack_require__("../../packages/boi-react-native-components/src/FormError/FormError.tsx"),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),lightStyles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.styles.tsx")),darkStyles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.dark.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var OuterField=function OuterField(_ref){var disabled=_ref.disabled,isActive=_ref.isActive,error=_ref.error,startAdornament=_ref.startAdornament,endAdornament=_ref.endAdornament,children=_ref.children,inputRef=_ref.inputRef,noClearButton=_ref.noClearButton,onChangeText=_ref.onChangeText,styles="light"===(0,_reactNative.useColorScheme)()?lightStyles:darkStyles,containerStyles=disabled?_reactNative.StyleSheet.compose(styles.container.default,styles.container.isDisabled):error?_reactNative.StyleSheet.compose(styles.container.default,styles.container.hasError):isActive?_reactNative.StyleSheet.compose(styles.container.default,styles.container.isActive):styles.container.default;return(0,_jsxRuntime.jsxs)(_reactNative.View,{children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:containerStyles,children:[startAdornament&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[startAdornament,(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.adornamentDivider.default})]}),children,endAdornament&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.adornamentDivider.default}),endAdornament]}),noClearButton||endAdornament||!onChangeText||disabled?(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{}):(0,_jsxRuntime.jsx)(_reactNative.Pressable,{style:styles.clearButton.default,onPress:function clearTextField(){null!=inputRef&&inputRef.current&&(inputRef.current.clear(),inputRef.current.focus()),onChangeText&&onChangeText("")},accessibilityRole:"button",accessibilityLabel:"Clear text",testID:"ClearButton",children:(0,_jsxRuntime.jsx)(_reactNativeIcons.CloseIcon,{color:styles.clearButton.default.color,height:16})})]}),(0,_jsxRuntime.jsx)(_FormError.FormError,{message:error})]})};exports.OuterField=OuterField,OuterField.displayName="OuterField";try{OuterField.displayName="OuterField",OuterField.__docgenInfo={description:"",displayName:"OuterField",props:{'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"isActive"':{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean",raw:null,value:null}},'"error"':{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string",raw:null,value:null}},'"startAdornament"':{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"endAdornament"':{defaultValue:null,description:"",name:"endAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"inputRef"':{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>",raw:null,value:null}},'"noClearButton"':{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean",raw:null,value:null}},'"onChangeText"':{defaultValue:null,description:"",name:"onChangeText",required:!1,type:{name:"(value: string) => void",raw:null,value:null}}}}}catch(e){}try{OuterField.displayName="OuterField",OuterField.__docgenInfo={description:"",displayName:"OuterField",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},startAdornament:{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element"}},endAdornament:{defaultValue:null,description:"",name:"endAdornament",required:!1,type:{name:"Element"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>"}},noClearButton:{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean"}},onChangeText:{defaultValue:null,description:"",name:"onChangeText",required:!1,type:{name:"(value: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/OuterField/OuterField.tsx#OuterField"]={docgenInfo:OuterField.__docgenInfo,name:"OuterField",path:"../../packages/boi-react-native-components/src/OuterField/OuterField.tsx#OuterField"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/PressableAdornament/PressableAdornament.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.PressableAdornament=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=(_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js")),__webpack_require__("../../node_modules/react-native-web/dist/index.js")),_Adornament=__webpack_require__("../../packages/boi-react-native-components/src/Adornament/Adornament.styles.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["children","style","size","accessibilityRole"],PressableAdornament=function PressableAdornament(_ref){var children=_ref.children,style=_ref.style,_ref$size=_ref.size,size=void 0===_ref$size?"small":_ref$size,_ref$accessibilityRol=_ref.accessibilityRole,accessibilityRole=void 0===_ref$accessibilityRol?"button":_ref$accessibilityRol,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded),wrapperStyle="function"==typeof style?function(state){return[(0,_Adornament.getStyles)(size),style(state)]}:[(0,_Adornament.getStyles)(size),style],content="function"==typeof children?children:(0,_jsxRuntime.jsx)(_reactNative.View,{children});return(0,_jsxRuntime.jsx)(_reactNative.Pressable,Object.assign({accessibilityRole,accessibilityState:{disabled:Boolean(rest.disabled)}},rest,{style:wrapperStyle,children:content}))};exports.PressableAdornament=PressableAdornament,PressableAdornament.displayName="PressableAdornament";try{PressableAdornament.displayName="PressableAdornament",PressableAdornament.__docgenInfo={description:"",displayName:"PressableAdornament",props:{'"onHoverIn"':{defaultValue:null,description:"Called when the hover is activated to provide visual feedback.",name:"onHoverIn",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onHoverOut"':{defaultValue:null,description:"Called when the hover is deactivated to undo visual feedback.",name:"onHoverOut",required:!1,type:{name:"(event: MouseEvent) => void",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"Called when a single tap gesture is detected.",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Called when a touch is engaged before `onPress`.",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Called when a touch is released before `onPress`.",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"Called when a long-tap gesture is detected.",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Called after the element loses focus.\n@platform [object Object]",name:"onBlur",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Called after the element is focused.\n@platform [object Object]",name:"onFocus",required:!1,type:{name:"(event: NativeSyntheticEvent<TargetedEvent>) => void",raw:null,value:null}},'"children"':{defaultValue:null,description:"Either children or a render prop that receives a boolean reflecting whether\nthe component is currently pressed.",name:"children",required:!1,type:{name:"ReactNode | ((state: PressableStateCallbackType) => ReactNode)",raw:null,value:null}},'"cancelable"':{defaultValue:null,description:"Whether a press gesture can be interrupted by a parent gesture such as a\nscroll event. Defaults to true.",name:"cancelable",required:!1,type:{name:"boolean",raw:null,value:null}},'"delayHoverIn"':{defaultValue:null,description:"Duration to wait after hover in before calling `onHoverIn`.\n@platform [object Object]",name:"delayHoverIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayHoverOut"':{defaultValue:null,description:"Duration to wait after hover out before calling `onHoverOut`.\n@platform [object Object]",name:"delayHoverOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"Whether the press behavior is disabled.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"Additional distance outside of this view in which a press is detected.",name:"hitSlop",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"pressRetentionOffset"':{defaultValue:null,description:"Additional distance outside of this view in which a touch is considered a\npress before `onPressOut` is triggered.",name:"pressRetentionOffset",required:!1,type:{name:"number | Insets",raw:null,value:null}},'"android_disableSound"':{defaultValue:null,description:"If true, doesn't play system sound on touch.",name:"android_disableSound",required:!1,type:{name:"boolean",raw:null,value:null}},'"android_ripple"':{defaultValue:null,description:"Enables the Android ripple effect and configures its color.",name:"android_ripple",required:!1,type:{name:"PressableAndroidRippleConfig",raw:null,value:null}},'"testOnly_pressed"':{defaultValue:null,description:"Used only for documentation or testing (e.g. snapshot testing).",name:"testOnly_pressed",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"Either view styles or a function that receives a boolean reflecting whether\nthe component is currently pressed and returns view styles.",name:"style",required:!1,type:{name:"StyleProp<ViewStyle> | ((state: PressableStateCallbackType) => StyleProp<ViewStyle>)",raw:null,value:null}},'"unstable_pressDelay"':{defaultValue:null,description:"Duration (in milliseconds) to wait after press down before calling onPressIn.",name:"unstable_pressDelay",required:!1,type:{name:"number",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:{value:"button"},description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"none" | "auto" | "box-none" | "box-only"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"size"':{defaultValue:{value:"small"},description:"",name:"size",required:!1,type:{name:"AdornmentSizeType",raw:null,value:null}}}}}catch(e){}try{PressableAdornament.displayName="PressableAdornament",PressableAdornament.__docgenInfo={description:"",displayName:"PressableAdornament",props:{size:{defaultValue:{value:"small"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/PressableAdornament/PressableAdornament.tsx#PressableAdornament"]={docgenInfo:PressableAdornament.__docgenInfo,name:"PressableAdornament",path:"../../packages/boi-react-native-components/src/PressableAdornament/PressableAdornament.tsx#PressableAdornament"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/PressableAdornament/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"PressableAdornament",{enumerable:!0,get:function get(){return _PressableAdornament.PressableAdornament}});var _PressableAdornament=__webpack_require__("../../packages/boi-react-native-components/src/PressableAdornament/PressableAdornament.tsx")},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,_default=_reactNative.StyleSheet.create({container:{position:"relative",display:"flex",gap:10,padding:20},divider:{display:"flex",gap:30,paddingVertical:10},heading:{fontWeight:"600"},flatListContainer:{zIndex:1},dropZone:{height:60,borderWidth:1,borderStyle:"dashed",borderColor:color.grey,borderRadius:8,marginBottom:10,opacity:.5}});exports.default=_default},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=QuickLinks,__webpack_require__("../../node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _react=__webpack_require__("../../node_modules/react/index.js"),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_reactNativeGestureHandler=__webpack_require__("../../node_modules/react-native-gesture-handler/lib/module/index.js"),_reactNativeDraggableFlatlist=__webpack_require__("../../node_modules/react-native-draggable-flatlist/lib/module/index.js"),_QuickLinks=__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.utils.ts"),_QuickLinksItem=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/index.ts")),_QuickLinks2=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function QuickLinks(props){var items=props.items,onChange=props.onChange,maxItemsEnabled=props.maxItemsEnabled,_props$testID=props.testID,testID=void 0===_props$testID?"quick-links":_props$testID,sortedItems=(0,_react.useMemo)((function(){return(0,_QuickLinks.getSortedItems)(items)}),[items]),itemsEnabled=items.filter((function(item){return item.enabled})).length;return(0,_jsxRuntime.jsx)(_reactNativeGestureHandler.GestureHandlerRootView,{children:(0,_jsxRuntime.jsx)(_reactNativeDraggableFlatlist.NestableScrollContainer,{children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:_QuickLinks2.default.container,testID,children:[(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:_QuickLinks2.default.heading,children:"Enabled"})}),(0,_jsxRuntime.jsx)(_reactNativeDraggableFlatlist.NestableDraggableFlatList,{data:sortedItems,renderItem:function renderItem(itemParams){if(itemParams.item.key===_QuickLinks.DIVIDER_KEY)return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:_QuickLinks2.default.divider,testID:testID+"-divider",children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinks2.default.dropZone}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:_QuickLinks2.default.heading,children:"Disabled"})]});var isDraggable=!0;return maxItemsEnabled&&!itemParams.item.enabled&&itemsEnabled>=maxItemsEnabled&&(isDraggable=!1),(0,_jsxRuntime.jsx)(_QuickLinksItem.default,Object.assign({},itemParams,{isDraggable,testID:testID+"-"+itemParams.item.key}))},keyExtractor:function keyExtractor(_ref){return _ref.key},onDragEnd:function onDragEnd(_ref2){var data=_ref2.data;return onChange((0,_QuickLinks.updateSortedItems)(data))},containerStyle:_QuickLinks2.default.flatListContainer,testID:testID+"-list"}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinks2.default.dropZone})]})})})}QuickLinks.displayName="QuickLinks";try{QuickLinks.displayName="QuickLinks",QuickLinks.__docgenInfo={description:"",displayName:"QuickLinks",props:{'"items"':{defaultValue:null,description:"",name:"items",required:!0,type:{name:"TQuickLinksItem[]",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(items: TQuickLinksItem[]) => void",raw:null,value:null}},'"maxItemsEnabled"':{defaultValue:null,description:"",name:"maxItemsEnabled",required:!1,type:{name:"number",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{QuickLinks.displayName="QuickLinks",QuickLinks.__docgenInfo={description:"",displayName:"QuickLinks",props:{items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"TQuickLinksItem[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(items: TQuickLinksItem[]) => void"}},maxItemsEnabled:{defaultValue:null,description:"",name:"maxItemsEnabled",required:!1,type:{name:"number"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.tsx#QuickLinks"]={docgenInfo:QuickLinks.__docgenInfo,name:"QuickLinks",path:"../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.tsx#QuickLinks"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.utils.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.DIVIDER_KEY=void 0,exports.getSortedItems=function getSortedItems(items){var enabledItems=items.filter((function(item){return item.enabled})),disabledItems=items.filter((function(item){return!item.enabled}));return[].concat((0,_toConsumableArray2.default)(enabledItems),[{key:DIVIDER_KEY}],(0,_toConsumableArray2.default)(disabledItems))},exports.updateSortedItems=function updateSortedItems(items){var dividerItemIndex=items.indexOf(items.find((function(item){return item.key===DIVIDER_KEY})));return items.map((function(item,itemIndex){return itemIndex<dividerItemIndex?Object.assign({},item,{enabled:!0}):itemIndex>dividerItemIndex?Object.assign({},item,{enabled:!1}):item})).filter((function(item){return item.key!==DIVIDER_KEY}))};var _toConsumableArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/toConsumableArray.js"));__webpack_require__("../../node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.find.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var DIVIDER_KEY="quick-links-divider-key";exports.DIVIDER_KEY=DIVIDER_KEY},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/QuickLinksItem.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,_default=_reactNative.StyleSheet.create({container:{display:"flex",flexDirection:"row",alignItems:"center",gap:10,height:60,marginVertical:4,paddingHorizontal:10,borderRadius:8,borderWidth:1,borderStyle:"solid",borderColor:color.fieldOutline,backgroundColor:color.white},iconWrapper:{width:20},titleWrapper:{flex:1},title:{fontWeight:"600",color:color.darkGrey},category:{color:color.darkGrey},grip:{display:"flex",flexDirection:"row",flexWrap:"wrap",width:16,marginLeft:10},gripDisabled:{opacity:.35},gripCircle:{margin:2,width:4,height:4,borderRadius:4,backgroundColor:color.fieldOutline}});exports.default=_default},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/QuickLinksItem.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=QuickLinksItem,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_QuickLinksItem=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/QuickLinksItem.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function QuickLinksItem(props){var _pressEvent,item=props.item,drag=props.drag,isActive=props.isActive,isDraggable=props.isDraggable,testID=props.testID,pressEvent=((_pressEvent={})["web"===_reactNative.Platform.OS?"onPressIn":"onLongPress"]=drag,_pressEvent);return(0,_jsxRuntime.jsxs)(_reactNative.Pressable,Object.assign({},pressEvent,{role:"checkbox",accessibilityRole:"checkbox",accessibilityLabel:item.title,accessibilityState:{checked:item.enabled,disabled:isDraggable},style:_QuickLinksItem.default.container,disabled:!isDraggable||isActive,testID:testID+"-pressable",children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.iconWrapper,children:item.icon}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.titleWrapper,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:_QuickLinksItem.default.title,numberOfLines:1,children:item.title})}),(0,_jsxRuntime.jsx)(_reactNative.View,{children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:_QuickLinksItem.default.category,numberOfLines:1,children:item.category})}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_QuickLinksItem.default.grip,isDraggable?{}:_QuickLinksItem.default.gripDisabled],children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.gripCircle}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.gripCircle}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.gripCircle}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.gripCircle}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.gripCircle}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:_QuickLinksItem.default.gripCircle})]})]}))}QuickLinksItem.displayName="QuickLinksItem";try{QuickLinksItem.displayName="QuickLinksItem",QuickLinksItem.__docgenInfo={description:"",displayName:"QuickLinksItem",props:{'"item"':{defaultValue:null,description:"",name:"item",required:!0,type:{name:"TQuickLinksItem",raw:null,value:null}},'"getIndex"':{defaultValue:null,description:"",name:"getIndex",required:!0,type:{name:"() => number",raw:null,value:null}},'"drag"':{defaultValue:null,description:"",name:"drag",required:!0,type:{name:"() => void",raw:null,value:null}},'"isActive"':{defaultValue:null,description:"",name:"isActive",required:!0,type:{name:"boolean",raw:null,value:null}},'"isDraggable"':{defaultValue:null,description:"",name:"isDraggable",required:!0,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!0,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{QuickLinksItem.displayName="QuickLinksItem",QuickLinksItem.__docgenInfo={description:"",displayName:"QuickLinksItem",props:{item:{defaultValue:null,description:"",name:"item",required:!0,type:{name:"TQuickLinksItem"}},getIndex:{defaultValue:null,description:"",name:"getIndex",required:!0,type:{name:"() => number"}},drag:{defaultValue:null,description:"",name:"drag",required:!0,type:{name:"() => void"}},isActive:{defaultValue:null,description:"",name:"isActive",required:!0,type:{name:"boolean"}},isDraggable:{defaultValue:null,description:"",name:"isDraggable",required:!0,type:{name:"boolean"}},testID:{defaultValue:null,description:"",name:"testID",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/QuickLinksItem.tsx#QuickLinksItem"]={docgenInfo:QuickLinksItem.__docgenInfo,name:"QuickLinksItem",path:"../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/QuickLinksItem.tsx#QuickLinksItem"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _QuickLinksItem.default}});var _QuickLinksItem=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/QuickLinksItem/QuickLinksItem.tsx"))},"../../packages/boi-react-native-components/src/QuickLinks/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"QuickLinks",{enumerable:!0,get:function get(){return _QuickLinks.default}});var _QuickLinks=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.tsx"))},"../../packages/boi-react-native-components/src/Radio/Radio.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _ToggleableBase=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function Radio(props){return(0,_jsxRuntime.jsx)(_ToggleableBase.default,Object.assign({},props,{type:"radio"}))}Radio.displayName="Radio";var _default=Radio;exports.default=_default;try{Radio.displayName="Radio",Radio.__docgenInfo={description:"",displayName:"Radio",props:{'"value"':{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void",raw:null,value:null}},'"name"':{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string",raw:null,value:null}},'"label"':{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string",raw:null,value:null}},'"checked"':{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"ariaLabel"':{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Radio.displayName="Radio",Radio.__docgenInfo={description:"",displayName:"Radio",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Radio/Radio.tsx#Radio"]={docgenInfo:Radio.__docgenInfo,name:"Radio",path:"../../packages/boi-react-native-components/src/Radio/Radio.tsx#Radio"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Radio/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Radio",{enumerable:!0,get:function get(){return _Radio.default}});var _Radio=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Radio/Radio.tsx"))},"../../packages/boi-react-native-components/src/RadioGroup/RadioGroup.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.function.name.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Radio=__webpack_require__("../../packages/boi-react-native-components/src/Radio/index.ts"),_react=__webpack_require__("../../node_modules/react/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function RadioGroup(props){var name=props.name,options=props.options,checkedValue=props.checkedValue,onChange=props.onChange,viewProps=props.viewProps;return(0,_jsxRuntime.jsx)(_reactNative.View,Object.assign({},viewProps,{role:"radiogroup",accessibilityRole:"radiogroup",children:options.map((function(option){return(0,_react.createElement)(_Radio.Radio,Object.assign({},option,{key:option.value,name,checked:option.value===checkedValue,onChange}))}))}))}RadioGroup.displayName="RadioGroup";var _default=RadioGroup;exports.default=_default;try{RadioGroup.displayName="RadioGroup",RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void",raw:null,value:null}},'"name"':{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string",raw:null,value:null}},'"options"':{defaultValue:null,description:"",name:"options",required:!0,type:{name:"RadioGroupOption[]",raw:null,value:null}},'"checkedValue"':{defaultValue:null,description:"",name:"checkedValue",required:!0,type:{name:"string | number",raw:null,value:null}},'"viewProps"':{defaultValue:null,description:"",name:"viewProps",required:!1,type:{name:'Omit<ViewProps, "role" | "accessibilityRole">',raw:null,value:null}}}}}catch(e){}try{RadioGroup.displayName="RadioGroup",RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"RadioGroupOption[]"}},checkedValue:{defaultValue:null,description:"",name:"checkedValue",required:!0,type:{name:"string | number"}},viewProps:{defaultValue:null,description:"",name:"viewProps",required:!1,type:{name:'Omit<ViewProps, "role" | "accessibilityRole">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/RadioGroup/RadioGroup.tsx#RadioGroup"]={docgenInfo:RadioGroup.__docgenInfo,name:"RadioGroup",path:"../../packages/boi-react-native-components/src/RadioGroup/RadioGroup.tsx#RadioGroup"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/RadioGroup/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"RadioGroup",{enumerable:!0,get:function get(){return _RadioGroup.default}});var _RadioGroup=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/RadioGroup/RadioGroup.tsx"))},"../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.select=exports.placeholder=exports.modal=exports.listItem=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,select=_reactNative.StyleSheet.create({wrapper:{position:"relative",flex:1,height:38,width:"100%"},input:{flex:1,flexDirection:"row",paddingHorizontal:16,justifyContent:"space-between",alignItems:"center"}});exports.select=select;var placeholder=_reactNative.StyleSheet.create({isDisabled:{color:color.highlightPanels}});exports.placeholder=placeholder;var modal=_reactNative.StyleSheet.create({background:Object.assign({},_reactNative.StyleSheet.absoluteFillObject),scrollView:{backgroundColor:"white",position:"absolute",height:114,borderWidth:2,borderColor:color.highlightPanels}});exports.modal=modal;var listItem=_reactNative.StyleSheet.create({default:{height:38,paddingHorizontal:8,justifyContent:"center"},isActive:{backgroundColor:color.highlightPanels},isDisabled:{}});exports.listItem=listItem},"../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.InnerSelect=void 0,__webpack_require__("../../node_modules/core-js/modules/es.array.find.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.date.to-string.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_react=_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),styles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.styles.tsx")),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["disabled","options","value","placeholder","isActive","style","dropdownOffset","onChange","onFocus","onBlur"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var color=_app.lightScheme.color,InnerSelect=function InnerSelect(_ref){var disabled=_ref.disabled,options=_ref.options,value=_ref.value,placeholder=_ref.placeholder,isActive=_ref.isActive,style=_ref.style,_ref$dropdownOffset=_ref.dropdownOffset,dropdownOffset=void 0===_ref$dropdownOffset?0:_ref$dropdownOffset,onChange=_ref.onChange,onFocus=_ref.onFocus,onBlur=_ref.onBlur,viewProps=(0,_objectWithoutProperties2.default)(_ref,_excluded),viewRef=(0,_react.useRef)(null),_useState=(0,_react.useState)(),_useState2=(0,_slicedToArray2.default)(_useState,2),layout=_useState2[0],setLayout=_useState2[1],handleLayout=(0,_react.useCallback)((function(){var _viewRef$current;null===(_viewRef$current=viewRef.current)||void 0===_viewRef$current||_viewRef$current.measureInWindow((function(pageX,pageY,containerWidth,containerheight){var bottom,windowSize=_reactNative.Dimensions.get("window"),statusBarHeight=_reactNative.StatusBar.currentHeight||0,height=3*Math.floor(containerheight),top=containerheight+pageY+dropdownOffset+statusBarHeight;top+height>windowSize.height&&(bottom=windowSize.height-top+containerheight+2*dropdownOffset,top=void 0),setLayout({width:Math.floor(containerWidth)+2*dropdownOffset,top,bottom,left:Math.floor(pageX)-dropdownOffset,height})}))}),[dropdownOffset]);(0,_react.useEffect)((function(){isActive&&handleLayout()}),[isActive,handleLayout]);var selectLabel=(0,_react.useMemo)((function(){var _options$find;return value&&options?null===(_options$find=options.find((function(row){return row.value===value})))||void 0===_options$find?void 0:_options$find.label:void 0}),[value,options]);return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_reactNative.View,Object.assign({},viewProps,{ref:viewRef,onLayout:handleLayout,style:[styles.select.wrapper,style],children:(0,_jsxRuntime.jsxs)(_reactNative.Pressable,{style:styles.select.input,onPress:onFocus,accessibilityRole:"combobox",accessibilityState:{expanded:isActive,disabled},disabled,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:disabled?styles.placeholder.isDisabled:void 0,numberOfLines:1,children:selectLabel||placeholder}),(0,_jsxRuntime.jsx)(_reactNativeIcons.ChevronDownIcon,{width:20,height:20,color:isActive?color.primaryBlue:color.underlines})]})})),(0,_jsxRuntime.jsxs)(_reactNative.Modal,{visible:isActive,transparent:!0,statusBarTranslucent:!0,onRequestClose:onBlur,accessibilityElementsHidden:!isActive,accessibilityViewIsModal:!0,children:[(0,_jsxRuntime.jsx)(_reactNative.Pressable,{accessibilityRole:"button",accessibilityLabel:"Close Modal",style:styles.modal.background,onPress:onBlur}),(0,_jsxRuntime.jsx)(_reactNative.FlatList,{accessibilityRole:"list",style:[styles.modal.scrollView,layout],data:options,renderItem:function _renderItem(_ref2){var item=_ref2.item,index=_ref2.index,itemIsActive=item.value===value,itemStyle=[styles.listItem.default];return itemIsActive&&itemStyle.push(styles.listItem.isActive),(0,_jsxRuntime.jsx)(_reactNative.Pressable,{style:itemStyle,onPress:function handleOnPress(){onChange(item.value),onBlur&&onBlur()},accessibilityRole:"togglebutton",accessibilityState:{selected:itemIsActive},accessibilityValue:{text:item.value},children:(0,_jsxRuntime.jsx)(_reactNative.Text,{children:item.label})},index)},keyExtractor:function keyExtractor(_item,index){return index.toString()}})]})]})};exports.InnerSelect=InnerSelect;try{InnerSelect.displayName="InnerSelect",InnerSelect.__docgenInfo={description:"",displayName:"InnerSelect",props:{'"options"':{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOption[]",raw:null,value:null}},'"placeholder"':{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"",name:"onFocus",required:!0,type:{name:"() => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"",name:"onBlur",required:!0,type:{name:"() => void",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"value"':{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string",raw:null,value:null}},'"isActive"':{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean",raw:null,value:null}},'"dropdownOffset"':{defaultValue:{value:"0"},description:"",name:"dropdownOffset",required:!1,type:{name:"number",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{InnerSelect.displayName="InnerSelect",InnerSelect.__docgenInfo={description:"",displayName:"InnerSelect",props:{options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOption[]"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!0,type:{name:"() => void"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!0,type:{name:"() => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},dropdownOffset:{defaultValue:{value:"0"},description:"",name:"dropdownOffset",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.tsx#InnerSelect"]={docgenInfo:InnerSelect.__docgenInfo,name:"InnerSelect",path:"../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.tsx#InnerSelect"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Select/Select.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Select=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react/index.js")),_OuterField=__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.tsx"),_OuterField2=__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.styles.tsx"),_InnerSelect=__webpack_require__("../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["error","disabled","onFocus","onBlur","startAdornament"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var Select=function Select(_ref){var error=_ref.error,disabled=_ref.disabled,onFocus=_ref.onFocus,onBlur=_ref.onBlur,startAdornament=_ref.startAdornament,selectProps=(0,_objectWithoutProperties2.default)(_ref,_excluded),inputRef=(0,_react.useRef)(null),_useState=(0,_react.useState)(!1),_useState2=(0,_slicedToArray2.default)(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1];return(0,_jsxRuntime.jsx)(_OuterField.OuterField,{isActive,disabled,error,startAdornament,onChangeText:selectProps.onChange,inputRef,noClearButton:!0,children:(0,_jsxRuntime.jsx)(_InnerSelect.InnerSelect,Object.assign({isActive,onFocus:function handleFocus(){setIsActive(!0),onFocus&&onFocus()},onBlur:function handleBlur(){setIsActive(!1),onBlur&&onBlur()},dropdownOffset:_OuterField2.container.default.borderWidth},selectProps))})};exports.Select=Select,Select.displayName="Select";try{Select.displayName="Select",Select.__docgenInfo={description:"",displayName:"Select",props:{'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"options"':{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOption[]",raw:null,value:null}},'"placeholder"':{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"value"':{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string",raw:null,value:null}},'"dropdownOffset"':{defaultValue:null,description:"",name:"dropdownOffset",required:!1,type:{name:"number",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"() => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"() => void",raw:null,value:null}},'"error"':{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string",raw:null,value:null}},'"startAdornament"':{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"inputRef"':{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>",raw:null,value:null}},'"noClearButton"':{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{Select.displayName="Select",Select.__docgenInfo={description:"",displayName:"Select",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOption[]"}},dropdownOffset:{defaultValue:null,description:"",name:"dropdownOffset",required:!1,type:{name:"number"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"() => void"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"() => void"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},startAdornament:{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>"}},noClearButton:{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Select/Select.tsx#Select"]={docgenInfo:Select.__docgenInfo,name:"Select",path:"../../packages/boi-react-native-components/src/Select/Select.tsx#Select"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Select/SelectAdornament/SelectAdornament.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectAdornament=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react/index.js")),_InnerSelect=__webpack_require__("../../packages/boi-react-native-components/src/Select/InnerSelect/InnerSelect.tsx"),_Adornament=__webpack_require__("../../packages/boi-react-native-components/src/Adornament/index.ts"),_OuterField=__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.styles.tsx"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["onFocus","onBlur","style"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var SelectAdornament=function SelectAdornament(_ref){var onFocus=_ref.onFocus,onBlur=_ref.onBlur,style=_ref.style,selectProps=(0,_objectWithoutProperties2.default)(_ref,_excluded),_useState=(0,_react.useState)(!1),_useState2=(0,_slicedToArray2.default)(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1];return(0,_jsxRuntime.jsx)(_Adornament.Adornament,{size:"large",children:(0,_jsxRuntime.jsx)(_InnerSelect.InnerSelect,Object.assign({style,isActive,onFocus:function handleFocus(){setIsActive(!0),onFocus&&onFocus()},onBlur:function handleBlur(){setIsActive(!1),onBlur&&onBlur()},dropdownOffset:_OuterField.container.default.borderWidth},selectProps))})};exports.SelectAdornament=SelectAdornament,SelectAdornament.displayName="SelectAdornament";try{SelectAdornament.displayName="SelectAdornament",SelectAdornament.__docgenInfo={description:"",displayName:"SelectAdornament",props:{'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle> & ViewStyle",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"options"':{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOption[]",raw:null,value:null}},'"placeholder"':{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"value"':{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string",raw:null,value:null}},'"dropdownOffset"':{defaultValue:null,description:"",name:"dropdownOffset",required:!1,type:{name:"number",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"() => void",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"() => void",raw:null,value:null}}}}}catch(e){}try{SelectAdornament.displayName="SelectAdornament",SelectAdornament.__docgenInfo={description:"",displayName:"SelectAdornament",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOption[]"}},dropdownOffset:{defaultValue:null,description:"",name:"dropdownOffset",required:!1,type:{name:"number"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"() => void"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Select/SelectAdornament/SelectAdornament.tsx#SelectAdornament"]={docgenInfo:SelectAdornament.__docgenInfo,name:"SelectAdornament",path:"../../packages/boi-react-native-components/src/Select/SelectAdornament/SelectAdornament.tsx#SelectAdornament"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Select/SelectAdornament/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"SelectAdornament",{enumerable:!0,get:function get(){return _SelectAdornament.SelectAdornament}});var _SelectAdornament=__webpack_require__("../../packages/boi-react-native-components/src/Select/SelectAdornament/SelectAdornament.tsx")},"../../packages/boi-react-native-components/src/Slider/Slider.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=__webpack_require__("../../node_modules/react-native-web/dist/index.js").StyleSheet.create({slider:{height:35}});exports.default=_default},"../../packages/boi-react-native-components/src/Slider/Slider.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Slider=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_slider=_interopRequireDefault(__webpack_require__("../../node_modules/@react-native-community/slider/dist/Slider.js")),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_Slider=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Slider/Slider.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["disabled","value","step","minimumValue","maximumValue"],color=_app.lightScheme.color,Slider=function Slider(props){var disabled=props.disabled,_props$value=props.value,value=void 0===_props$value?1:_props$value,_props$step=props.step,step=void 0===_props$step?1:_props$step,_props$minimumValue=props.minimumValue,minimumValue=void 0===_props$minimumValue?1:_props$minimumValue,_props$maximumValue=props.maximumValue,maximumValue=void 0===_props$maximumValue?100:_props$maximumValue,otherProps=(0,_objectWithoutProperties2.default)(props,_excluded);return(0,_jsxRuntime.jsx)(_slider.default,Object.assign({},otherProps,{disabled,style:[_Slider.default.slider],minimumTrackTintColor:disabled?color.background:color.primaryBlue,maximumTrackTintColor:color.background,step,minimumValue,maximumValue,value}))};exports.Slider=Slider,Slider.displayName="Slider";try{Slider.displayName="Slider",Slider.__docgenInfo={description:"",displayName:"Slider",props:{'"disabled"':{defaultValue:null,description:"If true the user won't be able to move the slider.\nDefault value is false.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"maximumValue"':{defaultValue:null,description:"Initial maximum value of the slider. Default value is 1.",name:"maximumValue",required:!1,type:{name:"number",raw:null,value:null}},'"lowerLimit"':{defaultValue:null,description:"The lower limit value of the slider. The user won't be able to slide below this limit.",name:"lowerLimit",required:!1,type:{name:"number",raw:null,value:null}},'"upperLimit"':{defaultValue:null,description:"The upper limit value of the slider. The user won't be able to slide above this limit.",name:"upperLimit",required:!1,type:{name:"number",raw:null,value:null}},'"minimumValue"':{defaultValue:null,description:"Initial minimum value of the slider. Default value is 0.",name:"minimumValue",required:!1,type:{name:"number",raw:null,value:null}},'"onSlidingStart"':{defaultValue:null,description:"Callback that is called when the user picks up the slider.\nThe initial value is passed as an argument to the callback handler.",name:"onSlidingStart",required:!1,type:{name:"(value: number) => void",raw:null,value:null}},'"onSlidingComplete"':{defaultValue:null,description:"Callback called when the user finishes changing the value (e.g. when the slider is released).",name:"onSlidingComplete",required:!1,type:{name:"(value: number) => void",raw:null,value:null}},'"onValueChange"':{defaultValue:null,description:"Callback continuously called while the user is dragging the slider.",name:"onValueChange",required:!1,type:{name:"(value: number) => void",raw:null,value:null}},'"step"':{defaultValue:null,description:"Step value of the slider. The value should be between 0 and (maximumValue - minimumValue). Default value is 0.",name:"step",required:!1,type:{name:"number",raw:null,value:null}},'"style"':{defaultValue:null,description:"Used to style and layout the Slider. See StyleSheet.js and ViewStylePropTypes.js for more info.",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in UI automation tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"value"':{defaultValue:null,description:"Write-only property representing the value of the slider.\nCan be used to programmatically control the position of the thumb.\nEntered once at the beginning still acts as an initial value.\nThe value should be between minimumValue and maximumValue,\nwhich default to 0 and 1 respectively.\nDefault value is 0.\n\nThis is not a controlled component, you don't need to update the\nvalue during dragging.",name:"value",required:!1,type:{name:"number",raw:null,value:null}},'"inverted"':{defaultValue:null,description:"Reverses the direction of the slider.",name:"inverted",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityUnits"':{defaultValue:null,description:"A string of one or more words to be announced by the screen reader.\nOtherwise, it will announce the value as a percentage.\nRequires passing a value to `accessibilityIncrements` to work correctly.\nShould be a plural word, as singular units will be handled.",name:"accessibilityUnits",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityIncrements"':{defaultValue:null,description:"An array of values that represent the different increments displayed\nby the slider. All the values passed into this prop must be strings.\nRequires passing a value to `accessibilityUnits` to work correctly.\nThe number of elements must be the same as `maximumValue`.",name:"accessibilityIncrements",required:!1,type:{name:"string[]",raw:null,value:null}},'"ref"':{defaultValue:null,description:"Reference object.",name:"ref",required:!1,type:{name:"SliderReferenceType",raw:null,value:null}},'"maximumTrackImage"':{defaultValue:null,description:"Assigns a maximum track image. Only static images are supported.\nThe leftmost pixel of the image will be stretched to fill the track.",name:"maximumTrackImage",required:!1,type:{name:"ImageURISource",raw:null,value:null}},'"minimumTrackImage"':{defaultValue:null,description:"Assigns a minimum track image. Only static images are supported.\nThe rightmost pixel of the image will be stretched to fill the track.",name:"minimumTrackImage",required:!1,type:{name:"ImageURISource",raw:null,value:null}},'"tapToSeek"':{defaultValue:null,description:"Permits tapping on the slider track to set the thumb position.\nDefaults to false on iOS. No effect on Android or Windows.",name:"tapToSeek",required:!1,type:{name:"boolean",raw:null,value:null}},'"trackImage"':{defaultValue:null,description:"Assigns a single image for the track. Only static images\nare supported. The center pixel of the image will be stretched\nto fill the track.",name:"trackImage",required:!1,type:{name:"ImageURISource",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"thumbTintColor"':{defaultValue:null,description:"Color of the foreground switch grip.",name:"thumbTintColor",required:!1,type:{name:"string",raw:null,value:null}},'"vertical"':{defaultValue:null,description:"Controls the orientation of the slider, default value is 'false' (horizontal).",name:"vertical",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{Slider.displayName="Slider",Slider.__docgenInfo={description:"",displayName:"Slider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Slider/Slider.tsx#Slider"]={docgenInfo:Slider.__docgenInfo,name:"Slider",path:"../../packages/boi-react-native-components/src/Slider/Slider.tsx#Slider"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Slider/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Slider",{enumerable:!0,get:function get(){return _Slider.Slider}});var _Slider=__webpack_require__("../../packages/boi-react-native-components/src/Slider/Slider.tsx")},"../../packages/boi-react-native-components/src/Stepper/Step/Step.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.container=exports.connectingLine=void 0,exports.getStyleByState=function getStyleByState(style,state,orientation){var styles=[style.default];"default"!==state&&style[state]&&styles.push(style[state]);"vertical"===orientation&&style.isVertical&&styles.push(style.isVertical);return styles},exports.titleContainer=exports.title=exports.indicatorText=exports.indicator=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,container=_reactNative.StyleSheet.create({default:{position:"relative",alignItems:"center",marginHorizontal:16},isVertical:{alignItems:"flex-start",marginHorizontal:0}});exports.container=container;var titleContainer=_reactNative.StyleSheet.create({default:{display:"flex",position:"absolute",width:100,top:32,marginTop:8},isVertical:{marginTop:0,marginLeft:16,top:0,left:32,height:32,width:"100%",justifyContent:"center"}});exports.titleContainer=titleContainer;var title=_reactNative.StyleSheet.create({default:{fontWeight:"bold",textAlign:"center"},isDisabled:{fontWeight:"normal",color:color.underlines},isVertical:{textAlign:"left"}});exports.title=title;var indicator=_reactNative.StyleSheet.create({default:{display:"flex",color:color.primaryBlue,borderColor:color.primaryBlue,borderWidth:2,width:32,height:32,borderRadius:16,alignItems:"center",justifyContent:"center"},isCompleted:{backgroundColor:color.primaryBlue},isDisabled:{borderColor:color.underlines,color:color.underlines}});exports.indicator=indicator;var indicatorText=_reactNative.StyleSheet.create({default:{color:color.primaryBlue,fontWeight:"bold"},isDisabled:{color:color.underlines}});exports.indicatorText=indicatorText;var connectingLine=_reactNative.StyleSheet.create({default:{flexGrow:1,minWidth:20,height:1,marginVertical:16,marginHorizontal:-16,paddingHorizontal:16,backgroundColor:color.fieldOutline},isActive:{backgroundColor:color.primaryBlue},isCompleted:{backgroundColor:color.primaryBlue},isVertical:{flexGrow:0,minWidth:1,width:1,height:16,paddingHorizontal:0,marginHorizontal:16,marginVertical:0}});exports.connectingLine=connectingLine},"../../packages/boi-react-native-components/src/Stepper/Step/Step.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Step=Step,__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.date.to-string.js");_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js"));var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),styles=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Step/Step.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function Step(_ref){var title=_ref.title,index=_ref.index,_ref$orientation=_ref.orientation,orientation=void 0===_ref$orientation?"horizontal":_ref$orientation,isFirstStep=_ref.isFirstStep,isActive=_ref.isActive,isCompleted=_ref.isCompleted,isDisabled=_ref.isDisabled,isLineActive=_ref.isLineActive,state=isDisabled?"isDisabled":isCompleted?"isCompleted":isActive?"isActive":"default";return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[isFirstStep?null:(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.getStyleByState(styles.connectingLine,isLineActive?"isActive":state,orientation)}),(0,_jsxRuntime.jsxs)(_reactNative.View,{role:"heading",accessibilityRole:"header",accessibilityState:{disabled:isDisabled,selected:isActive,checked:isCompleted},accessibilityLabel:title,style:styles.getStyleByState(styles.container,state,orientation),children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.getStyleByState(styles.indicator,state),children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.getStyleByState(styles.indicatorText,state),children:(index+1).toString()})}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.getStyleByState(styles.titleContainer,state,orientation),children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.getStyleByState(styles.title,state,orientation),children:title})})]})]})}try{Step.displayName="Step",Step.__docgenInfo={description:"",displayName:"Step",props:{'"title"':{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string",raw:null,value:null}},'"index"':{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number",raw:null,value:null}},'"orientation"':{defaultValue:{value:"horizontal"},description:"",name:"orientation",required:!1,type:{name:"StepperOrientation",raw:null,value:null}},'"isActive"':{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean",raw:null,value:null}},'"isCompleted"':{defaultValue:null,description:"",name:"isCompleted",required:!1,type:{name:"boolean",raw:null,value:null}},'"isDisabled"':{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"isFirstStep"':{defaultValue:null,description:"",name:"isFirstStep",required:!1,type:{name:"boolean",raw:null,value:null}},'"isLineActive"':{defaultValue:null,description:"",name:"isLineActive",required:!1,type:{name:"boolean",raw:null,value:null}}}}}catch(e){}try{Step.displayName="Step",Step.__docgenInfo={description:"",displayName:"Step",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},orientation:{defaultValue:{value:"horizontal"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'}]}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},isCompleted:{defaultValue:null,description:"",name:"isCompleted",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean"}},isFirstStep:{defaultValue:null,description:"",name:"isFirstStep",required:!1,type:{name:"boolean"}},isLineActive:{defaultValue:null,description:"",name:"isLineActive",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Stepper/Step/Step.tsx#Step"]={docgenInfo:Step.__docgenInfo,name:"Step",path:"../../packages/boi-react-native-components/src/Stepper/Step/Step.tsx#Step"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Stepper/Step/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Step",{enumerable:!0,get:function get(){return _Step.Step}});var _Step=__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Step/Step.tsx")},"../../packages/boi-react-native-components/src/Stepper/Stepper.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.container=void 0,exports.getStyleByOrientation=getStyleByOrientation;var container=__webpack_require__("../../node_modules/react-native-web/dist/index.js").StyleSheet.create({default:{display:"flex",flexDirection:"row",justifyContent:"space-between",marginBottom:32,marginHorizontal:16},isVertical:{flexDirection:"column",marginHorizontal:0}});function getStyleByOrientation(orientation){var style=[container.default];return"vertical"===orientation&&style.push(container.isVertical),style}exports.container=container;try{getStyleByOrientation.displayName="getStyleByOrientation",getStyleByOrientation.__docgenInfo={description:"",displayName:"getStyleByOrientation",props:{'"toString"':{defaultValue:{value:"function toString() { [native code] }"},description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string",raw:null,value:null}},'"charAt"':{defaultValue:null,description:"Returns the character at the specified index.\n@param [object Object],[object Object],[object Object]",name:"charAt",required:!0,type:{name:"(pos: number) => string",raw:null,value:null}},'"charCodeAt"':{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param [object Object],[object Object],[object Object]",name:"charCodeAt",required:!0,type:{name:"(index: number) => number",raw:null,value:null}},'"concat"':{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param [object Object],[object Object],[object Object]",name:"concat",required:!0,type:{name:"(...strings: string[]) => string",raw:null,value:null}},'"indexOf"':{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number",raw:null,value:null}},'"lastIndexOf"':{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number",raw:null,value:null}},'"localeCompare"':{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }",raw:null,value:null}},'"match"':{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }",raw:null,value:null}},'"replace"':{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }",raw:null,value:null}},'"search"':{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }",raw:null,value:null}},'"slice"':{defaultValue:null,description:"Returns a section of a string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string",raw:null,value:null}},'"split"':{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }",raw:null,value:null}},'"substring"':{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string",raw:null,value:null}},'"toLowerCase"':{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string",raw:null,value:null}},'"toLocaleLowerCase"':{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string",raw:null,value:null}},'"toUpperCase"':{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string",raw:null,value:null}},'"toLocaleUpperCase"':{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string",raw:null,value:null}},'"trim"':{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string",raw:null,value:null}},'"length"':{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number",raw:null,value:null}},'"substr"':{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated [object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string",raw:null,value:null}},'"valueOf"':{defaultValue:{value:"function valueOf() { [native code] }"},description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string",raw:null,value:null}},'"codePointAt"':{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number",raw:null,value:null}},'"includes"':{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean",raw:null,value:null}},'"endsWith"':{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean",raw:null,value:null}},'"normalize"':{defaultValue:null,description:"Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }',raw:null,value:null}},'"repeat"':{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param [object Object],[object Object],[object Object]",name:"repeat",required:!0,type:{name:"(count: number) => string",raw:null,value:null}},'"startsWith"':{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean",raw:null,value:null}},'"anchor"':{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated [object Object]\n@param [object Object]",name:"anchor",required:!0,type:{name:"(name: string) => string",raw:null,value:null}},'"big"':{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated [object Object]",name:"big",required:!0,type:{name:"() => string",raw:null,value:null}},'"blink"':{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated [object Object]",name:"blink",required:!0,type:{name:"() => string",raw:null,value:null}},'"bold"':{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated [object Object]",name:"bold",required:!0,type:{name:"() => string",raw:null,value:null}},'"fixed"':{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated [object Object]",name:"fixed",required:!0,type:{name:"() => string",raw:null,value:null}},'"fontcolor"':{defaultValue:null,description:"Returns a `<font>` HTML element and sets the color attribute value\n@deprecated [object Object]",name:"fontcolor",required:!0,type:{name:"(color: string) => string",raw:null,value:null}},'"fontsize"':{defaultValue:null,description:"Returns a `<font>` HTML element and sets the size attribute value\n@deprecated [object Object]\n@deprecated [object Object]",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }",raw:null,value:null}},'"italics"':{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated [object Object]",name:"italics",required:!0,type:{name:"() => string",raw:null,value:null}},'"link"':{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated [object Object]",name:"link",required:!0,type:{name:"(url: string) => string",raw:null,value:null}},'"small"':{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated [object Object]",name:"small",required:!0,type:{name:"() => string",raw:null,value:null}},'"strike"':{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated [object Object]",name:"strike",required:!0,type:{name:"() => string",raw:null,value:null}},'"sub"':{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated [object Object]",name:"sub",required:!0,type:{name:"() => string",raw:null,value:null}},'"sup"':{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated [object Object]",name:"sup",required:!0,type:{name:"() => string",raw:null,value:null}},'"padStart"':{defaultValue:null,description:"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string",raw:null,value:null}},'"padEnd"':{defaultValue:null,description:"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string",raw:null,value:null}},'"trimEnd"':{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string",raw:null,value:null}},'"trimStart"':{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string",raw:null,value:null}},'"trimLeft"':{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated [object Object]",name:"trimLeft",required:!0,type:{name:"() => string",raw:null,value:null}},'"trimRight"':{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated [object Object]",name:"trimRight",required:!0,type:{name:"() => string",raw:null,value:null}},'"matchAll"':{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param [object Object],[object Object],[object Object]",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>",raw:null,value:null}},'"replaceAll"':{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]\n@param [object Object],[object Object],[object Object]",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }",raw:null,value:null}},'"at"':{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param [object Object],[object Object],[object Object]",name:"at",required:!0,type:{name:"(index: number) => string",raw:null,value:null}},'"__@iterator@9151"':{defaultValue:null,description:"Iterator",name:"__@iterator@9151",required:!0,type:{name:"() => IterableIterator<string>",raw:null,value:null}}}}}catch(e){}try{getStyleByOrientation.displayName="getStyleByOrientation",getStyleByOrientation.__docgenInfo={description:"",displayName:"getStyleByOrientation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Stepper/Stepper.styles.tsx#getStyleByOrientation"]={docgenInfo:getStyleByOrientation.__docgenInfo,name:"getStyleByOrientation",path:"../../packages/boi-react-native-components/src/Stepper/Stepper.styles.tsx#getStyleByOrientation"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Stepper/Stepper.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Stepper=Stepper,__webpack_require__("../../node_modules/core-js/modules/es.array.map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=(_interopRequireDefault(__webpack_require__("../../node_modules/react/index.js")),__webpack_require__("../../node_modules/react-native-web/dist/index.js")),_Stepper=__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Stepper.styles.tsx"),_Step=__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Step/index.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["steps","activeStepIndex","orientation"];function Stepper(_ref){var steps=_ref.steps,activeStepIndex=_ref.activeStepIndex,_ref$orientation=_ref.orientation,orientation=void 0===_ref$orientation?"horizontal":_ref$orientation,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded),style=(0,_Stepper.getStyleByOrientation)(orientation);return(0,_jsxRuntime.jsx)(_reactNative.View,Object.assign({},rest,{style,accessibilityRole:"progressbar",accessibilityValue:{now:activeStepIndex,min:0,max:steps.length},children:steps.map((function(step,index){return(0,_jsxRuntime.jsx)(_Step.Step,Object.assign({isActive:index===activeStepIndex,isCompleted:Boolean(step.isCompleted),isDisabled:step.isDisabled,isFirstStep:0===index,isLineActive:!!activeStepIndex&&index<activeStepIndex,index,orientation},step),index)}))}))}Stepper.displayName="Stepper";try{Stepper.displayName="Stepper",Stepper.__docgenInfo={description:"",displayName:"Stepper",props:{'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"box-none" | "none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"steps"':{defaultValue:null,description:"",name:"steps",required:!0,type:{name:"StepData[]",raw:null,value:null}},'"activeStepIndex"':{defaultValue:null,description:"",name:"activeStepIndex",required:!1,type:{name:"number",raw:null,value:null}},'"orientation"':{defaultValue:{value:"horizontal"},description:"",name:"orientation",required:!1,type:{name:"StepperOrientation",raw:null,value:null}}}}}catch(e){}try{Stepper.displayName="Stepper",Stepper.__docgenInfo={description:"",displayName:"Stepper",props:{steps:{defaultValue:null,description:"",name:"steps",required:!0,type:{name:"StepData[]"}},activeStepIndex:{defaultValue:null,description:"",name:"activeStepIndex",required:!1,type:{name:"number"}},orientation:{defaultValue:{value:"horizontal"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Stepper/Stepper.tsx#Stepper"]={docgenInfo:Stepper.__docgenInfo,name:"Stepper",path:"../../packages/boi-react-native-components/src/Stepper/Stepper.tsx#Stepper"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Stepper/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Stepper",{enumerable:!0,get:function get(){return _Stepper.Stepper}});var _Stepper=__webpack_require__("../../packages/boi-react-native-components/src/Stepper/Stepper.tsx")},"../../packages/boi-react-native-components/src/Switch/Switch.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_constants=__webpack_require__("../../packages/boi-react-native-components/src/Switch/constants.ts"),color=_app.lightScheme.color,_default=_reactNative.StyleSheet.create({container:{display:"flex",alignItems:"center",justifyContent:"center",height:_constants.SWITCH_HEIGHT,padding:_constants.SWITCH_PADDING,borderRadius:_constants.SWITCH_HEIGHT,backgroundColor:color.background,overflow:"hidden"},background:{position:"absolute",top:0,left:0,height:_constants.SWITCH_HEIGHT,backgroundColor:color.primaryBlue},thumb:{position:"absolute",left:_constants.SWITCH_PADDING,width:_constants.SWIPEABLE_DIMENSIONS,height:_constants.SWIPEABLE_DIMENSIONS,borderRadius:_constants.SWIPEABLE_DIMENSIONS,cursor:"pointer",backgroundColor:color.white,shadowColor:color.darkGrey,shadowOffset:{width:3,height:3},shadowOpacity:.2,shadowRadius:3,elevation:3}});exports.default=_default},"../../packages/boi-react-native-components/src/Switch/Switch.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=Switch,__webpack_require__("../../node_modules/core-js/modules/es.array.concat.js");var _toConsumableArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/toConsumableArray.js")),_react=__webpack_require__("../../node_modules/react/index.js"),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_reactNativeGestureHandler=__webpack_require__("../../node_modules/react-native-gesture-handler/lib/module/index.js"),_reactNativeReanimated=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../node_modules/react-native-reanimated/lib/module/index.web.js")),_constants=__webpack_require__("../../packages/boi-react-native-components/src/Switch/constants.ts"),_SwitchButton=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/SwitchButton/index.ts")),_SwitchText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/SwitchText/index.ts")),_Switch=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/Switch.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var _worklet_7357869075641_init_data={code:"function anonymous() {\n  const {\n    interpolate,\n    translateX,\n    swipeRange\n  } = this._closure;\n  return {\n    opacity: interpolate(translateX.value, [0, swipeRange], [0, 1])\n  };\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","interpolate","translateX","swipeRange","_closure","opacity","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AA0EiC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,WAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EACjC,OAAO;IACLC,OAAO,EAAEJ,WAAW,CAACC,UAAU,CAACI,KAAK,EAAE,CAAC,CAAC,EAAEH,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,CAAC;AACH"}'},_worklet_13398913354629_init_data={code:"function anonymous() {\n  const {\n    interpolate,\n    translateX,\n    swipeRange,\n    SWITCH_HEIGHT\n  } = this._closure;\n  return {\n    opacity: interpolate(translateX.value, [swipeRange - SWITCH_HEIGHT, swipeRange], [0, 1])\n  };\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","interpolate","translateX","swipeRange","SWITCH_HEIGHT","_closure","opacity","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AA+EkC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,WAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAClC,OAAO;IACLC,OAAO,EAAEL,WAAW,CAClBC,UAAU,CAACK,KAAK,EAChB,CAACJ,UAAU,GAAGC,aAAa,EAAED,UAAU,CAAC,EACxC,CAAC,CAAC,EAAE,CAAC,CAAC;EAEV,CAAC;AACH"}'},_worklet_9694327528857_init_data={code:"function anonymous() {\n  const {\n    interpolate,\n    translateX,\n    SWITCH_HEIGHT\n  } = this._closure;\n  return {\n    opacity: interpolate(translateX.value, [0, SWITCH_HEIGHT], [1, 0])\n  };\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","interpolate","translateX","SWITCH_HEIGHT","_closure","opacity","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AAwFoC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,WAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EACpC,OAAO;IACLC,OAAO,EAAEJ,WAAW,CAACC,UAAU,CAACI,KAAK,EAAE,CAAC,CAAC,EAAEH,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,CAAC;AACH"}'},_worklet_8623665122680_init_data={code:"function anonymous() {\n  const {\n    translateX\n  } = this._closure;\n  return {\n    transform: [{\n      translateX: translateX.value\n    }]\n  };\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","translateX","_closure","transform","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AA6F4B,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAC5B,OAAO;IACLC,SAAS,EAAE,CAAC;MAAEF,UAAU,EAAEA,UAAU,CAACG;IAAM,CAAC;EAC9C,CAAC;AACH"}'},_worklet_11509293536248_init_data={code:"function anonymous() {\n  const {\n    previousTranslateX,\n    translateX\n  } = this._closure;\n  previousTranslateX.value = translateX.value;\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","previousTranslateX","translateX","_closure","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AAwGiB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,kBAAA;IAAAC;EAAA,SAAAC,QAAA;EACbF,kBAAkB,CAACG,KAAK,GAAGF,UAAU,CAACE,KAAK;AAC7C"}'},_worklet_8713675028095_init_data={code:"function anonymous(event) {\n  const {\n    translateX,\n    interpolate,\n    previousTranslateX,\n    swipeRange,\n    Extrapolate\n  } = this._closure;\n  translateX.value = interpolate(event.translationX + previousTranslateX.value, [0, swipeRange], [0, swipeRange], Extrapolate.CLAMP);\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","event","translateX","interpolate","previousTranslateX","swipeRange","Extrapolate","_closure","value","translationX","CLAMP"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AA2GmB,SAAAA,SAAUA,CAAAC,KAAA;EAAA;IAAAC,UAAA;IAAAC,WAAA;IAAAC,kBAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EACnBL,UAAU,CAACM,KAAK,GAAGL,WAAW,CAC5BF,KAAK,CAACQ,YAAY,GAAGL,kBAAkB,CAACI,KAAK,EAC7C,CAAC,CAAC,EAAEH,UAAU,CAAC,EACf,CAAC,CAAC,EAAEA,UAAU,CAAC,EACfC,WAAW,CAACI,KAAK,CAClB;AACH"}'},_worklet_14143095237019_init_data={code:"function anonymous() {\n  const {\n    translateX,\n    switchWidth,\n    SWIPEABLE_DIMENSIONS,\n    withSpring,\n    SPRING_OPTIONS,\n    runOnJS,\n    onChange,\n    swipeRange\n  } = this._closure;\n  if (translateX.value < switchWidth / 2 - SWIPEABLE_DIMENSIONS / 2) {\n    translateX.value = withSpring(0, SPRING_OPTIONS, function () {\n      runOnJS(onChange)(false);\n    });\n  } else {\n    translateX.value = withSpring(swipeRange, SPRING_OPTIONS, function () {\n      runOnJS(onChange)(true);\n    });\n  }\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","translateX","switchWidth","SWIPEABLE_DIMENSIONS","withSpring","SPRING_OPTIONS","runOnJS","onChange","swipeRange","_closure","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AAmHoB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,UAAA;IAAAC,WAAA;IAAAC,oBAAA;IAAAC,UAAA;IAAAC,cAAA;IAAAC,OAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EAChB,IAAIR,UAAU,CAACS,KAAK,GAAGR,WAAW,GAAG,CAAC,GAAGC,oBAAoB,GAAG,CAAC,EAAE;IACjEF,UAAU,CAACS,KAAK,GAAGN,UAAU,CAAC,CAAC,EAAEC,cAAc,EAAE,YAAM;MACrDC,OAAO,CAACC,QAAQ,CAAC,CAAC,KAAK,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,MAAM;IACLN,UAAU,CAACS,KAAK,GAAGN,UAAU,CAACI,UAAU,EAAEH,cAAc,EAAE,YAAM;MAC9DC,OAAO,CAACC,QAAQ,CAAC,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ;AACF"}'},_worklet_4709262677560_init_data={code:"function anonymous() {\n  const {\n    runOnJS,\n    onChange\n  } = this._closure;\n  runOnJS(onChange)(false);\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","runOnJS","onChange","_closure"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AAqH6D,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACrDF,OAAO,CAACC,QAAQ,CAAC,CAAC,KAAK,CAAC;AAC1B"}'},_worklet_15558620345523_init_data={code:"function anonymous() {\n  const {\n    runOnJS,\n    onChange\n  } = this._closure;\n  runOnJS(onChange)(true);\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","runOnJS","onChange","_closure"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AAyHsE,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAC9DF,OAAO,CAACC,QAAQ,CAAC,CAAC,IAAI,CAAC;AACzB"}'},_worklet_360679560479_init_data={code:"function anonymous(event, success) {\n  const {\n    translateX,\n    withSpring,\n    checked,\n    swipeRange,\n    SPRING_OPTIONS,\n    runOnJS,\n    onChange\n  } = this._closure;\n  if (success) {\n    translateX.value = withSpring(checked ? 0 : swipeRange, SPRING_OPTIONS, function () {\n      runOnJS(onChange)(!checked);\n    });\n  }\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","event","success","translateX","withSpring","checked","swipeRange","SPRING_OPTIONS","runOnJS","onChange","_closure","value"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AAqIoB,SAACA,SAAOA,CAAAC,KAAA,EAAOC,OAAK;EAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAC,OAAA;IAAAC,UAAA;IAAAC,cAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAC9B,IAAIR,OAAO,EAAE;IACXC,UAAU,CAACQ,KAAK,GAAGP,UAAU,CAC3BC,OAAO,GAAG,CAAC,GAAGC,UAAU,EACxBC,cAAc,EACd,YAAM;MACJC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACJ,OAAO,CAAC;IAC7B,CAAC,CACF;EACH;AACF"}'},_worklet_13480437289570_init_data={code:"function anonymous() {\n  const {\n    runOnJS,\n    onChange,\n    checked\n  } = this._closure;\n  runOnJS(onChange)(!checked);\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx",sourceMap:'{"version":3,"names":["anonymous","runOnJS","onChange","checked","_closure"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Switch/Switch.tsx"],"mappings":"AA0Ic,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EACJH,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC;AAC7B"}'};function Switch(props){var checked=props.checked,onChange=props.onChange,_props$width=props.width,width=void 0===_props$width?_constants.MIN_SWITCH_WIDTH:_props$width,checkedText=props.checkedText,uncheckedText=props.uncheckedText,checkedTextColor=props.checkedTextColor,uncheckedTextColor=props.uncheckedTextColor,checkedBackgroundColor=props.checkedBackgroundColor,uncheckedBackgroundColor=props.uncheckedBackgroundColor,disabled=props.disabled,disablePanGesture=props.disablePanGesture,disableTapGesture=props.disableTapGesture,ariaLabel=props.ariaLabel,_props$testID=props.testID,testID=void 0===_props$testID?"switch":_props$testID,switchWidth=Math.max(width,_constants.MIN_SWITCH_WIDTH),swipeRange=switchWidth-2*_constants.SWITCH_PADDING-_constants.SWIPEABLE_DIMENSIONS,translateX=(0,_reactNativeReanimated.useSharedValue)(getTranslateX(checked,swipeRange)),previousTranslateX=(0,_reactNativeReanimated.useSharedValue)(translateX.value);(0,_react.useEffect)((function(){translateX.value=getTranslateX(checked,swipeRange)}),[checked,width,swipeRange,translateX]);var _e,_f,animatedStyles={background:(0,_reactNativeReanimated.useAnimatedStyle)((_e=[new __webpack_require__.g.Error,-4,-27],_f=function _f(){return{opacity:(0,_reactNativeReanimated.interpolate)(translateX.value,[0,swipeRange],[0,1])}},_f._closure={interpolate:_reactNativeReanimated.interpolate,translateX,swipeRange},_f.__initData=_worklet_7357869075641_init_data,_f.__workletHash=7357869075641,_f.__stackDetails=_e,_f.__version="3.1.0",_f)),checkedText:(0,_reactNativeReanimated.useAnimatedStyle)(function(){var _e=[new __webpack_require__.g.Error,-5,-27],_f=function _f(){return{opacity:(0,_reactNativeReanimated.interpolate)(translateX.value,[swipeRange-_constants.SWITCH_HEIGHT,swipeRange],[0,1])}};return _f._closure={interpolate:_reactNativeReanimated.interpolate,translateX,swipeRange,SWITCH_HEIGHT:_constants.SWITCH_HEIGHT},_f.__initData=_worklet_13398913354629_init_data,_f.__workletHash=0xc2fad788b85,_f.__stackDetails=_e,_f.__version="3.1.0",_f}()),uncheckedText:(0,_reactNativeReanimated.useAnimatedStyle)(function(){var _e=[new __webpack_require__.g.Error,-4,-27],_f=function _f(){return{opacity:(0,_reactNativeReanimated.interpolate)(translateX.value,[0,_constants.SWITCH_HEIGHT],[1,0])}};return _f._closure={interpolate:_reactNativeReanimated.interpolate,translateX,SWITCH_HEIGHT:_constants.SWITCH_HEIGHT},_f.__initData=_worklet_9694327528857_init_data,_f.__workletHash=9694327528857,_f.__stackDetails=_e,_f.__version="3.1.0",_f}()),thumb:(0,_reactNativeReanimated.useAnimatedStyle)(function(){var _e=[new __webpack_require__.g.Error,-2,-27],_f=function _f(){return{transform:[{translateX:translateX.value}]}};return _f._closure={translateX},_f.__initData=_worklet_8623665122680_init_data,_f.__workletHash=8623665122680,_f.__stackDetails=_e,_f.__version="3.1.0",_f}())},panGesture=(0,_react.useMemo)((function(){return _reactNativeGestureHandler.Gesture.Pan().withTestId("switch-pan-gesture").onBegin(function(){var _e=[new __webpack_require__.g.Error,-3,-27],_f=function _f(){previousTranslateX.value=translateX.value};return _f._closure={previousTranslateX,translateX},_f.__initData=_worklet_11509293536248_init_data,_f.__workletHash=0xa77b75a53f8,_f.__stackDetails=_e,_f.__version="3.1.0",_f}()).onChange(function(){var _e=[new __webpack_require__.g.Error,-6,-27],_f=function _f(event){translateX.value=(0,_reactNativeReanimated.interpolate)(event.translationX+previousTranslateX.value,[0,swipeRange],[0,swipeRange],_reactNativeReanimated.Extrapolate.CLAMP)};return _f._closure={translateX,interpolate:_reactNativeReanimated.interpolate,previousTranslateX,swipeRange,Extrapolate:_reactNativeReanimated.Extrapolate},_f.__initData=_worklet_8713675028095_init_data,_f.__workletHash=8713675028095,_f.__stackDetails=_e,_f.__version="3.1.0",_f}()).onFinalize(function(){var _e=[new __webpack_require__.g.Error,-9,-27],_f=function _f(){translateX.value<switchWidth/2-_constants.SWIPEABLE_DIMENSIONS/2?translateX.value=(0,_reactNativeReanimated.withSpring)(0,_constants.SPRING_OPTIONS,function(){var _e=[new __webpack_require__.g.Error,-3,-27],_f=function _f(){(0,_reactNativeReanimated.runOnJS)(onChange)(!1)};return _f._closure={runOnJS:_reactNativeReanimated.runOnJS,onChange},_f.__initData=_worklet_4709262677560_init_data,_f.__workletHash=4709262677560,_f.__stackDetails=_e,_f.__version="3.1.0",_f}()):translateX.value=(0,_reactNativeReanimated.withSpring)(swipeRange,_constants.SPRING_OPTIONS,function(){var _e=[new __webpack_require__.g.Error,-3,-27],_f=function _f(){(0,_reactNativeReanimated.runOnJS)(onChange)(!0)};return _f._closure={runOnJS:_reactNativeReanimated.runOnJS,onChange},_f.__initData=_worklet_15558620345523_init_data,_f.__workletHash=0xe268609f4b3,_f.__stackDetails=_e,_f.__version="3.1.0",_f}())};return _f._closure={translateX,switchWidth,SWIPEABLE_DIMENSIONS:_constants.SWIPEABLE_DIMENSIONS,withSpring:_reactNativeReanimated.withSpring,SPRING_OPTIONS:_constants.SPRING_OPTIONS,runOnJS:_reactNativeReanimated.runOnJS,onChange,swipeRange},_f.__initData=_worklet_14143095237019_init_data,_f.__workletHash=0xcdcf22ae99b,_f.__stackDetails=_e,_f.__version="3.1.0",_f}())}),[onChange,switchWidth,swipeRange,translateX,previousTranslateX]),tapGesture=(0,_react.useMemo)((function(){return _reactNativeGestureHandler.Gesture.Tap().withTestId("switch-tap-gesture").onFinalize(function(){var _e=[new __webpack_require__.g.Error,-8,-27],_f=function _f(event,success){success&&(translateX.value=(0,_reactNativeReanimated.withSpring)(checked?0:swipeRange,_constants.SPRING_OPTIONS,function(){var _e=[new __webpack_require__.g.Error,-4,-27],_f=function _f(){(0,_reactNativeReanimated.runOnJS)(onChange)(!checked)};return _f._closure={runOnJS:_reactNativeReanimated.runOnJS,onChange,checked},_f.__initData=_worklet_13480437289570_init_data,_f.__workletHash=0xc42a8ad1262,_f.__stackDetails=_e,_f.__version="3.1.0",_f}()))};return _f._closure={translateX,withSpring:_reactNativeReanimated.withSpring,checked,swipeRange,SPRING_OPTIONS:_constants.SPRING_OPTIONS,runOnJS:_reactNativeReanimated.runOnJS,onChange},_f.__initData=_worklet_360679560479_init_data,_f.__workletHash=360679560479,_f.__stackDetails=_e,_f.__version="3.1.0",_f}())}),[checked,onChange,swipeRange,translateX]),gestures=[].concat((0,_toConsumableArray2.default)(disabled||disablePanGesture?[]:[panGesture]),(0,_toConsumableArray2.default)(disabled||disableTapGesture?[]:[tapGesture])),composedGestures=_reactNativeGestureHandler.Gesture.Race.apply(_reactNativeGestureHandler.Gesture,(0,_toConsumableArray2.default)(gestures));return(0,_jsxRuntime.jsx)(_reactNativeGestureHandler.GestureHandlerRootView,{children:(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_Switch.default.container,{width:switchWidth,backgroundColor:uncheckedBackgroundColor||_Switch.default.container.backgroundColor}],testID,children:[(0,_jsxRuntime.jsx)(_reactNativeReanimated.default.View,{style:[_Switch.default.background,{width:switchWidth,backgroundColor:checkedBackgroundColor||_Switch.default.background.backgroundColor},animatedStyles.background]}),uncheckedText&&(0,_jsxRuntime.jsx)(_SwitchText.default,{checked:!1,text:uncheckedText,swipeRange,textColor:uncheckedTextColor,animatedStyle:animatedStyles.uncheckedText,testID:testID+"-unchecked-text"}),checkedText&&(0,_jsxRuntime.jsx)(_SwitchText.default,{checked:!0,text:checkedText,swipeRange,textColor:checkedTextColor,animatedStyle:animatedStyles.checkedText,testID:testID+"-checked-text"}),(0,_jsxRuntime.jsx)(_reactNativeGestureHandler.GestureDetector,{gesture:composedGestures,children:(0,_jsxRuntime.jsx)(_reactNativeReanimated.default.View,{style:[_Switch.default.thumb,animatedStyles.thumb],children:(0,_jsxRuntime.jsx)(_SwitchButton.default,{checked,onChange,borderRadius:_constants.SWITCH_HEIGHT,disabled,ariaLabel})})})]})})}Switch.displayName="Switch";var getTranslateX=function getTranslateX(checked,swipeRange){return checked?swipeRange:0};try{Switch.displayName="Switch",Switch.__docgenInfo={description:"",displayName:"Switch",props:{'"checked"':{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(checked: boolean) => void",raw:null,value:null}},'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number",raw:null,value:null}},'"checkedText"':{defaultValue:null,description:"",name:"checkedText",required:!1,type:{name:"string",raw:null,value:null}},'"uncheckedText"':{defaultValue:null,description:"",name:"uncheckedText",required:!1,type:{name:"string",raw:null,value:null}},'"checkedTextColor"':{defaultValue:null,description:"",name:"checkedTextColor",required:!1,type:{name:"string",raw:null,value:null}},'"uncheckedTextColor"':{defaultValue:null,description:"",name:"uncheckedTextColor",required:!1,type:{name:"string",raw:null,value:null}},'"checkedBackgroundColor"':{defaultValue:null,description:"",name:"checkedBackgroundColor",required:!1,type:{name:"string",raw:null,value:null}},'"uncheckedBackgroundColor"':{defaultValue:null,description:"",name:"uncheckedBackgroundColor",required:!1,type:{name:"string",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"disablePanGesture"':{defaultValue:null,description:"",name:"disablePanGesture",required:!1,type:{name:"boolean",raw:null,value:null}},'"disableTapGesture"':{defaultValue:null,description:"",name:"disableTapGesture",required:!1,type:{name:"boolean",raw:null,value:null}},'"ariaLabel"':{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Switch.displayName="Switch",Switch.__docgenInfo={description:"",displayName:"Switch",props:{checked:{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(checked: boolean) => void"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},checkedText:{defaultValue:null,description:"",name:"checkedText",required:!1,type:{name:"string"}},uncheckedText:{defaultValue:null,description:"",name:"uncheckedText",required:!1,type:{name:"string"}},checkedTextColor:{defaultValue:null,description:"",name:"checkedTextColor",required:!1,type:{name:"string"}},uncheckedTextColor:{defaultValue:null,description:"",name:"uncheckedTextColor",required:!1,type:{name:"string"}},checkedBackgroundColor:{defaultValue:null,description:"",name:"checkedBackgroundColor",required:!1,type:{name:"string"}},uncheckedBackgroundColor:{defaultValue:null,description:"",name:"uncheckedBackgroundColor",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},disablePanGesture:{defaultValue:null,description:"",name:"disablePanGesture",required:!1,type:{name:"boolean"}},disableTapGesture:{defaultValue:null,description:"",name:"disableTapGesture",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Switch/Switch.tsx#Switch"]={docgenInfo:Switch.__docgenInfo,name:"Switch",path:"../../packages/boi-react-native-components/src/Switch/Switch.tsx#Switch"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Switch/SwitchButton/SwitchButton.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=SwitchButton,__webpack_require__("../../node_modules/core-js/modules/es.object.keys.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function SwitchButton(props){var checked=props.checked,onChange=props.onChange,borderRadius=props.borderRadius,disabled=props.disabled,ariaLabel=props.ariaLabel;return(0,_jsxRuntime.jsx)(_reactNative.Pressable,{role:"checkbox",accessibilityRole:"checkbox",accessibilityLabel:ariaLabel,accessibilityState:{checked:Boolean(checked),disabled:Boolean(disabled)},style:{width:"100%",height:"100%",borderRadius},onPress:function handlePress(event){(function isKeyboardEvent(event){return 0===Object.keys((null==event?void 0:event.nativeEvent)||{}).length})(event)&&onChange(!checked)},disabled})}SwitchButton.displayName="SwitchButton";try{SwitchButton.displayName="SwitchButton",SwitchButton.__docgenInfo={description:"",displayName:"SwitchButton",props:{'"checked"':{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(checked: boolean) => void",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"ariaLabel"':{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string",raw:null,value:null}},'"borderRadius"':{defaultValue:null,description:"",name:"borderRadius",required:!0,type:{name:"number",raw:null,value:null}}}}}catch(e){}try{SwitchButton.displayName="SwitchButton",SwitchButton.__docgenInfo={description:"",displayName:"SwitchButton",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(checked: boolean) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Switch/SwitchButton/SwitchButton.tsx#SwitchButton"]={docgenInfo:SwitchButton.__docgenInfo,name:"SwitchButton",path:"../../packages/boi-react-native-components/src/Switch/SwitchButton/SwitchButton.tsx#SwitchButton"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Switch/SwitchButton/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _SwitchButton.default}});var _SwitchButton=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/SwitchButton/SwitchButton.tsx"))},"../../packages/boi-react-native-components/src/Switch/SwitchText/SwitchText.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),_constants=__webpack_require__("../../packages/boi-react-native-components/src/Switch/constants.ts"),color=_app.lightScheme.color,_default=_reactNative.StyleSheet.create({text:{position:"absolute",textAlign:"center",fontWeight:"bold",userSelect:"none"},checkedText:{left:0,color:color.white,paddingLeft:2*_constants.SWITCH_PADDING},uncheckedText:{right:0,color:color.darkGrey,paddingRight:2*_constants.SWITCH_PADDING}});exports.default=_default},"../../packages/boi-react-native-components/src/Switch/SwitchText/SwitchText.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=SwitchText;var _reactNativeReanimated=_interopRequireDefault(__webpack_require__("../../node_modules/react-native-reanimated/lib/module/index.web.js")),_SwitchText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/SwitchText/SwitchText.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function SwitchText(props){var checked=props.checked,text=props.text,swipeRange=props.swipeRange,animatedStyle=props.animatedStyle,textColor=props.textColor,testID=props.testID,style=[_SwitchText.default.text,{width:swipeRange},checked?_SwitchText.default.checkedText:_SwitchText.default.uncheckedText,textColor?{color:textColor}:{},animatedStyle];return(0,_jsxRuntime.jsx)(_reactNativeReanimated.default.Text,{numberOfLines:1,style,testID,children:text})}SwitchText.displayName="SwitchText";try{SwitchText.displayName="SwitchText",SwitchText.__docgenInfo={description:"",displayName:"SwitchText",props:{'"checked"':{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"text"':{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},'"swipeRange"':{defaultValue:null,description:"",name:"swipeRange",required:!0,type:{name:"number",raw:null,value:null}},'"animatedStyle"':{defaultValue:null,description:"",name:"animatedStyle",required:!0,type:{name:"{ [key: string]: any; }",raw:null,value:null}},'"textColor"':{defaultValue:null,description:"",name:"textColor",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{SwitchText.displayName="SwitchText",SwitchText.__docgenInfo={description:"",displayName:"SwitchText",props:{testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},swipeRange:{defaultValue:null,description:"",name:"swipeRange",required:!0,type:{name:"number"}},animatedStyle:{defaultValue:null,description:"",name:"animatedStyle",required:!0,type:{name:"{ [key: string]: any; }"}},textColor:{defaultValue:null,description:"",name:"textColor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Switch/SwitchText/SwitchText.tsx#SwitchText"]={docgenInfo:SwitchText.__docgenInfo,name:"SwitchText",path:"../../packages/boi-react-native-components/src/Switch/SwitchText/SwitchText.tsx#SwitchText"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Switch/SwitchText/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _SwitchText.default}});var _SwitchText=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/SwitchText/SwitchText.tsx"))},"../../packages/boi-react-native-components/src/Switch/constants.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.SWITCH_PADDING=exports.SWITCH_HEIGHT=exports.SWIPEABLE_DIMENSIONS=exports.SPRING_OPTIONS=exports.MIN_SWITCH_WIDTH=void 0;exports.SWITCH_HEIGHT=54;exports.SWITCH_PADDING=8;exports.MIN_SWITCH_WIDTH=108;exports.SWIPEABLE_DIMENSIONS=38;exports.SPRING_OPTIONS={overshootClamping:!0}},"../../packages/boi-react-native-components/src/Switch/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Switch",{enumerable:!0,get:function get(){return _Switch.default}});var _Switch=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Switch/Switch.tsx"))},"../../packages/boi-react-native-components/src/Tabs/Tabs.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.tabVariantStyles=exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,TAB_BACKGROUND=color.white,styles=_reactNative.StyleSheet.create({tabBackground:{position:"absolute",display:"none",height:"100%",backgroundColor:TAB_BACKGROUND,borderRadius:4},tabBackgroundVisible:{display:"flex"},tabsContainer:{position:"relative",display:"flex",flexDirection:"row"},tab:{paddingVertical:8,paddingHorizontal:16},tabActive:{backgroundColor:TAB_BACKGROUND,borderRadius:4},tabFocused:{position:"relative",zIndex:1},tabVariantInline:{flexShrink:1},tabVariantCenter:{flex:1,alignItems:"center",justifyContent:"center"},tabText:{fontWeight:"700",textAlign:"center",color:color.darkGrey}}),tabVariantStyles={inline:styles.tabVariantInline,center:styles.tabVariantCenter};exports.tabVariantStyles=tabVariantStyles;var _default=styles;exports.default=_default},"../../packages/boi-react-native-components/src/Tabs/Tabs.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=Tabs,__webpack_require__("../../node_modules/core-js/modules/web.timers.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.map.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_react=__webpack_require__("../../node_modules/react/index.js"),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_reactNativeReanimated=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-reanimated/lib/module/index.web.js")),_Tabs=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/Tabs/Tabs.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var ANIMATION_DURATION=300,_worklet_2118328029473_init_data={code:"function anonymous() {\n  const {\n    activeTabWidth,\n    activeTabTranslateX\n  } = this._closure;\n  return {\n    width: activeTabWidth.value,\n    transform: [{\n      translateX: activeTabTranslateX.value\n    }]\n  };\n}",location:"/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Tabs/Tabs.tsx",sourceMap:'{"version":3,"names":["anonymous","activeTabWidth","activeTabTranslateX","_closure","width","value","transform","translateX"],"sources":["/Users/allens/Code/boi-turbo/packages/boi-react-native-components/src/Tabs/Tabs.tsx"],"mappings":"AA6CoC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,cAAA;IAAAC;EAAA,SAAAC,QAAA;EACpC,OAAO;IACLC,KAAK,EAAEH,cAAc,CAACI,KAAK;IAC3BC,SAAS,EAAE,CAAC;MAAEC,UAAU,EAAEL,mBAAmB,CAACG;IAAM,CAAC;EACvD,CAAC;AACH"}'};function Tabs(props){var _e,_f,activeTabIndex=props.activeTabIndex,tabs=props.tabs,onChange=props.onChange,_props$variant=props.variant,variant=void 0===_props$variant?"inline":_props$variant,_props$testID=props.testID,testID=void 0===_props$testID?"tabs":_props$testID,_useState=(0,_react.useState)(!1),_useState2=(0,_slicedToArray2.default)(_useState,2),animationInProgress=_useState2[0],setAnimationInProgress=_useState2[1],tabsContainerRef=(0,_react.useRef)(null),tabRefs=(0,_react.useRef)([]),activeTabWidth=(0,_reactNativeReanimated.useSharedValue)(0),activeTabTranslateX=(0,_reactNativeReanimated.useSharedValue)(0),animatedStyles={tabBackground:(0,_reactNativeReanimated.useAnimatedStyle)((_e=[new __webpack_require__.g.Error,-3,-27],_f=function _f(){return{width:activeTabWidth.value,transform:[{translateX:activeTabTranslateX.value}]}},_f._closure={activeTabWidth,activeTabTranslateX},_f.__initData=_worklet_2118328029473_init_data,_f.__workletHash=2118328029473,_f.__stackDetails=_e,_f.__version="3.1.0",_f))};return(0,_jsxRuntime.jsxs)(_reactNative.View,{testID,children:[(0,_jsxRuntime.jsx)(_reactNativeReanimated.default.View,{style:[_Tabs.default.tabBackground,animatedStyles.tabBackground,animationInProgress?_Tabs.default.tabBackgroundVisible:void 0]}),(0,_jsxRuntime.jsx)(_reactNative.View,{ref:tabsContainerRef,role:"tablist",accessibilityRole:"tablist",style:_Tabs.default.tabsContainer,testID:testID+"-tab-list",children:tabs.map((function(tab,tabIndex){return(0,_jsxRuntime.jsx)(_reactNative.Pressable,{ref:function ref(element){tabRefs.current[tabIndex]=element},role:"tab",accessibilityRole:"tab",accessibilityLabel:tab.label,accessibilityState:{selected:activeTabIndex===tabIndex},onPress:function onPress(){return function handlePress(tabIndex){if(activeTabIndex!==tabIndex){var prevActiveTab=tabRefs.current[activeTabIndex],nextActiveTab=tabRefs.current[tabIndex],timingOptions={duration:ANIMATION_DURATION};requestAnimationFrame((function(){setAnimationInProgress(!0)})),prevActiveTab&&tabsContainerRef.current&&prevActiveTab.measureLayout(tabsContainerRef.current,(function(left,_top,width,_height){activeTabWidth.value=width,activeTabTranslateX.value=left})),nextActiveTab&&tabsContainerRef.current&&nextActiveTab.measureLayout(tabsContainerRef.current,(function(left,_top,width,_height){activeTabWidth.value=(0,_reactNativeReanimated.withTiming)(width,timingOptions),activeTabTranslateX.value=(0,_reactNativeReanimated.withTiming)(left,timingOptions)})),setTimeout((function(){setAnimationInProgress(!1),onChange(tabIndex)}),timingOptions.duration)}}(tabIndex)},style:function style(_ref){var focused=_ref.focused;return[_Tabs.default.tab,_Tabs.tabVariantStyles[variant],focused?_Tabs.default.tabFocused:void 0,animationInProgress||activeTabIndex!==tabIndex?void 0:_Tabs.default.tabActive]},testID:tab.testID||testID+"-tab",children:(0,_jsxRuntime.jsx)(_reactNative.Text,{numberOfLines:1,style:_Tabs.default.tabText,children:tab.label})},tabIndex)}))})]})}Tabs.displayName="Tabs";try{Tabs.displayName="Tabs",Tabs.__docgenInfo={description:"",displayName:"Tabs",props:{'"tabs"':{defaultValue:null,description:"",name:"tabs",required:!0,type:{name:"Tab[]",raw:null,value:null}},'"activeTabIndex"':{defaultValue:null,description:"",name:"activeTabIndex",required:!0,type:{name:"number",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(tabIndex: number) => void",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"TabsVariant",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Tabs.displayName="Tabs",Tabs.__docgenInfo={description:"",displayName:"Tabs",props:{tabs:{defaultValue:null,description:"",name:"tabs",required:!0,type:{name:"Tab[]"}},activeTabIndex:{defaultValue:null,description:"",name:"activeTabIndex",required:!0,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(tabIndex: number) => void"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"inline"'}]}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Tabs/Tabs.tsx#Tabs"]={docgenInfo:Tabs.__docgenInfo,name:"Tabs",path:"../../packages/boi-react-native-components/src/Tabs/Tabs.tsx#Tabs"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Tabs/index.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Tabs",{enumerable:!0,get:function get(){return _Tabs.default}});var _Tabs=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Tabs/Tabs.tsx"));try{Tabs.displayName="Tabs",Tabs.__docgenInfo={description:"",displayName:"Tabs",props:{'"tabs"':{defaultValue:null,description:"",name:"tabs",required:!0,type:{name:"Tab[]",raw:null,value:null}},'"activeTabIndex"':{defaultValue:null,description:"",name:"activeTabIndex",required:!0,type:{name:"number",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(tabIndex: number) => void",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"TabsVariant",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Tabs.displayName="Tabs",Tabs.__docgenInfo={description:"",displayName:"Tabs",props:{tabs:{defaultValue:null,description:"",name:"tabs",required:!0,type:{name:"Tab[]"}},activeTabIndex:{defaultValue:null,description:"",name:"activeTabIndex",required:!0,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(tabIndex: number) => void"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"inline"'}]}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Tabs/index.tsx#Tabs"]={docgenInfo:Tabs.__docgenInfo,name:"Tabs",path:"../../packages/boi-react-native-components/src/Tabs/index.tsx#Tabs"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/TextField/TextField.dark.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.input=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),lightStyles=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("../../packages/boi-react-native-components/src/TextField/TextField.styles.tsx"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var inputColors=_app.darkScheme.inputColors,inputBorderDisabled=_app.darkScheme.inputBorderDisabled,inputColorsDisabled=_app.darkScheme.inputColorsDisabled,input=_reactNative.StyleSheet.create({default:Object.assign({},lightStyles.input.default,{color:inputColors.color,backgroundColor:inputColors.backgroundColor}),isDisabled:{opacity:inputColorsDisabled.opacity,color:inputColorsDisabled.color,backgroundColor:inputColorsDisabled.backgroundColor,borderColor:inputBorderDisabled.borderColor}});exports.input=input},"../../packages/boi-react-native-components/src/TextField/TextField.styles.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.input=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),inputDimensions=_app.lightScheme.inputDimensions,inputText=_app.lightScheme.inputText,inputColors=_app.lightScheme.inputColors,inputBorderDisabled=_app.lightScheme.inputBorderDisabled,inputColorsDisabled=_app.lightScheme.inputColorsDisabled,input=_reactNative.StyleSheet.create({default:{height:inputDimensions.height,width:inputDimensions.width,paddingLeft:inputDimensions.paddingLeft,paddingRight:inputDimensions.paddingRight,fontFamily:inputText.fontFamily,fontSize:inputText.fontSize,letterSpacing:inputText.letterSpacing,textAlign:inputText.textAlign,color:inputColors.color,backgroundColor:inputColors.backgroundColor,flexGrow:1,flexShrink:1},isDisabled:{opacity:inputColorsDisabled.opacity,color:inputColorsDisabled.color,backgroundColor:inputColorsDisabled.backgroundColor,borderColor:inputBorderDisabled.borderColor}});exports.input=input},"../../packages/boi-react-native-components/src/TextField/TextField.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextField=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _slicedToArray2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js")),_objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_react=_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_OuterField=__webpack_require__("../../packages/boi-react-native-components/src/OuterField/OuterField.tsx"),_app=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs"),lightStyles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/TextField/TextField.styles.tsx")),darkStyles=_interopRequireWildcard(__webpack_require__("../../packages/boi-react-native-components/src/TextField/TextField.dark.styles.tsx")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["error","startAdornament","endAdornament","disabled"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var TextField=function TextField(_ref){var error=_ref.error,startAdornament=_ref.startAdornament,endAdornament=_ref.endAdornament,disabled=_ref.disabled,inputProps=(0,_objectWithoutProperties2.default)(_ref,_excluded),colorScheme=(0,_reactNative.useColorScheme)(),styles="light"===colorScheme?lightStyles:darkStyles,inputRef=(0,_react.useRef)(null),_useState=(0,_react.useState)(!1),_useState2=(0,_slicedToArray2.default)(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1],inputColorsPlaceholder="dark"===colorScheme?_app.darkScheme.inputColorsPlaceholder:_app.lightScheme.inputColorsPlaceholder,inputStyles=[disabled?_reactNative.StyleSheet.compose(styles.input.default,styles.input.isDisabled):styles.input.default,"web"===_reactNative.Platform.OS?{outline:"none"}:void 0];return(0,_jsxRuntime.jsx)(_OuterField.OuterField,{isActive,startAdornament,endAdornament,disabled,error,onChangeText:inputProps.onChangeText,inputRef,children:(0,_jsxRuntime.jsx)(_reactNative.TextInput,Object.assign({},inputProps,{ref:inputRef,style:inputStyles,editable:!disabled,placeholderTextColor:inputColorsPlaceholder.color,clearButtonMode:"never",onBlur:function onBlur(evt){setIsActive(!1),inputProps.onBlur&&inputProps.onBlur(evt)},onFocus:function onFocus(evt){setIsActive(!0),inputProps.onFocus&&inputProps.onFocus(evt)}}))})};exports.TextField=TextField,TextField.displayName="TextField";try{TextField.displayName="TextField",TextField.__docgenInfo={description:"",displayName:"TextField",props:{'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"isActive"':{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean",raw:null,value:null}},'"error"':{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string",raw:null,value:null}},'"startAdornament"':{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"endAdornament"':{defaultValue:null,description:"",name:"endAdornament",required:!1,type:{name:"Element",raw:null,value:null}},'"inputRef"':{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>",raw:null,value:null}},'"noClearButton"':{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean",raw:null,value:null}},'"onChangeText"':{defaultValue:null,description:"Callback that is called when the text input's text changes.\nChanged text is passed as an argument to the callback handler.",name:"onChangeText",required:!1,type:{name:"((value: string) => void) & ((text: string) => void)",raw:null,value:null}},'"allowFontScaling"':{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean",raw:null,value:null}},'"autoCapitalize"':{defaultValue:null,description:"Can tell TextInput to automatically capitalize certain characters.\n     characters: all characters,\n     words: first letter of each word\n     sentences: first letter of each sentence (default)\n     none: don't auto capitalize anything\n\nhttps://reactnative.dev/docs/textinput#autocapitalize",name:"autoCapitalize",required:!1,type:{name:'"none" | "sentences" | "words" | "characters"',raw:null,value:null}},'"autoCorrect"':{defaultValue:null,description:"If false, disables auto-correct.\nThe default value is true.",name:"autoCorrect",required:!1,type:{name:"boolean",raw:null,value:null}},'"autoFocus"':{defaultValue:null,description:"If true, focuses the input on componentDidMount.\nThe default value is false.",name:"autoFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"blurOnSubmit"':{defaultValue:null,description:"If true, the text field will blur when submitted.\nThe default value is true.",name:"blurOnSubmit",required:!1,type:{name:"boolean",raw:null,value:null}},'"caretHidden"':{defaultValue:null,description:"If true, caret is hidden. The default value is false.",name:"caretHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"contextMenuHidden"':{defaultValue:null,description:"If true, context menu is hidden. The default value is false.",name:"contextMenuHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"defaultValue"':{defaultValue:null,description:"Provides an initial value that will change when the user starts typing.\nUseful for simple use-cases where you don't want to deal with listening to events\nand updating the value prop to keep the controlled state in sync.",name:"defaultValue",required:!1,type:{name:"string",raw:null,value:null}},'"keyboardType"':{defaultValue:null,description:"enum(\"default\", 'numeric', 'email-address', \"ascii-capable\", 'numbers-and-punctuation', 'url', 'number-pad', 'phone-pad', 'name-phone-pad',\n'decimal-pad', 'twitter', 'web-search', 'visible-password')\nDetermines which keyboard to open, e.g.numeric.\nThe following values work across platforms: - default - numeric - email-address - phone-pad\nThe following values work on iOS: - ascii-capable - numbers-and-punctuation - url - number-pad - name-phone-pad - decimal-pad - twitter - web-search\nThe following values work on Android: - visible-password",name:"keyboardType",required:!1,type:{name:"KeyboardTypeOptions",raw:null,value:null}},'"inputMode"':{defaultValue:null,description:"Works like the inputmode attribute in HTML, it determines which keyboard to open, e.g. numeric and has precedence over keyboardType.",name:"inputMode",required:!1,type:{name:"InputModeOptions",raw:null,value:null}},'"maxLength"':{defaultValue:null,description:"Limits the maximum number of characters that can be entered.\nUse this instead of implementing the logic in JS to avoid flicker.",name:"maxLength",required:!1,type:{name:"number",raw:null,value:null}},'"multiline"':{defaultValue:null,description:"If true, the text input can be multiple lines. The default value is false.",name:"multiline",required:!1,type:{name:"boolean",raw:null,value:null}},'"onBlur"':{defaultValue:null,description:"Callback that is called when the text input is blurred",name:"onBlur",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputFocusEventData>) => void",raw:null,value:null}},'"onContentSizeChange"':{defaultValue:null,description:"Callback that is called when the text input's content size changes.\nThis will be called with\n`{ nativeEvent: { contentSize: { width, height } } }`.\n\nOnly called for multiline text inputs.",name:"onContentSizeChange",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) => void",raw:null,value:null}},'"onEndEditing"':{defaultValue:null,description:"Callback that is called when text input ends.",name:"onEndEditing",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputEndEditingEventData>) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"Callback that is called when a touch is engaged.",name:"onPressIn",required:!1,type:{name:"(e: NativeSyntheticEvent<NativeTouchEvent>) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"Callback that is called when a touch is released.",name:"onPressOut",required:!1,type:{name:"(e: NativeSyntheticEvent<NativeTouchEvent>) => void",raw:null,value:null}},'"onFocus"':{defaultValue:null,description:"Callback that is called when the text input is focused",name:"onFocus",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputFocusEventData>) => void",raw:null,value:null}},'"onSelectionChange"':{defaultValue:null,description:"Callback that is called when the text input selection is changed.",name:"onSelectionChange",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => void",raw:null,value:null}},'"onSubmitEditing"':{defaultValue:null,description:"Callback that is called when the text input's submit button is pressed.",name:"onSubmitEditing",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputSubmitEditingEventData>) => void",raw:null,value:null}},'"onTextInput"':{defaultValue:null,description:"Callback that is called on new text input with the argument\n `{ nativeEvent: { text, previousText, range: { start, end } } }`.\n\nThis prop requires multiline={true} to be set.",name:"onTextInput",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputTextInputEventData>) => void",raw:null,value:null}},'"onScroll"':{defaultValue:null,description:"Invoked on content scroll with\n `{ nativeEvent: { contentOffset: { x, y } } }`.\n\nMay also contain other properties from ScrollEvent but on Android contentSize is not provided for performance reasons.",name:"onScroll",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputScrollEventData>) => void",raw:null,value:null}},'"onKeyPress"':{defaultValue:null,description:"Callback that is called when a key is pressed.\nThis will be called with\n `{ nativeEvent: { key: keyValue } }`\nwhere keyValue is 'Enter' or 'Backspace' for respective keys and the typed-in character otherwise including ' ' for space.\n\nFires before onChange callbacks.\nNote: on Android only the inputs from soft keyboard are handled, not the hardware keyboard inputs.",name:"onKeyPress",required:!1,type:{name:"(e: NativeSyntheticEvent<TextInputKeyPressEventData>) => void",raw:null,value:null}},'"placeholder"':{defaultValue:null,description:"The string that will be rendered before text input has been entered",name:"placeholder",required:!1,type:{name:"string",raw:null,value:null}},'"placeholderTextColor"':{defaultValue:null,description:"The text color of the placeholder string",name:"placeholderTextColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"returnKeyType"':{defaultValue:null,description:"enum('default', 'go', 'google', 'join', 'next', 'route', 'search', 'send', 'yahoo', 'done', 'emergency-call')\nDetermines how the return key should look.",name:"returnKeyType",required:!1,type:{name:"ReturnKeyTypeOptions",raw:null,value:null}},'"secureTextEntry"':{defaultValue:null,description:"If true, the text input obscures the text entered so that sensitive text like passwords stay secure.\nThe default value is false.",name:"secureTextEntry",required:!1,type:{name:"boolean",raw:null,value:null}},'"selectTextOnFocus"':{defaultValue:null,description:"If true, all text will automatically be selected on focus",name:"selectTextOnFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"selection"':{defaultValue:null,description:"The start and end of the text input's selection. Set start and end to\nthe same value to position the cursor.",name:"selection",required:!1,type:{name:"{ start: number; end?: number; }",raw:null,value:null}},'"selectionColor"':{defaultValue:null,description:"The highlight (and cursor on ios) color of the text input",name:"selectionColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"textAlign"':{defaultValue:null,description:"Align the input text to the left, center, or right sides of the input field.",name:"textAlign",required:!1,type:{name:'"left" | "center" | "right"',raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"inputAccessoryViewID"':{defaultValue:null,description:"Used to connect to an InputAccessoryView. Not part of react-natives documentation, but present in examples and\ncode.\nSee https://reactnative.dev/docs/inputaccessoryview for more information.",name:"inputAccessoryViewID",required:!1,type:{name:"string",raw:null,value:null}},'"value"':{defaultValue:null,description:"The value to show for the text input. TextInput is a controlled component,\nwhich means the native value will be forced to match this value prop if provided.\nFor most uses this works great, but in some cases this may cause flickering - one common cause is preventing edits by keeping value the same.\nIn addition to simply setting the same value, either set editable={false},\nor set/update maxLength to prevent unwanted edits without flicker.",name:"value",required:!1,type:{name:"string",raw:null,value:null}},'"maxFontSizeMultiplier"':{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n  pointer-events: none;\n}\n.box-none * {\n  pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n  pointer-events: all;\n}\n.box-only * {\n  pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"clearTextOnFocus"':{defaultValue:null,description:"If true, clears the text field automatically when editing begins",name:"clearTextOnFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"dataDetectorTypes"':{defaultValue:null,description:"Determines the types of data converted to clickable URLs in the text input.\nOnly valid if `multiline={true}` and `editable={false}`.\nBy default no data types are detected.\n\nYou can provide one type or an array of many types.\n\nPossible values for `dataDetectorTypes` are:\n\n- `'phoneNumber'`\n- `'link'`\n- `'address'`\n- `'calendarEvent'`\n- `'none'`\n- `'all'`",name:"dataDetectorTypes",required:!1,type:{name:"DataDetectorTypes | DataDetectorTypes[]",raw:null,value:null}},'"enablesReturnKeyAutomatically"':{defaultValue:null,description:"If true, the keyboard disables the return key when there is no text and automatically enables it when there is text.\nThe default value is false.",name:"enablesReturnKeyAutomatically",required:!1,type:{name:"boolean",raw:null,value:null}},'"keyboardAppearance"':{defaultValue:null,description:"Determines the color of the keyboard.",name:"keyboardAppearance",required:!1,type:{name:'"default" | "light" | "dark"',raw:null,value:null}},'"passwordRules"':{defaultValue:null,description:'Provide rules for your password.\nFor example, say you want to require a password with at least eight characters consisting of a mix of uppercase and lowercase letters, at least one number, and at most two consecutive characters.\n"required: upper; required: lower; required: digit; max-consecutive: 2; minlength: 8;"',name:"passwordRules",required:!1,type:{name:"string",raw:null,value:null}},'"rejectResponderTermination"':{defaultValue:null,description:"If `true`, allows TextInput to pass touch events to the parent component.\nThis allows components to be swipeable from the TextInput on iOS,\nas is the case on Android by default.\nIf `false`, TextInput always asks to handle the input (except when disabled).",name:"rejectResponderTermination",required:!1,type:{name:"boolean",raw:null,value:null}},'"selectionState"':{defaultValue:null,description:"See DocumentSelectionState.js, some state that is responsible for maintaining selection information for a document",name:"selectionState",required:!1,type:{name:"DocumentSelectionState",raw:null,value:null}},'"spellCheck"':{defaultValue:null,description:"If false, disables spell-check style (i.e. red underlines). The default value is inherited from autoCorrect",name:"spellCheck",required:!1,type:{name:"boolean",raw:null,value:null}},'"textContentType"':{defaultValue:null,description:"Give the keyboard and the system information about the expected\nsemantic meaning for the content that users enter.\n\nFor iOS 11+ you can set `textContentType` to `username` or `password` to\nenable autofill of login details from the device keychain.\n\nFor iOS 12+ `newPassword` can be used to indicate a new password input the\nuser may want to save in the keychain, and `oneTimeCode` can be used to indicate\nthat a field can be autofilled by a code arriving in an SMS.\n\nTo disable autofill, set textContentType to `none`.\n\nPossible values for `textContentType` are:\n\n - `'none'`\n - `'URL'`\n - `'addressCity'`\n - `'addressCityAndState'`\n - `'addressState'`\n - `'countryName'`\n - `'creditCardNumber'`\n - `'emailAddress'`\n - `'familyName'`\n - `'fullStreetAddress'`\n - `'givenName'`\n - `'jobTitle'`\n - `'location'`\n - `'middleName'`\n - `'name'`\n - `'namePrefix'`\n - `'nameSuffix'`\n - `'nickname'`\n - `'organizationName'`\n - `'postalCode'`\n - `'streetAddressLine1'`\n - `'streetAddressLine2'`\n - `'sublocality'`\n - `'telephoneNumber'`\n - `'username'`\n - `'password'`\n - `'newPassword'`\n - `'oneTimeCode'`",name:"textContentType",required:!1,type:{name:'"none" | "URL" | "addressCity" | "addressCityAndState" | "addressState" | "countryName" | "creditCardNumber" | "emailAddress" | "familyName" | "fullStreetAddress" | "givenName" | ... 16 more ... | "oneTimeCode"',raw:null,value:null}},'"scrollEnabled"':{defaultValue:null,description:"If false, scrolling of the text view will be disabled. The default value is true. Only works with multiline={true}",name:"scrollEnabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"autoComplete"':{defaultValue:null,description:"Specifies autocomplete hints for the system, so it can provide autofill. On Android, the system will always attempt to offer autofill by using heuristics to identify the type of content.\nTo disable autocomplete, set `autoComplete` to `off`.\n\n*Android Only*\n\nPossible values for `autoComplete` are:\n\n- `birthdate-day`\n- `birthdate-full`\n- `birthdate-month`\n- `birthdate-year`\n- `cc-csc`\n- `cc-exp`\n- `cc-exp-day`\n- `cc-exp-month`\n- `cc-exp-year`\n- `cc-number`\n- `email`\n- `gender`\n- `name`\n- `name-family`\n- `name-given`\n- `name-middle`\n- `name-middle-initial`\n- `name-prefix`\n- `name-suffix`\n- `password`\n- `password-new`\n- `postal-address`\n- `postal-address-country`\n- `postal-address-extended`\n- `postal-address-extended-postal-code`\n- `postal-address-locality`\n- `postal-address-region`\n- `postal-code`\n- `street-address`\n- `sms-otp`\n- `tel`\n- `tel-country-code`\n- `tel-national`\n- `tel-device`\n- `username`\n- `username-new`\n- `off`",name:"autoComplete",required:!1,type:{name:'"tel" | "email" | "off" | "name" | "username" | "password" | "birthdate-day" | "birthdate-full" | "birthdate-month" | "birthdate-year" | "cc-csc" | "cc-exp" | "cc-exp-day" | ... 23 more ... | "username-new"',raw:null,value:null}},'"cursorColor"':{defaultValue:null,description:'When provided it will set the color of the cursor (or "caret") in the component.\nUnlike the behavior of `selectionColor` the cursor color will be set independently\nfrom the color of the text selection box.\n@platform [object Object]',name:"cursorColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"importantForAutofill"':{defaultValue:null,description:"Determines whether the individual fields in your app should be included in a\nview structure for autofill purposes on Android API Level 26+. Defaults to auto.\nTo disable auto complete, use `off`.\n\n*Android Only*\n\nThe following values work on Android only:\n\n- `auto` - let Android decide\n- `no` - not important for autofill\n- `noExcludeDescendants` - this view and its children aren't important for autofill\n- `yes` - is important for autofill\n- `yesExcludeDescendants` - this view is important for autofill but its children aren't",name:"importantForAutofill",required:!1,type:{name:'"auto" | "yes" | "no" | "noExcludeDescendants" | "yesExcludeDescendants"',raw:null,value:null}},'"disableFullscreenUI"':{defaultValue:null,description:"When false, if there is a small amount of space available around a text input (e.g. landscape orientation on a phone),\n  the OS may choose to have the user edit the text inside of a full screen text input mode.\nWhen true, this feature is disabled and users will always edit the text directly inside of the text input.\nDefaults to false.",name:"disableFullscreenUI",required:!1,type:{name:"boolean",raw:null,value:null}},'"inlineImageLeft"':{defaultValue:null,description:"If defined, the provided image resource will be rendered on the left.",name:"inlineImageLeft",required:!1,type:{name:"string",raw:null,value:null}},'"inlineImagePadding"':{defaultValue:null,description:"Padding between the inline image, if any, and the text input itself.",name:"inlineImagePadding",required:!1,type:{name:"number",raw:null,value:null}},'"numberOfLines"':{defaultValue:null,description:"Sets the number of lines for a TextInput.\nUse it with multiline set to true to be able to fill the lines.",name:"numberOfLines",required:!1,type:{name:"number",raw:null,value:null}},'"returnKeyLabel"':{defaultValue:null,description:"Sets the return key to the label. Use it instead of `returnKeyType`.\n@platform [object Object]",name:"returnKeyLabel",required:!1,type:{name:"string",raw:null,value:null}},'"textBreakStrategy"':{defaultValue:null,description:"Set text break strategy on Android API Level 23+, possible values are simple, highQuality, balanced\nThe default value is simple.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced"',raw:null,value:null}},'"underlineColorAndroid"':{defaultValue:null,description:"The color of the textInput underline.",name:"underlineColorAndroid",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"textAlignVertical"':{defaultValue:null,description:"Vertically align text when `multiline` is set to true",name:"textAlignVertical",required:!1,type:{name:'"center" | "auto" | "top" | "bottom"',raw:null,value:null}},'"showSoftInputOnFocus"':{defaultValue:null,description:"When false, it will prevent the soft keyboard from showing when the field is focused. The default value is true",name:"showSoftInputOnFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"verticalAlign"':{defaultValue:null,description:"Vertically align text when `multiline` is set to true",name:"verticalAlign",required:!1,type:{name:'"auto" | "top" | "bottom" | "middle"',raw:null,value:null}}}}}catch(e){}try{TextField.displayName="TextField",TextField.__docgenInfo={description:"",displayName:"TextField",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},startAdornament:{defaultValue:null,description:"",name:"startAdornament",required:!1,type:{name:"Element"}},endAdornament:{defaultValue:null,description:"",name:"endAdornament",required:!1,type:{name:"Element"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<TextInput>"}},noClearButton:{defaultValue:null,description:"",name:"noClearButton",required:!1,type:{name:"boolean"}},onChangeText:{defaultValue:null,description:"Callback that is called when the text input's text changes.\nChanged text is passed as an argument to the callback handler.",name:"onChangeText",required:!1,type:{name:"((value: string) => void) & ((text: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/TextField/TextField.tsx#TextField"]={docgenInfo:TextField.__docgenInfo,name:"TextField",path:"../../packages/boi-react-native-components/src/TextField/TextField.tsx#TextField"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/TextField/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"TextField",{enumerable:!0,get:function get(){return _TextField.TextField}});var _TextField=__webpack_require__("../../packages/boi-react-native-components/src/TextField/TextField.tsx")},"../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.radioStyles=exports.commonStyles=exports.checkboxStyles=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),color=__webpack_require__("../../packages/boi-design-tokens/build/app/index.mjs").lightScheme.color,commonStyles=_reactNative.StyleSheet.create({toggleableBase:{display:"flex",flexDirection:"row",alignItems:"center",gap:8},toggleableBaseFocused:Object.assign({},_reactNative.Platform.select({web:{outlineStyle:"none"}})),iconWrapper:{width:24,height:24,margin:6,borderWidth:2,borderColor:color.darkGrey,alignItems:"center",justifyContent:"center"},iconWrapperFocused:Object.assign({},_reactNative.Platform.select({web:{outlineWidth:4,outlineStyle:"solid",outlineColor:color.lightBlue}})),iconWrapperChecked:{borderColor:color.primaryBlue},iconWrapperDisabled:{borderColor:color.fieldOutline},iconChecked:{width:14,height:14},label:{},labelDisabled:{color:color.fieldOutline}});exports.commonStyles=commonStyles;var checkboxStyles=_reactNative.StyleSheet.create({iconWrapper:{borderRadius:4},iconChecked:{color:color.primaryBlue},iconDisabled:{color:color.fieldOutline}});exports.checkboxStyles=checkboxStyles;var radioStyles=_reactNative.StyleSheet.create({iconWrapper:{borderRadius:12},iconChecked:{borderRadius:7,backgroundColor:color.primaryBlue},iconDisabled:{backgroundColor:color.fieldOutline}});exports.radioStyles=radioStyles},"../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.function.name.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.date.to-string.js");var _react=__webpack_require__("../../node_modules/react/index.js"),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_focus=__webpack_require__("../../node_modules/@react-native-aria/focus/lib/module/index.web.js"),_visuallyHidden=__webpack_require__("../../node_modules/@react-aria/visually-hidden/dist/main.js"),_reactNativeIcons=__webpack_require__("../../packages/boi-react-native-icons/dist/index.js"),_ToggleableBase=__webpack_require__("../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.styles.ts"),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function ToggleableBase(props){var type=props.type,value=props.value,onChange=props.onChange,name=props.name,label=props.label,checked=props.checked,disabled=props.disabled,ariaLabel=props.ariaLabel,testID=props.testID,_useFocusRing=(0,_focus.useFocusRing)(),isFocusVisible=_useFocusRing.isFocusVisible,focusProps=_useFocusRing.focusProps,handleChange=function handleChange(){("checkbox"===type||"radio"===type&&!checked)&&onChange({value,checked:!checked})},content=(0,_react.useMemo)((function(){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_ToggleableBase.commonStyles.toggleableBase,isFocusVisible&&_ToggleableBase.commonStyles.toggleableBaseFocused],children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_ToggleableBase.commonStyles.iconWrapper,"checkbox"===type&&_ToggleableBase.checkboxStyles.iconWrapper,"radio"===type&&_ToggleableBase.radioStyles.iconWrapper,isFocusVisible&&_ToggleableBase.commonStyles.iconWrapperFocused,checked&&_ToggleableBase.commonStyles.iconWrapperChecked,disabled&&_ToggleableBase.commonStyles.iconWrapperDisabled],children:["checkbox"===type&&checked&&(0,_jsxRuntime.jsx)(_reactNativeIcons.CheckIcon,{style:[_ToggleableBase.commonStyles.iconChecked,_ToggleableBase.checkboxStyles.iconChecked,disabled&&_ToggleableBase.checkboxStyles.iconDisabled]}),"radio"===type&&checked&&(0,_jsxRuntime.jsx)(_reactNative.View,{style:[_ToggleableBase.commonStyles.iconChecked,_ToggleableBase.radioStyles.iconChecked,disabled&&_ToggleableBase.radioStyles.iconDisabled]})]}),label&&(0,_jsxRuntime.jsx)(_reactNative.Text,{style:[_ToggleableBase.commonStyles.label,disabled&&_ToggleableBase.commonStyles.labelDisabled],children:label})]})}),[type,label,checked,disabled,isFocusVisible]);return"web"===_reactNative.Platform.OS?(0,_jsxRuntime.jsxs)("label",{children:[(0,_jsxRuntime.jsx)(_visuallyHidden.VisuallyHidden,{children:(0,_jsxRuntime.jsx)("input",Object.assign({},focusProps,{type,name,value,checked,disabled,onChange:handleChange,"aria-label":ariaLabel,"data-testid":testID}))}),content]}):(0,_jsxRuntime.jsx)(_reactNative.Pressable,Object.assign({},focusProps,{role:type,accessibilityRole:type,disabled,onPress:handleChange,accessibilityLabel:ariaLabel,accessibilityValue:{text:value.toString()},accessibilityState:{checked:Boolean(checked),disabled:Boolean(disabled)},testID,children:content}))}ToggleableBase.displayName="ToggleableBase";var _default=ToggleableBase;exports.default=_default;try{ToggleableBase.displayName="ToggleableBase",ToggleableBase.__docgenInfo={description:"",displayName:"ToggleableBase",props:{'"type"':{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"checkbox" | "radio"',raw:null,value:null}},'"value"':{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number",raw:null,value:null}},'"onChange"':{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void",raw:null,value:null}},'"name"':{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string",raw:null,value:null}},'"label"':{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string",raw:null,value:null}},'"checked"':{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"ariaLabel"':{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ToggleableBase.displayName="ToggleableBase",ToggleableBase.__docgenInfo={description:"",displayName:"ToggleableBase",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"checkbox"'},{value:'"radio"'}]}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"({ value, checked, }: { value: string | number; checked: boolean; }) => void"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.tsx#ToggleableBase"]={docgenInfo:ToggleableBase.__docgenInfo,name:"ToggleableBase",path:"../../packages/boi-react-native-components/src/ToggleableBase/ToggleableBase.tsx#ToggleableBase"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-components/src/Typography/Typography.styles.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_designTokens=__webpack_require__("../../packages/boi-design-tokens/build/app/light/design-tokens.mjs"),_default=_reactNative.StyleSheet.create({h1:{color:_designTokens.heading1.color,fontSize:_designTokens.heading1.fontSize,lineHeight:_designTokens.heading1.lineHeight,fontFamily:_designTokens.heading1.fontFamily},h2:{color:_designTokens.heading2.color,fontSize:_designTokens.heading2.fontSize,lineHeight:_designTokens.heading2.lineHeight,fontFamily:_designTokens.heading2.fontFamily},h3:{color:_designTokens.heading3.color,fontSize:_designTokens.heading3.fontSize,lineHeight:_designTokens.heading3.lineHeight,fontFamily:_designTokens.heading3.fontFamily},h4:{color:_designTokens.heading4.color,fontSize:_designTokens.heading4.fontSize,lineHeight:_designTokens.heading4.lineHeight,fontFamily:_designTokens.heading4.fontFamily},bodyLarge:{color:_designTokens.bodyLarge.color,fontSize:_designTokens.bodyLarge.fontSize,lineHeight:_designTokens.bodyLarge.lineHeight,fontFamily:_designTokens.bodyLarge.fontFamily},body:{color:_designTokens.body.color,fontSize:_designTokens.body.fontSize,lineHeight:_designTokens.body.lineHeight,fontFamily:_designTokens.body.fontFamily},bodySmall:{color:_designTokens.bodySmall.color,fontSize:_designTokens.bodySmall.fontSize,lineHeight:_designTokens.bodySmall.lineHeight,fontFamily:_designTokens.bodySmall.fontFamily},bodyXSmall:{color:_designTokens.bodyXSmall.color,fontSize:_designTokens.bodyXSmall.fontSize,lineHeight:_designTokens.bodyXSmall.lineHeight,fontFamily:_designTokens.bodyXSmall.fontFamily}});exports.default=_default},"../../packages/boi-react-native-components/src/Typography/Typography.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactNative=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),_Typography=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-components/src/Typography/Typography.styles.ts")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_excluded=["variant","component","color"],Typography=function Typography(props){var _props$variant=props.variant,variant=void 0===_props$variant?"body":_props$variant,component=props.component,color=props.color,textprops=(0,_objectWithoutProperties2.default)(props,_excluded),headingLevel=component?headingLevels[component]:headingLevels[variant],accessibilityProps=headingLevel&&{role:"heading",accessibilityRole:"header","aria-level":headingLevel};return(0,_jsxRuntime.jsx)(_reactNative.Text,Object.assign({},textprops,accessibilityProps,{style:[_Typography.default[variant],{color}]}))};Typography.displayName="Typography";var headingLevels={h1:"1",h2:"2",h3:"3",h4:"4"},_default=Typography;exports.default=_default;try{Typography.displayName="Typography",Typography.__docgenInfo={description:"",displayName:"Typography",props:{'"allowFontScaling"':{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean",raw:null,value:null}},'"ellipsizeMode"':{defaultValue:null,description:'This can be one of the following values:\n\n- `head` - The line is displayed so that the end fits in the container and the missing text\nat the beginning of the line is indicated by an ellipsis glyph. e.g., "...wxyz"\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\nmissing text in the middle is indicated by an ellipsis glyph. "ab...yz"\n- `tail` - The line is displayed so that the beginning fits in the container and the\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., "abcd..."\n- `clip` - Lines are not drawn past the edge of the text container.\n\nThe default is `tail`.\n\n`numberOfLines` must be set in conjunction with this prop.\n\n> `clip` is working only for iOS',name:"ellipsizeMode",required:!1,type:{name:'"head" | "middle" | "tail" | "clip"',raw:null,value:null}},'"id"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"lineBreakMode"':{defaultValue:null,description:"Line Break mode. Works only with numberOfLines.\nclip is working only for iOS",name:"lineBreakMode",required:!1,type:{name:'"head" | "middle" | "tail" | "clip"',raw:null,value:null}},'"numberOfLines"':{defaultValue:null,description:"Used to truncate the text with an ellipsis after computing the text\nlayout, including line wrapping, such that the total number of lines\ndoes not exceed this number.\n\nThis prop is commonly used with `ellipsizeMode`.",name:"numberOfLines",required:!1,type:{name:"number",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"onTextLayout"':{defaultValue:null,description:"Invoked on Text layout",name:"onTextLayout",required:!1,type:{name:"(event: NativeSyntheticEvent<TextLayoutEventData>) => void",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"This function is called on press.\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"This function is called on long press.\ne.g., `onLongPress={this.increaseSize}>``",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"testID"':{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"maxFontSizeMultiplier"':{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number",raw:null,value:null}},'"adjustsFontSizeToFit"':{defaultValue:null,description:"Specifies whether font should be scaled down automatically to fit given style constraints.",name:"adjustsFontSizeToFit",required:!1,type:{name:"boolean",raw:null,value:null}},'"dynamicTypeRamp"':{defaultValue:null,description:"The Dynamic Text scale ramp to apply to this element on iOS.",name:"dynamicTypeRamp",required:!1,type:{name:'"caption2" | "caption1" | "footnote" | "subheadline" | "callout" | "body" | "headline" | "title3" | "title2" | "title1" | "largeTitle"',raw:null,value:null}},'"minimumFontScale"':{defaultValue:null,description:"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).",name:"minimumFontScale",required:!1,type:{name:"number",raw:null,value:null}},'"suppressHighlighting"':{defaultValue:null,description:"When `true`, no visual change is made when text is pressed down. By\ndefault, a gray oval highlights the text on press down.",name:"suppressHighlighting",required:!1,type:{name:"boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"Specifies the disabled state of the text view for testing purposes.",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"selectable"':{defaultValue:null,description:"Lets the user select text, to use the native copy and paste functionality.",name:"selectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"selectionColor"':{defaultValue:null,description:"The highlight color of the text.",name:"selectionColor",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"textBreakStrategy"':{defaultValue:null,description:"Set text break strategy on Android API Level 23+\ndefault is `highQuality`.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced"',raw:null,value:null}},'"dataDetectorType"':{defaultValue:null,description:"Determines the types of data converted to clickable URLs in the text element.\nBy default no data types are detected.",name:"dataDetectorType",required:!1,type:{name:'"phoneNumber" | "link" | "email" | "none" | "all"',raw:null,value:null}},'"android_hyphenationFrequency"':{defaultValue:null,description:"Hyphenation strategy",name:"android_hyphenationFrequency",required:!1,type:{name:'"none" | "normal" | "full"',raw:null,value:null}},'"accessible"':{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}},'"variant"':{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"Variant",raw:null,value:null}},'"component"':{defaultValue:null,description:"",name:"component",required:!1,type:{name:"Component",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{Typography.displayName="Typography",Typography.__docgenInfo={description:"",displayName:"Typography",props:{variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"bodyLarge"'},{value:'"body"'},{value:'"bodySmall"'},{value:'"bodyXSmall"'}]}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"div"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-components/src/Typography/Typography.tsx#Typography"]={docgenInfo:Typography.__docgenInfo,name:"Typography",path:"../../packages/boi-react-native-components/src/Typography/Typography.tsx#Typography"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/AddPersonIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgAddPersonIcon=function SvgAddPersonIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 26 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.292 3.98c-2.394 0-4.334 1.79-4.334 4s1.94 4 4.334 4c2.393 0 4.333-1.79 4.333-4s-1.94-4-4.333-4Zm0 1c1.795 0 3.25 1.343 3.25 3s-1.455 3-3.25 3-3.25-1.343-3.25-3 1.455-3 3.25-3Zm7.041 14.54c0 .276.243.5.542.5.297-.005.536-.226.542-.5 0-1.95 0-6.5-8.125-6.5s-8.125 4.39-8.125 6.5c0 .276.242.5.541.5.297-.005.536-.226.542-.5 0-2.19 0-5.5 7.042-5.5 7.041 0 7.041 3.44 7.041 5.5Zm2.167-8.54h-2.708c-.3 0-.542-.224-.542-.5s.242-.5.542-.5H19.5v-2.5c0-.276.242-.5.542-.5.299 0 .541.224.541.5v2.5h2.709c.299 0 .541.224.541.5-.005.274-.245.495-.541.5h-2.709v2.5c-.005.274-.245.495-.541.5-.3 0-.542-.224-.542-.5v-2.5Z",clipRule:"evenodd"})}))};SvgAddPersonIcon.displayName="SvgAddPersonIcon";var _default=SvgAddPersonIcon;exports.default=_default;try{AddPersonIcon.displayName="AddPersonIcon",AddPersonIcon.__docgenInfo={description:"",displayName:"AddPersonIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{AddPersonIcon.displayName="AddPersonIcon",AddPersonIcon.__docgenInfo={description:"",displayName:"AddPersonIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/AddPersonIcon.tsx#AddPersonIcon"]={docgenInfo:AddPersonIcon.__docgenInfo,name:"AddPersonIcon",path:"../../packages/boi-react-native-icons/build/AddPersonIcon.tsx#AddPersonIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/AppleIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgAppleIcon=function SvgAppleIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"m12.45 7-.348.36.376.362.346-.39L12.449 7Zm-8.626.326.42.273-.42-.273ZM8.949 21.5l-.112.487a.5.5 0 0 0 .112.013v-.5Zm3-1-.277-.416.277.416Zm4 1 .121.485-.12-.485Zm5-14.174.42-.27-.42.27Zm-8.153-.686c-.95-.914-2.719-1.648-4.501-1.76-1.796-.112-3.742.405-4.89 2.174l.838.545c.883-1.36 2.404-1.82 3.99-1.72 1.598.1 3.126.766 3.87 1.481l.693-.72Zm-9.392.414c-.465.717-.758 1.917-.861 3.269a16.037 16.037 0 0 0 .322 4.55c.684 3.126 2.441 6.3 5.972 7.114l.225-.974c-2.97-.686-4.569-3.377-5.22-6.353a15.038 15.038 0 0 1-.302-4.26c.1-1.301.376-2.297.703-2.801l-.839-.545ZM8.95 22c.851 0 1.675-.28 2.266-.543a8.158 8.158 0 0 0 .988-.526l.016-.01.005-.003.002-.001-.277-.417-.277-.416h-.001l-.01.007a7.121 7.121 0 0 1-.852.452c-.535.238-1.21.457-1.86.457v1Zm3.278-1.084c.23-.153.393-.22.514-.23.085-.007.195.008.355.168l.707-.708c-.34-.34-.73-.491-1.145-.457-.38.032-.716.215-.986.395l.555.832Zm.869-.063c.29.29.745.628 1.252.868.495.234 1.123.414 1.722.264l-.242-.97c-.269.067-.64-.003-1.053-.198a3.698 3.698 0 0 1-.972-.67l-.707.707Zm2.974 1.132c1.135-.284 2.218-1.082 3.146-2.135.933-1.06 1.744-2.415 2.325-3.88 1.153-2.902 1.458-6.387-.172-8.915l-.84.542c1.376 2.135 1.182 5.236.083 8.005-.544 1.37-1.298 2.623-2.146 3.587-.855.97-1.773 1.61-2.638 1.826l.242.97Zm5.3-14.93c-.854-1.323-2.512-2.168-4.252-2.322-1.754-.156-3.67.384-5.043 1.936l.749.662c1.127-1.274 2.71-1.735 4.206-1.602 1.51.134 2.852.865 3.499 1.868l.84-.542Z"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{stroke:"currentColor",strokeLinecap:"round",d:"M16 8c1.167.167 3.4 1.1 3 3.5M12.45 7c-.167-.833-.1-2.8 1.5-4"})]}))};SvgAppleIcon.displayName="SvgAppleIcon";var _default=SvgAppleIcon;exports.default=_default;try{AppleIcon.displayName="AppleIcon",AppleIcon.__docgenInfo={description:"",displayName:"AppleIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{AppleIcon.displayName="AppleIcon",AppleIcon.__docgenInfo={description:"",displayName:"AppleIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/AppleIcon.tsx#AppleIcon"]={docgenInfo:AppleIcon.__docgenInfo,name:"AppleIcon",path:"../../packages/boi-react-native-icons/build/AppleIcon.tsx#AppleIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ApplyIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgApplyIcon=function SvgApplyIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.G,{clipPath:"url(#apply_icon_svg__a)",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M22 7.5a4.5 4.5 0 1 0-9 0 4.5 4.5 0 0 0 9 0Zm-8 0a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0Zm-10.5-2h1A1.5 1.5 0 0 1 6 7h2a4.38 4.38 0 0 1 2.3 1.1l5.7 4.53c.438.325.712.826.75 1.37a1.92 1.92 0 0 1-.198 1H19c.82 0 3 0 3 2s-2.18 2-3 2h-9a.54.54 0 0 1-.28-.08l-4.213-2.809c-.266.242-.62.389-1.007.389h-1A1.5 1.5 0 0 1 2 15V7a1.5 1.5 0 0 1 1.5-1.5Zm2.484 9.717L10.15 18H19c1.46 0 2-.27 2-1s-.54-1-2-1h-3.5a.501.501 0 0 1-.126-.016 2 2 0 0 1-.534.086 1.93 1.93 0 0 1-1.1-.34L10.86 14H9a.5.5 0 0 1 0-1h2a.48.48 0 0 1 .26.07l3 1.82a.94.94 0 0 0 1.21-.09.9.9 0 0 0 .27-.71.93.93 0 0 0-.37-.67l-5.7-4.53A4.11 4.11 0 0 0 8 8H6v7c0 .074-.005.146-.016.217ZM5 7v8a.5.5 0 0 1-.5.5h-1A.5.5 0 0 1 3 15V7a.5.5 0 0 1 .5-.5h1A.5.5 0 0 1 5 7Zm15.5.5a3 3 0 0 0-3-3 .5.5 0 0 0 0 1 2 2 0 0 1 2 2 .5.5 0 0 0 1 0Z",clipRule:"evenodd"})}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Defs,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.ClipPath,{id:"apply_icon_svg__a",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))};SvgApplyIcon.displayName="SvgApplyIcon";var _default=SvgApplyIcon;exports.default=_default;try{ApplyIcon.displayName="ApplyIcon",ApplyIcon.__docgenInfo={description:"",displayName:"ApplyIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ApplyIcon.displayName="ApplyIcon",ApplyIcon.__docgenInfo={description:"",displayName:"ApplyIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ApplyIcon.tsx#ApplyIcon"]={docgenInfo:ApplyIcon.__docgenInfo,name:"ApplyIcon",path:"../../packages/boi-react-native-icons/build/ApplyIcon.tsx#ApplyIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ArrowLeftIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgArrowLeftIcon=function SvgArrowLeftIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M11.96 19.804a.52.52 0 0 1-.38.17.48.48 0 0 1-.33-.08l-9.08-8a.5.5 0 0 1-.073-.67.503.503 0 0 1 .202-.194l8.951-7.886a.51.51 0 0 1 .71 0 .49.49 0 0 1-.05.7l-8.083 7.13H21.53a.5.5 0 1 1 0 1H3.828l8.082 7.12a.51.51 0 0 1 .05.71Z",clipRule:"evenodd"})}))};SvgArrowLeftIcon.displayName="SvgArrowLeftIcon";var _default=SvgArrowLeftIcon;exports.default=_default;try{ArrowLeftIcon.displayName="ArrowLeftIcon",ArrowLeftIcon.__docgenInfo={description:"",displayName:"ArrowLeftIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ArrowLeftIcon.displayName="ArrowLeftIcon",ArrowLeftIcon.__docgenInfo={description:"",displayName:"ArrowLeftIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ArrowLeftIcon.tsx#ArrowLeftIcon"]={docgenInfo:ArrowLeftIcon.__docgenInfo,name:"ArrowLeftIcon",path:"../../packages/boi-react-native-icons/build/ArrowLeftIcon.tsx#ArrowLeftIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ArrowRightIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgArrowRightIcon=function SvgArrowRightIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.07 19.804a.52.52 0 0 0 .38.17.48.48 0 0 0 .33-.08l9.08-8a.5.5 0 0 0 .073-.67.503.503 0 0 0-.202-.194L12.78 3.144a.51.51 0 0 0-.71 0 .49.49 0 0 0 .05.7l8.083 7.13H2.5a.5.5 0 0 0 0 1h17.702l-8.082 7.12a.51.51 0 0 0-.05.71Z",clipRule:"evenodd"})}))};SvgArrowRightIcon.displayName="SvgArrowRightIcon";var _default=SvgArrowRightIcon;exports.default=_default;try{ArrowRightIcon.displayName="ArrowRightIcon",ArrowRightIcon.__docgenInfo={description:"",displayName:"ArrowRightIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ArrowRightIcon.displayName="ArrowRightIcon",ArrowRightIcon.__docgenInfo={description:"",displayName:"ArrowRightIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ArrowRightIcon.tsx#ArrowRightIcon"]={docgenInfo:ArrowRightIcon.__docgenInfo,name:"ArrowRightIcon",path:"../../packages/boi-react-native-icons/build/ArrowRightIcon.tsx#ArrowRightIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/BillIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgBillIcon=function SvgBillIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 26 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M3.792 21H2.708c-.299 0-.541-.224-.541-.5s.242-.5.541-.5h.542V4.5c0-.828.728-1.5 1.625-1.5h9.75c.898 0 1.625.672 1.625 1.5V20h.542c.299 0 .541.224.541.5s-.242.5-.541.5h-13Zm11.375-1V4.5c0-.276-.243-.5-.542-.5h-9.75c-.3 0-.542.224-.542.5V20h10.834ZM8.125 7H6.5c-.3 0-.542-.224-.542-.5S6.201 6 6.5 6h1.625c.3 0 .542.224.542.5s-.243.5-.542.5Zm0 3H6.5c-.3 0-.542-.224-.542-.5S6.201 9 6.5 9h1.625c.3 0 .542.224.542.5s-.243.5-.542.5Zm0 3H6.5c-.3 0-.542-.224-.542-.5s.243-.5.542-.5h1.625c.3 0 .542.224.542.5s-.243.5-.542.5Zm4.333 6c-.299 0-.541-.224-.541-.5v-1.13c0-1.2-.13-1.37-.618-1.37H8.201c-.488 0-.618.17-.618 1.37v1.13c0 .276-.242.5-.541.5-.3 0-.542-.224-.542-.5v-1.13c0-.88 0-2.37 1.7-2.37h3.1c1.7 0 1.7 1.49 1.7 2.37v1.13c0 .276-.242.5-.542.5Zm-1.083-6H13c.3 0 .542-.224.542-.5S13.299 12 13 12h-1.625c-.3 0-.542.224-.542.5s.243.5.542.5Zm0-3H13c.3 0 .542-.224.542-.5S13.299 9 13 9h-1.625c-.3 0-.542.224-.542.5s.243.5.542.5Zm0-3H13c.3 0 .542-.224.542-.5S13.299 6 13 6h-1.625c-.3 0-.542.224-.542.5s.243.5.542.5Zm8.667 5h-2.167c-.3 0-.542-.224-.542-.5s.243-.5.542-.5h2.167V9c0-.276.242-.5.541-.5.3 0 .542.224.542.5v2h2.167c.299 0 .541.224.541.5s-.242.5-.541.5h-2.167v2c0 .276-.242.5-.542.5-.299 0-.541-.224-.541-.5v-2Z",clipRule:"evenodd"})}))};SvgBillIcon.displayName="SvgBillIcon";var _default=SvgBillIcon;exports.default=_default;try{BillIcon.displayName="BillIcon",BillIcon.__docgenInfo={description:"",displayName:"BillIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{BillIcon.displayName="BillIcon",BillIcon.__docgenInfo={description:"",displayName:"BillIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/BillIcon.tsx#BillIcon"]={docgenInfo:BillIcon.__docgenInfo,name:"BillIcon",path:"../../packages/boi-react-native-icons/build/BillIcon.tsx#BillIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/BurgerMenuIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgBurgerMenuIcon=function SvgBurgerMenuIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2.5 7.09h16.76a.5.5 0 0 0 0-1H2.5a.5.5 0 1 0 0 1Zm19 6H4.74a.5.5 0 1 1 0-1H21.5a.5.5 0 0 1 0 1Zm-2.24 6H2.5a.5.5 0 1 1 0-1h16.76a.5.5 0 0 1 0 1Z",clipRule:"evenodd"})}))};SvgBurgerMenuIcon.displayName="SvgBurgerMenuIcon";var _default=SvgBurgerMenuIcon;exports.default=_default;try{BurgerMenuIcon.displayName="BurgerMenuIcon",BurgerMenuIcon.__docgenInfo={description:"",displayName:"BurgerMenuIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{BurgerMenuIcon.displayName="BurgerMenuIcon",BurgerMenuIcon.__docgenInfo={description:"",displayName:"BurgerMenuIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/BurgerMenuIcon.tsx#BurgerMenuIcon"]={docgenInfo:BurgerMenuIcon.__docgenInfo,name:"BurgerMenuIcon",path:"../../packages/boi-react-native-icons/build/BurgerMenuIcon.tsx#BurgerMenuIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/CalculatorIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgCalculatorIcon=function SvgCalculatorIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M7 2h10a3 3 0 0 1 3 3v14a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V5a3 3 0 0 1 3-3Zm12 3a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5ZM8 4h8a2 2 0 1 1 0 4H8a2 2 0 1 1 0-4Zm9 2a1 1 0 0 0-1-1H8a1 1 0 0 0 0 2h8a1 1 0 0 0 1-1Zm-3.5 10.38h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0-.5.5.51.51 0 0 0 .5.5Zm3 2h-3a.51.51 0 0 1-.5-.5.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1ZM8.5 13a.51.51 0 0 0 .5.5.5.5 0 0 0 .5-.5v-1h1a.5.5 0 0 0 0-1h-1v-1a.5.5 0 0 0-1 0v1h-1a.5.5 0 0 0-.5.5.51.51 0 0 0 .5.5h1v1Zm5-1h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0-.5.5.51.51 0 0 0 .5.5Zm-5.88 6.93a.5.5 0 0 1-.35-.85l1.15-1.15-1.15-1.15a.5.5 0 0 1 .355-.848.5.5 0 0 1 .355.148l1.145 1.145 1.145-1.145a.5.5 0 0 1 .71 0 .5.5 0 0 1 0 .7l-1.15 1.15 1.15 1.15a.5.5 0 0 1-.36.85.5.5 0 0 1-.35-.15l-1.145-1.145L7.98 18.78a.51.51 0 0 1-.36.15Z",clipRule:"evenodd"})}))};SvgCalculatorIcon.displayName="SvgCalculatorIcon";var _default=SvgCalculatorIcon;exports.default=_default;try{CalculatorIcon.displayName="CalculatorIcon",CalculatorIcon.__docgenInfo={description:"",displayName:"CalculatorIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{CalculatorIcon.displayName="CalculatorIcon",CalculatorIcon.__docgenInfo={description:"",displayName:"CalculatorIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/CalculatorIcon.tsx#CalculatorIcon"]={docgenInfo:CalculatorIcon.__docgenInfo,name:"CalculatorIcon",path:"../../packages/boi-react-native-icons/build/CalculatorIcon.tsx#CalculatorIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/CalendarIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgCalendarIcon=function SvgCalendarIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.667 4.333a.333.333 0 0 0 .666 0V3.36l2.334.007A.34.34 0 0 1 14 3.7V6H2V3.667c0-.184.15-.334.333-.334l2.334.007v.913a.333.333 0 1 0 .666 0v-.91l5.334.015v.975ZM2 6.667h12v7c0 .184-.15.333-.333.333H2.333A.333.333 0 0 1 2 13.667v-7Zm-.667 7V3.7a1 1 0 0 1 1-1h2.334v-.947a.333.333 0 1 1 .666 0V2.7h5.334V1.667c0-.184.149-.334.333-.334a.34.34 0 0 1 .333.334V2.7h2.334c.55.004.996.45 1 1v10a1 1 0 0 1-1 .967H2.333a1 1 0 0 1-1-1Zm2.334-5h1.666c.184 0 .334-.15.334-.334A.34.34 0 0 0 5.333 8H3.667a.333.333 0 1 0 0 .667Zm5.22 0h-1.78a.333.333 0 0 1-.334-.334A.34.34 0 0 1 7.107 8h1.78a.333.333 0 0 1 0 .667Zm1.78 0h1.666c.184 0 .334-.15.334-.334A.34.34 0 0 0 12.333 8h-1.666a.333.333 0 0 0 0 .667Zm-5.334 2H3.667a.333.333 0 1 1 0-.667h1.666a.34.34 0 0 1 .334.333c0 .184-.15.334-.334.334Zm1.774 0h1.78a.333.333 0 1 0 0-.667h-1.78a.34.34 0 0 0-.334.333c0 .184.15.334.334.334Zm5.226 0h-1.666a.333.333 0 0 1 0-.667h1.666a.34.34 0 0 1 .334.333c0 .184-.15.334-.334.334Zm-8.666 2h1.666c.184 0 .334-.15.334-.334A.34.34 0 0 0 5.333 12H3.667a.333.333 0 1 0 0 .667Zm5.22 0h-1.78a.333.333 0 0 1-.334-.334.34.34 0 0 1 .334-.333h1.78a.333.333 0 1 1 0 .667Zm1.78 0h1.666c.184 0 .334-.15.334-.334a.34.34 0 0 0-.334-.333h-1.666a.333.333 0 0 0 0 .667Z",clipRule:"evenodd"})}))};SvgCalendarIcon.displayName="SvgCalendarIcon";var _default=SvgCalendarIcon;exports.default=_default;try{CalendarIcon.displayName="CalendarIcon",CalendarIcon.__docgenInfo={description:"",displayName:"CalendarIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{CalendarIcon.displayName="CalendarIcon",CalendarIcon.__docgenInfo={description:"",displayName:"CalendarIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/CalendarIcon.tsx#CalendarIcon"]={docgenInfo:CalendarIcon.__docgenInfo,name:"CalendarIcon",path:"../../packages/boi-react-native-icons/build/CalendarIcon.tsx#CalendarIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/CheckIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgCheckIcon=function SvgCheckIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"M14.1 1.89a1.085 1.085 0 0 1 1.5-.162c.409.319.513.872.273 1.306l-.107.156L6.488 14.5.312 8.477a1.022 1.022 0 0 1 0-1.471c.37-.361.945-.401 1.361-.12l.148.12 4.49 4.378L14.1 1.89Z"})}))};SvgCheckIcon.displayName="SvgCheckIcon";var _default=SvgCheckIcon;exports.default=_default;try{CheckIcon.displayName="CheckIcon",CheckIcon.__docgenInfo={description:"",displayName:"CheckIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{CheckIcon.displayName="CheckIcon",CheckIcon.__docgenInfo={description:"",displayName:"CheckIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/CheckIcon.tsx#CheckIcon"]={docgenInfo:CheckIcon.__docgenInfo,name:"CheckIcon",path:"../../packages/boi-react-native-icons/build/CheckIcon.tsx#CheckIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ChevronDownIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgChevronDownIcon=function SvgChevronDownIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"M8.063 10.566a.282.282 0 0 1-.411 0l-4.16-4.16a.282.282 0 0 1 0-.411l.446-.447a.282.282 0 0 1 .41 0l3.51 3.51 3.508-3.51a.282.282 0 0 1 .41 0l.447.447a.282.282 0 0 1 0 .41l-4.16 4.161Z"})}))};SvgChevronDownIcon.displayName="SvgChevronDownIcon";var _default=SvgChevronDownIcon;exports.default=_default;try{ChevronDownIcon.displayName="ChevronDownIcon",ChevronDownIcon.__docgenInfo={description:"",displayName:"ChevronDownIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ChevronDownIcon.displayName="ChevronDownIcon",ChevronDownIcon.__docgenInfo={description:"",displayName:"ChevronDownIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ChevronDownIcon.tsx#ChevronDownIcon"]={docgenInfo:ChevronDownIcon.__docgenInfo,name:"ChevronDownIcon",path:"../../packages/boi-react-native-icons/build/ChevronDownIcon.tsx#ChevronDownIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ChevronRightIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgChevronRightIcon=function SvgChevronRightIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"M10.366 7.852a.282.282 0 0 1 0 .41l-4.16 4.161a.282.282 0 0 1-.411 0l-.447-.446a.282.282 0 0 1 0-.41l3.51-3.51-3.51-3.509a.282.282 0 0 1 0-.41l.447-.447a.282.282 0 0 1 .41 0l4.161 4.16Z"})}))};SvgChevronRightIcon.displayName="SvgChevronRightIcon";var _default=SvgChevronRightIcon;exports.default=_default;try{ChevronRightIcon.displayName="ChevronRightIcon",ChevronRightIcon.__docgenInfo={description:"",displayName:"ChevronRightIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ChevronRightIcon.displayName="ChevronRightIcon",ChevronRightIcon.__docgenInfo={description:"",displayName:"ChevronRightIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ChevronRightIcon.tsx#ChevronRightIcon"]={docgenInfo:ChevronRightIcon.__docgenInfo,name:"ChevronRightIcon",path:"../../packages/boi-react-native-icons/build/ChevronRightIcon.tsx#ChevronRightIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/CloseIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgCloseIcon=function SvgCloseIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M3.15 20.85a.47.47 0 0 0 .35.15.47.47 0 0 0 .35-.15L12 12.7l8.15 8.15a.47.47 0 0 0 .35.15.47.47 0 0 0 .35-.15.48.48 0 0 0 0-.7L12.71 12l8.14-8.15a.495.495 0 1 0-.7-.7L12 11.3 3.85 3.15a.495.495 0 1 0-.7.7L11.29 12l-8.14 8.15a.48.48 0 0 0 0 .7Z",clipRule:"evenodd"})}))};SvgCloseIcon.displayName="SvgCloseIcon";var _default=SvgCloseIcon;exports.default=_default;try{CloseIcon.displayName="CloseIcon",CloseIcon.__docgenInfo={description:"",displayName:"CloseIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{CloseIcon.displayName="CloseIcon",CloseIcon.__docgenInfo={description:"",displayName:"CloseIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/CloseIcon.tsx#CloseIcon"]={docgenInfo:CloseIcon.__docgenInfo,name:"CloseIcon",path:"../../packages/boi-react-native-icons/build/CloseIcon.tsx#CloseIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ContactIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgContactIcon=function SvgContactIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M21.42 13a.5.5 0 0 1-.49-.51 9.46 9.46 0 0 0-9.41-9.41.49.49 0 0 1-.51-.49c0-.274.216-.5.49-.51 5.749.027 10.403 4.681 10.43 10.43a.51.51 0 0 1-.51.49ZM4.83 4.54a1.8 1.8 0 0 1 1.28-.53V4a1.8 1.8 0 0 1 1.27.53l2.56 2.55a1.82 1.82 0 0 1 0 2.56l-1.5 1.5c.66.77 1.38 1.56 2.14 2.33.76.77 1.56 1.48 2.33 2.14l1.5-1.5a1.81 1.81 0 0 1 2.56 0l2.55 2.56a1.79 1.79 0 0 1 0 2.55l-.64.64-1.28 1.28-.33.33A1.79 1.79 0 0 1 16 22h-.22c-1.53-.2-4.82-1.09-8.72-5-3.9-3.91-4.8-7.18-5-8.72a1.83 1.83 0 0 1 .52-1.5l.33-.32 1.28-1.28.64-.64Zm1.8.7A.8.8 0 0 0 6.06 5l.05.01a.76.76 0 0 0-.57.24l-.64.64-1.28 1.27-.33.33a.8.8 0 0 0-.23.67c.18 1.46 1.04 4.47 4.71 8.13 3.67 3.66 6.67 4.53 8.14 4.71H16a.84.84 0 0 0 .52-.24l.33-.33 1.27-1.28.64-.64a.76.76 0 0 0 .24-.57.8.8 0 0 0-.24-.57l-2.55-2.55a.82.82 0 0 0-.57-.24.8.8 0 0 0-.57.24l-1.5 1.49a1 1 0 0 1-.71.3 1 1 0 0 1-.64-.24c-.87-.73-1.68-1.47-2.4-2.19s-1.46-1.53-2.19-2.4a1 1 0 0 1 .06-1.35l1.49-1.5a.8.8 0 0 0 .24-.57.82.82 0 0 0-.24-.57L6.63 5.24Zm11.522 7.6a.5.5 0 0 0 .348.16.5.5 0 0 0 .5-.48 8 8 0 0 0-2.14-5.37A7.72 7.72 0 0 0 11.48 5a.5.5 0 0 0-.48.52.48.48 0 0 0 .52.48 6.8 6.8 0 0 1 4.64 1.85 7 7 0 0 1 1.86 4.63.5.5 0 0 0 .132.36Z",clipRule:"evenodd"})}))};SvgContactIcon.displayName="SvgContactIcon";var _default=SvgContactIcon;exports.default=_default;try{ContactIcon.displayName="ContactIcon",ContactIcon.__docgenInfo={description:"",displayName:"ContactIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ContactIcon.displayName="ContactIcon",ContactIcon.__docgenInfo={description:"",displayName:"ContactIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ContactIcon.tsx#ContactIcon"]={docgenInfo:ContactIcon.__docgenInfo,name:"ContactIcon",path:"../../packages/boi-react-native-icons/build/ContactIcon.tsx#ContactIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/CurrentAccountIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgCurrentAccountIcon=function SvgCurrentAccountIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2 4.5C2 6.22 5.89 7 9.5 7S17 6.22 17 4.5 13.11 2 9.5 2 2 2.78 2 4.5Zm1 0C3 4.05 5.21 3 9.5 3S16 4 16 4.5 13.79 6 9.5 6 3 4.95 3 4.5Zm5.676 13.505a6.95 6.95 0 0 1-.606-2.015 21.49 21.49 0 0 1-3.88-.48C2.7 15.14 2 14.67 2 14a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56 1.182.25 2.383.395 3.59.431a7 7 0 0 1 .293-2.002A23.416 23.416 0 0 1 4.18 12.5C2.7 12.14 2 11.67 2 11a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56 1.404.286 2.831.433 4.263.44a7.018 7.018 0 0 1 1.429-2H9.5a24 24 0 0 1-5.32-.51C2.7 9.14 2 8.67 2 8a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56a25.78 25.78 0 0 0 7.005.426 7 7 0 1 1-2.158 10.017 24.083 24.083 0 0 1-5.077-.513C2.7 18.14 2 17.67 2 17a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56 1.406.28 2.834.429 4.266.445ZM15 21a6 6 0 0 1-5.974-5.437.506.506 0 0 0-.015-.2 5.983 5.983 0 0 1 2.723-5.396.5.5 0 0 0 .331-.202 5.973 5.973 0 0 1 3.907-.686A6 6 0 0 1 15 21Zm3.5-6a.5.5 0 0 0 1 0 4.51 4.51 0 0 0-4.5-4.5.5.5 0 0 0 0 1 3.5 3.5 0 0 1 3.5 3.5Z",clipRule:"evenodd"})}))};SvgCurrentAccountIcon.displayName="SvgCurrentAccountIcon";var _default=SvgCurrentAccountIcon;exports.default=_default;try{CurrentAccountIcon.displayName="CurrentAccountIcon",CurrentAccountIcon.__docgenInfo={description:"",displayName:"CurrentAccountIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{CurrentAccountIcon.displayName="CurrentAccountIcon",CurrentAccountIcon.__docgenInfo={description:"",displayName:"CurrentAccountIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/CurrentAccountIcon.tsx#CurrentAccountIcon"]={docgenInfo:CurrentAccountIcon.__docgenInfo,name:"CurrentAccountIcon",path:"../../packages/boi-react-native-icons/build/CurrentAccountIcon.tsx#CurrentAccountIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/EditIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgEditIcon=function SvgEditIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"m20.15 4.7-.85-.85a3 3 0 0 0-4.1 0L3.31 15.74a.53.53 0 0 0-.15.33L3 20.48a.5.5 0 0 0 .15.37.47.47 0 0 0 .35.15l4.41-.16a.53.53 0 0 0 .33-.15L20.15 8.8a2.9 2.9 0 0 0 0-4.1ZM7.69 19.84 4 20l.14-3.67 9.69-9.7 3.54 3.54-9.68 9.67ZM18.1 9.44l1.34-1.34a1.91 1.91 0 0 0 0-2.69l-.85-.85a2 2 0 0 0-2.69 0L14.56 5.9l3.54 3.54Z",clipRule:"evenodd"})}))};SvgEditIcon.displayName="SvgEditIcon";var _default=SvgEditIcon;exports.default=_default;try{EditIcon.displayName="EditIcon",EditIcon.__docgenInfo={description:"",displayName:"EditIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{EditIcon.displayName="EditIcon",EditIcon.__docgenInfo={description:"",displayName:"EditIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/EditIcon.tsx#EditIcon"]={docgenInfo:EditIcon.__docgenInfo,name:"EditIcon",path:"../../packages/boi-react-native-icons/build/EditIcon.tsx#EditIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/FilterIconIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgFilterIconIcon=function SvgFilterIconIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.05 6H4.5a.5.5 0 0 0 0 1h5.55a2.5 2.5 0 0 0 4.9 0h4.55a.5.5 0 0 0 0-1h-4.55a2.5 2.5 0 0 0-4.9 0Zm.95.5a1.5 1.5 0 1 0 3 0 1.5 1.5 0 0 0-3 0ZM4.5 12h2.55a2.5 2.5 0 0 1 4.9 0h7.55a.5.5 0 0 1 0 1h-7.55a2.5 2.5 0 0 1-4.9 0H4.5a.5.5 0 0 1 0-1Zm6.5.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0ZM4.5 18h8.55a2.5 2.5 0 0 1 4.9 0h1.55a.5.5 0 0 1 0 1h-1.55a2.5 2.5 0 0 1-4.9 0H4.5a.5.5 0 0 1 0-1Zm11 2a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3Z",clipRule:"evenodd"})}))};SvgFilterIconIcon.displayName="SvgFilterIconIcon";var _default=SvgFilterIconIcon;exports.default=_default;try{FilterIconIcon.displayName="FilterIconIcon",FilterIconIcon.__docgenInfo={description:"",displayName:"FilterIconIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{FilterIconIcon.displayName="FilterIconIcon",FilterIconIcon.__docgenInfo={description:"",displayName:"FilterIconIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/FilterIconIcon.tsx#FilterIconIcon"]={docgenInfo:FilterIconIcon.__docgenInfo,name:"FilterIconIcon",path:"../../packages/boi-react-native-icons/build/FilterIconIcon.tsx#FilterIconIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/FingerprintIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgFingerprintIcon=function SvgFingerprintIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M11.646 1.003c-3.43.061-5.65 1.636-5.65 1.636-.282.186-.353.608-.161.896.202.32.595.37.898.155 0 0 4.348-3.285 10.594.04a.623.623 0 0 0 .857-.236c.192-.309.06-.7-.282-.896-1.685-.906-3.28-1.359-4.712-1.523a11.362 11.362 0 0 0-1.544-.072Zm.427 2.819c-6.067-.088-8.968 5.157-8.968 5.157a.715.715 0 0 0 .173.942c.296.208.693.098.937-.252 0 0 2.463-4.577 7.838-4.479 5.395.077 7.756 4.446 7.756 4.446.183.317.57.427.876.24.325-.196.397-.612.224-.952 0 0-2.8-5.015-8.836-5.102ZM7.056 8.479c1.222-1.054 2.848-1.69 4.545-1.816a8.214 8.214 0 0 1 5.051 1.273c1.586 1.033 2.707 2.682 3.313 4.351.596 1.66.728 3.38-.06 4.601-.758 1.2-2.182 1.607-3.414 1.284-1.233-.324-2.314-1.482-2.364-3.193 0-1.137-.758-1.68-1.637-1.784-.889-.084-1.737.26-1.98 1.262-.555 2.233.91 6.02 4.779 7.262.353.104.525.48.424.824a.64.64 0 0 1-.798.428c-4.465-1.44-6.395-5.77-5.627-8.816.404-1.67 1.97-2.42 3.324-2.254 1.404.167 2.757 1.273 2.788 3.057.03 1.19.646 1.753 1.404 1.951.757.199 1.616-.052 2.04-.73.414-.647.445-2.024-.07-3.443-.506-1.42-1.506-2.859-2.789-3.694-2.616-1.67-6.131-1.262-8.121.418-2.04 1.773-3.425 4.83-1.869 9.494a.65.65 0 0 1-.384.825.63.63 0 0 1-.808-.407C3.116 14.3 4.652 10.534 7.056 8.479Zm4.677.422v.01c-1.817.065-3.634 1.06-4.676 3.158-1.347 2.693-.735 5.44.164 7.418.908 1.99 2.144 3.309 2.144 3.309.245.27.643.27.898.01.255-.259.255-.659.01-.95 0 0-1.092-1.19-1.899-2.953-.806-1.762-1.296-3.99-.194-6.196 1.144-2.27 3.186-2.822 4.982-2.27 1.818.562 3.339 2.238 3.308 4.714-.04.378.215.703.572.724.347.033.653-.248.684-.692.061-3.092-1.899-5.33-4.206-6.044a5.571 5.571 0 0 0-1.787-.238Zm-.006 6.29a.63.63 0 0 1 .605-.652c.357 0 .635.285.635.641 0 0 .02 1.213.664 2.334.645 1.131 1.785 2.18 4.482 1.926.387-.03.684.234.704.59a.626.626 0 0 1-.585.673c-3.074.296-4.839-1.09-5.672-2.547-.803-1.457-.833-2.965-.833-2.965Z",clipRule:"evenodd"})}))};SvgFingerprintIcon.displayName="SvgFingerprintIcon";var _default=SvgFingerprintIcon;exports.default=_default;try{FingerprintIcon.displayName="FingerprintIcon",FingerprintIcon.__docgenInfo={description:"",displayName:"FingerprintIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{FingerprintIcon.displayName="FingerprintIcon",FingerprintIcon.__docgenInfo={description:"",displayName:"FingerprintIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/FingerprintIcon.tsx#FingerprintIcon"]={docgenInfo:FingerprintIcon.__docgenInfo,name:"FingerprintIcon",path:"../../packages/boi-react-native-icons/build/FingerprintIcon.tsx#FingerprintIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/HelpIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgHelpIcon=function SvgHelpIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.G,{clipPath:"url(#help_icon_svg__a)",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M21.5 22a.432.432 0 0 1-.19 0l-3.86-1.58a10 10 0 1 1 3-3.1l1.48 4a.5.5 0 0 1-.12.53.52.52 0 0 1-.31.15ZM12 3a9 9 0 0 0-8.87 10.53 9 9 0 0 0 14 5.87.52.52 0 0 1 .47-.05l3.06 1.26-1.17-3.22a.48.48 0 0 1 0-.45A9 9 0 0 0 12.82 3 7.497 7.497 0 0 0 12 3Zm0 11.5a.5.5 0 0 1-.5-.5v-1.2c0-.837.685-1.366 1.343-1.874l.007-.006A3.15 3.15 0 0 0 14.5 8.4c0-1.21-.91-1.9-2.5-1.9-1.59 0-2.5.69-2.5 1.9a.5.5 0 1 1-1 0c0-1.4.92-2.9 3.5-2.9s3.5 1.5 3.5 2.9a4.08 4.08 0 0 1-2 3.31l-.155.12v.001c-.45.349-.845.655-.845.969V14a.5.5 0 0 1-.5.5ZM10.5 17a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Zm2 0a.5.5 0 1 0-1 0 .5.5 0 0 0 1 0Z",clipRule:"evenodd"})}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Defs,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.ClipPath,{id:"help_icon_svg__a",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))};SvgHelpIcon.displayName="SvgHelpIcon";var _default=SvgHelpIcon;exports.default=_default;try{HelpIcon.displayName="HelpIcon",HelpIcon.__docgenInfo={description:"",displayName:"HelpIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{HelpIcon.displayName="HelpIcon",HelpIcon.__docgenInfo={description:"",displayName:"HelpIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/HelpIcon.tsx#HelpIcon"]={docgenInfo:HelpIcon.__docgenInfo,name:"HelpIcon",path:"../../packages/boi-react-native-icons/build/HelpIcon.tsx#HelpIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/LoanIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgLoanIcon=function SvgLoanIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M14.194 8.67A4 4 0 0 0 17.83 11a3.79 3.79 0 0 0 3.08-1.61.502.502 0 1 0-.82-.58A2.75 2.75 0 0 1 17.83 10a2.997 2.997 0 0 1-2.493-1.33h2.833a.51.51 0 0 0 .5-.5.5.5 0 0 0-.5-.5h-3.265a3.012 3.012 0 0 1-.074-.75h3.339a.51.51 0 0 0 .5-.5.5.5 0 0 0-.5-.5h-3.14A3.001 3.001 0 0 1 17.83 4a2.75 2.75 0 0 1 2.26 1.19.502.502 0 0 0 .82-.58A3.79 3.79 0 0 0 17.83 3a4.002 4.002 0 0 0-3.852 2.92H13.5a.5.5 0 0 0 0 1h.33V7c0 .228.02.452.056.67H13.5a.5.5 0 0 0 0 1h.694ZM4.5 5.5h-1A1.5 1.5 0 0 0 2 7v8a1.5 1.5 0 0 0 1.5 1.5h1c.388 0 .741-.147 1.007-.389L9.72 18.92A.54.54 0 0 0 10 19h9c.82 0 3 0 3-2s-2.18-2-3-2h-2.448a1.92 1.92 0 0 0 .198-1 1.87 1.87 0 0 0-.75-1.37L10.3 8.1A4.38 4.38 0 0 0 8 7H6a1.5 1.5 0 0 0-1.5-1.5ZM10.15 18l-4.166-2.783c.01-.071.016-.143.016-.217V8h2a4.11 4.11 0 0 1 1.67.89l5.7 4.53a.93.93 0 0 1 .37.67.9.9 0 0 1-.27.71.94.94 0 0 1-1.21.09l-3-1.82A.48.48 0 0 0 11 13H9a.5.5 0 0 0 0 1h1.86l2.88 1.73a1.93 1.93 0 0 0 1.1.34 2 2 0 0 0 .534-.086c.04.01.082.016.126.016H19c1.46 0 2 .27 2 1s-.54 1-2 1h-8.85ZM5 7.5V7a.5.5 0 0 0-.5-.5h-1A.5.5 0 0 0 3 7v8a.5.5 0 0 0 .5.5h1A.5.5 0 0 0 5 15V7.5Z",clipRule:"evenodd"})}))};SvgLoanIcon.displayName="SvgLoanIcon";var _default=SvgLoanIcon;exports.default=_default;try{LoanIcon.displayName="LoanIcon",LoanIcon.__docgenInfo={description:"",displayName:"LoanIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{LoanIcon.displayName="LoanIcon",LoanIcon.__docgenInfo={description:"",displayName:"LoanIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/LoanIcon.tsx#LoanIcon"]={docgenInfo:LoanIcon.__docgenInfo,name:"LoanIcon",path:"../../packages/boi-react-native-icons/build/LoanIcon.tsx#LoanIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/LockIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgLockIcon=function SvgLockIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M16.5 11h-11a.5.5 0 0 0-.5.5v9a.51.51 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-2ZM7 10V7a5 5 0 0 1 10 0v3h1.5a1.5 1.5 0 0 1 1.5 1.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 4 20.5v-9A1.5 1.5 0 0 1 5.5 10H7Zm1 0h8V7a4 4 0 0 0-8 0v3Zm5.5 4.5a1.5 1.5 0 0 1-1 1.415V18.5a.5.5 0 0 1-1 0v-2.585a1.5 1.5 0 1 1 2-1.415Zm-2 0a.51.51 0 0 0 .5.5.5.5 0 1 0-.5-.5Z",clipRule:"evenodd"})}))};SvgLockIcon.displayName="SvgLockIcon";var _default=SvgLockIcon;exports.default=_default;try{LockIcon.displayName="LockIcon",LockIcon.__docgenInfo={description:"",displayName:"LockIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{LockIcon.displayName="LockIcon",LockIcon.__docgenInfo={description:"",displayName:"LockIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/LockIcon.tsx#LockIcon"]={docgenInfo:LockIcon.__docgenInfo,name:"LockIcon",path:"../../packages/boi-react-native-icons/build/LockIcon.tsx#LockIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/MessagesIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgMessagesIcon=function SvgMessagesIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M22 17.5a1.5 1.5 0 0 1-1.5 1.5h-17A1.5 1.5 0 0 1 2 17.5v-11A1.5 1.5 0 0 1 3.5 5h17A1.5 1.5 0 0 1 22 6.5v11ZM3.5 6a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5h17a.5.5 0 0 0 .5-.5v-11a.5.5 0 0 0-.5-.5h-17Zm6.79 7.59a2.5 2.5 0 0 0 1.71.67 2.5 2.5 0 0 0 1.69-.67l6.13-5.72a.503.503 0 0 0-.68-.74L13 12.86a1.49 1.49 0 0 1-2 0L4.84 7.13a.502.502 0 1 0-.68.74l6.13 5.72ZM4.5 16a.47.47 0 0 1-.35-.15.48.48 0 0 1 0-.7l3-3a.495.495 0 1 1 .7.7l-3 3a.47.47 0 0 1-.35.15Zm14.65-.15a.47.47 0 0 0 .35.15.47.47 0 0 0 .35-.15.48.48 0 0 0 0-.7l-3-3a.495.495 0 1 0-.7.7l3 3Z",clipRule:"evenodd"})}))};SvgMessagesIcon.displayName="SvgMessagesIcon";var _default=SvgMessagesIcon;exports.default=_default;try{MessagesIcon.displayName="MessagesIcon",MessagesIcon.__docgenInfo={description:"",displayName:"MessagesIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MessagesIcon.displayName="MessagesIcon",MessagesIcon.__docgenInfo={description:"",displayName:"MessagesIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/MessagesIcon.tsx#MessagesIcon"]={docgenInfo:MessagesIcon.__docgenInfo,name:"MessagesIcon",path:"../../packages/boi-react-native-icons/build/MessagesIcon.tsx#MessagesIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/MobileIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgMobileIcon=function SvgMobileIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M16 2H8a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h8a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3ZM6 18V7h12v11H6Zm0 1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2H6ZM6 6h12V5a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v1Zm5-1h2a.5.5 0 0 0 0-1h-2a.5.5 0 0 0 0 1Z",clipRule:"evenodd"})}))};SvgMobileIcon.displayName="SvgMobileIcon";var _default=SvgMobileIcon;exports.default=_default;try{MobileIcon.displayName="MobileIcon",MobileIcon.__docgenInfo={description:"",displayName:"MobileIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MobileIcon.displayName="MobileIcon",MobileIcon.__docgenInfo={description:"",displayName:"MobileIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/MobileIcon.tsx#MobileIcon"]={docgenInfo:MobileIcon.__docgenInfo,name:"MobileIcon",path:"../../packages/boi-react-native-icons/build/MobileIcon.tsx#MobileIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/MoreIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgMoreIcon=function SvgMoreIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M4.5 15.36a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5Zm0-4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3Zm5 1.5a2.5 2.5 0 1 0 5 0 2.5 2.5 0 0 0-5 0Zm1 0a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Zm6.5 0a2.5 2.5 0 1 0 5 0 2.5 2.5 0 0 0-5 0Zm1 0a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z",clipRule:"evenodd"})}))};SvgMoreIcon.displayName="SvgMoreIcon";var _default=SvgMoreIcon;exports.default=_default;try{MoreIcon.displayName="MoreIcon",MoreIcon.__docgenInfo={description:"",displayName:"MoreIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MoreIcon.displayName="MoreIcon",MoreIcon.__docgenInfo={description:"",displayName:"MoreIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/MoreIcon.tsx#MoreIcon"]={docgenInfo:MoreIcon.__docgenInfo,name:"MoreIcon",path:"../../packages/boi-react-native-icons/build/MoreIcon.tsx#MoreIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/MortgagesIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgMortgagesIcon=function SvgMortgagesIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M17.88 22H6.13A2.09 2.09 0 0 1 4 20v-7H2.5a.5.5 0 0 1-.36-.85l9.5-10A.48.48 0 0 1 12 2a.54.54 0 0 1 .36.14l1 1a.502.502 0 1 1-.71.71l-.64-.64L3.67 12h.83a.5.5 0 0 1 .5.5v7.46a1.09 1.09 0 0 0 1.13 1h11.75a1.08 1.08 0 0 0 1.12-1v-7.5a.5.5 0 0 1 .5-.5h.79l-.14-.15a.5.5 0 0 1 0-.71.51.51 0 0 1 .71 0l1 1a.51.51 0 0 1-.36.86H20v7A2.09 2.09 0 0 1 17.88 22Zm-3.38-2a.51.51 0 0 1-.5-.5v-3.86c0-1-.82-1.64-2-1.64-1.18 0-2 .67-2 1.64v3.82a.5.5 0 0 1-.5.5.51.51 0 0 1-.5-.5v-3.82a3 3 0 0 1 6 0v3.82a.5.5 0 0 1-.5.54Zm.69-12.34A4 4 0 0 0 18.83 10a3.76 3.76 0 0 0 3.08-1.61.501.501 0 0 0-.81-.59A2.79 2.79 0 0 1 18.83 9a2.997 2.997 0 0 1-2.5-1.34h2.84a.5.5 0 1 0 0-1h-3.267a3.009 3.009 0 0 1-.072-.75h3.339a.5.5 0 1 0 0-1h-3.136A3.001 3.001 0 0 1 18.83 3a2.78 2.78 0 0 1 2.27 1.19.501.501 0 0 0 .81-.59A3.75 3.75 0 0 0 18.83 2a4.002 4.002 0 0 0-3.85 2.91h-.48a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5h.331L14.83 6c0 .225.019.445.054.66H14.5a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5h.69Z",clipRule:"evenodd"})}))};SvgMortgagesIcon.displayName="SvgMortgagesIcon";var _default=SvgMortgagesIcon;exports.default=_default;try{MortgagesIcon.displayName="MortgagesIcon",MortgagesIcon.__docgenInfo={description:"",displayName:"MortgagesIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MortgagesIcon.displayName="MortgagesIcon",MortgagesIcon.__docgenInfo={description:"",displayName:"MortgagesIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/MortgagesIcon.tsx#MortgagesIcon"]={docgenInfo:MortgagesIcon.__docgenInfo,name:"MortgagesIcon",path:"../../packages/boi-react-native-icons/build/MortgagesIcon.tsx#MortgagesIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/NotificationIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgNotificationIcon=function SvgNotificationIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12 2a1.5 1.5 0 0 0-1.342 2.171A7.182 7.182 0 0 0 5.06 11.06v3.91a2.7 2.7 0 0 1-.52 1.76 2.41 2.41 0 0 0-.51 1.46A1.71 1.71 0 0 0 5.66 20h3.892A2.51 2.51 0 0 0 12 22a2.5 2.5 0 0 0 2.45-2h3.96a1.71 1.71 0 0 0 1.61-1.78 2.41 2.41 0 0 0-.5-1.46A2.7 2.7 0 0 1 19 15v-3.94a7.202 7.202 0 0 0-5.654-6.896c.098-.2.154-.426.154-.664A1.51 1.51 0 0 0 12 2Zm0 2a.5.5 0 1 0 0-1 .51.51 0 0 0-.5.5.5.5 0 0 0 .5.5ZM5.66 19.03h4.177A.509.509 0 0 1 10 19h4a.5.5 0 0 1 .171.03h4.239c.4 0 .62-.42.62-.81a1.42 1.42 0 0 0-.34-.91 3.72 3.72 0 0 1-.68-2.31v-3.91A6.16 6.16 0 0 0 12.06 5a6.17 6.17 0 0 0-6 6.06V15a3.65 3.65 0 0 1-.69 2.31 1.48 1.48 0 0 0-.34.91c0 .39.22.81.63.81Zm6.345 1.972A1.5 1.5 0 0 1 10.59 20h2.83a1.5 1.5 0 0 1-1.415 1.002ZM16.5 11.54a.5.5 0 0 1-.5-.5.54.54 0 0 1 .49-.54.48.48 0 0 1 .51.45V11a.5.5 0 0 1-.5.54Zm-.94-2.05a.51.51 0 0 0 .44.26.39.39 0 0 0 .24-.08.48.48 0 0 0 .2-.67A5.23 5.23 0 0 0 12 6.25a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5 4.3 4.3 0 0 1 3.56 2.24Z",clipRule:"evenodd"})}))};SvgNotificationIcon.displayName="SvgNotificationIcon";var _default=SvgNotificationIcon;exports.default=_default;try{NotificationIcon.displayName="NotificationIcon",NotificationIcon.__docgenInfo={description:"",displayName:"NotificationIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{NotificationIcon.displayName="NotificationIcon",NotificationIcon.__docgenInfo={description:"",displayName:"NotificationIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/NotificationIcon.tsx#NotificationIcon"]={docgenInfo:NotificationIcon.__docgenInfo,name:"NotificationIcon",path:"../../packages/boi-react-native-icons/build/NotificationIcon.tsx#NotificationIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/OrderIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgOrderIcon=function SvgOrderIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"m19.85 6.15-4-4-.14-.15H5.5A1.5 1.5 0 0 0 4 3.5v17A1.5 1.5 0 0 0 5.5 22h13a1.5 1.5 0 0 0 1.5-1.5V6.29l-.15-.14ZM18.29 6H16.5a.5.5 0 0 1-.5-.5V3.71L18.29 6ZM5.5 21h13a.5.5 0 0 0 .5-.5V7h-2.5A1.5 1.5 0 0 1 15 5.5V3H5.5a.5.5 0 0 0-.5.5v17a.5.5 0 0 0 .5.5Zm11-11h-9a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1Zm-9 2h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1Zm0-5h5a.5.5 0 0 0 0-1h-5a.5.5 0 0 0 0 1Zm5 2h-5a.5.5 0 0 1 0-1h5a.5.5 0 0 1 0 1Zm4 5h-9a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1Zm-9 2h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1Z",clipRule:"evenodd"})}))};SvgOrderIcon.displayName="SvgOrderIcon";var _default=SvgOrderIcon;exports.default=_default;try{OrderIcon.displayName="OrderIcon",OrderIcon.__docgenInfo={description:"",displayName:"OrderIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{OrderIcon.displayName="OrderIcon",OrderIcon.__docgenInfo={description:"",displayName:"OrderIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/OrderIcon.tsx#OrderIcon"]={docgenInfo:OrderIcon.__docgenInfo,name:"OrderIcon",path:"../../packages/boi-react-native-icons/build/OrderIcon.tsx#OrderIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/PercentageIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgPercentageIcon=function SvgPercentageIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2.5 22a.47.47 0 0 1-.35-.15.48.48 0 0 1 0-.7l19-19a.495.495 0 1 1 .7.7l-19 19a.47.47 0 0 1-.35.15ZM3 6.5a3.5 3.5 0 1 0 7 0 3.5 3.5 0 0 0-7 0Zm1 0a2.5 2.5 0 1 1 5 0 2.5 2.5 0 0 1-5 0ZM17.5 21a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7Zm0-6a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5Z",clipRule:"evenodd"})}))};SvgPercentageIcon.displayName="SvgPercentageIcon";var _default=SvgPercentageIcon;exports.default=_default;try{PercentageIcon.displayName="PercentageIcon",PercentageIcon.__docgenInfo={description:"",displayName:"PercentageIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{PercentageIcon.displayName="PercentageIcon",PercentageIcon.__docgenInfo={description:"",displayName:"PercentageIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/PercentageIcon.tsx#PercentageIcon"]={docgenInfo:PercentageIcon.__docgenInfo,name:"PercentageIcon",path:"../../packages/boi-react-native-icons/build/PercentageIcon.tsx#PercentageIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ProfileIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgProfileIcon=function SvgProfileIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.G,{clipPath:"url(#profile_icon_svg__a)",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm19 0a9 9 0 1 0-18 0 9 9 0 0 0 18 0ZM9 8a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm5 0a2 2 0 1 0-4 0 2 2 0 0 0 4 0Zm3 9.5a.5.5 0 0 0 1 0c0-1.65 0-5.5-6-5.5s-6 3.71-6 5.5a.5.5 0 0 0 1 0c0-1.79 0-4.5 5-4.5s5 2.82 5 4.5Z",clipRule:"evenodd"})}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Defs,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.ClipPath,{id:"profile_icon_svg__a",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))};SvgProfileIcon.displayName="SvgProfileIcon";var _default=SvgProfileIcon;exports.default=_default;try{ProfileIcon.displayName="ProfileIcon",ProfileIcon.__docgenInfo={description:"",displayName:"ProfileIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ProfileIcon.displayName="ProfileIcon",ProfileIcon.__docgenInfo={description:"",displayName:"ProfileIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ProfileIcon.tsx#ProfileIcon"]={docgenInfo:ProfileIcon.__docgenInfo,name:"ProfileIcon",path:"../../packages/boi-react-native-icons/build/ProfileIcon.tsx#ProfileIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/SalaryIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgSalaryIcon=function SvgSalaryIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 23"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2.4 9h19.2a1.8 1.8 0 0 1 1.8 1.8v9.6a1.8 1.8 0 0 1-1.8 1.8H2.4a1.8 1.8 0 0 1-1.8-1.8v-9.6A1.8 1.8 0 0 1 2.4 9Zm19.2 1.2H2.4a.6.6 0 0 0-.6.6v9.6a.6.6 0 0 0 .6.6h19.2a.6.6 0 0 0 .6-.6v-9.6a.6.6 0 0 0-.6-.6Z",clipRule:"evenodd"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"M19.8 15a.6.6 0 0 1 .108 1.19l-.108.01h-3.6a.6.6 0 0 1-.108-1.19L16.2 15h3.6Z"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.56 12.6c.827.005 1.602.455 2.078 1.207a.404.404 0 0 1-.081.525c-.153.12-.364.08-.473-.09-.345-.557-.915-.89-1.525-.892-.86 0-1.596.598-1.889 1.44h2.119c.186 0 .337.168.337.375-.003.205-.152.371-.337.375h-2.253l-.001.06c0 .173.018.341.05.503h2.204c.186 0 .337.167.337.374-.003.206-.152.372-.337.375l-1.911.001c.363.601.98.997 1.681.997.61-.001 1.18-.335 1.525-.893.109-.17.32-.21.473-.09.153.12.189.356.08.525-.475.753-1.25 1.203-2.078 1.208-1.088 0-2.026-.716-2.453-1.747h-.469c-.186 0-.337-.168-.337-.376 0-.207.151-.375.337-.375h.26a3.347 3.347 0 0 1-.037-.502l.001-.06h-.224c-.186 0-.337-.168-.337-.375s.151-.375.337-.375h.323c.318-1.263 1.361-2.19 2.6-2.19Z",clipRule:"evenodd"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"m11.989 8.112-.093-.008-.078-.024-.071-.037-.045-.033-.049-.047-2.758-3.042a.545.545 0 0 1 0-.717.428.428 0 0 1 .586-.058l.064.058 1.973 2.177V.507c0-.28.206-.507.46-.507.226 0 .414.18.453.416l.007.091V6.38l1.973-2.176a.43.43 0 0 1 .65 0c.16.176.178.45.054.647l-.053.07-2.759 3.042-.037.037-.056.042-.071.038-.078.024-.072.008ZM7.8 15.005a.6.6 0 0 1 .108 1.19l-.108.01H4.2a.6.6 0 0 1-.108-1.19l.108-.01h3.6Z"})]}))};SvgSalaryIcon.displayName="SvgSalaryIcon";var _default=SvgSalaryIcon;exports.default=_default;try{SalaryIcon.displayName="SalaryIcon",SalaryIcon.__docgenInfo={description:"",displayName:"SalaryIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{SalaryIcon.displayName="SalaryIcon",SalaryIcon.__docgenInfo={description:"",displayName:"SalaryIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/SalaryIcon.tsx#SalaryIcon"]={docgenInfo:SalaryIcon.__docgenInfo,name:"SalaryIcon",path:"../../packages/boi-react-native-icons/build/SalaryIcon.tsx#SalaryIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/SavingAccountIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgSavingAccountIcon=function SvgSavingAccountIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.404 5.884A3.78 3.78 0 0 0 7.152 4a.5.5 0 0 0-.502.5v2.692l-.009.006a6.5 6.5 0 0 0-2.058 2.57l-.078.182H2.5l-.09.008a.5.5 0 0 0-.41.492v4l.009.094a.5.5 0 0 0 .125.247l.206.213.313.309c.4.387.833.774 1.283 1.136.585.471 1.156.865 1.703 1.158.481.259.935.435 1.361.515V20.5l.008.09A.5.5 0 0 0 7.5 21h2l.088-.008a.5.5 0 0 0 .402-.394l.329-1.641c.069-.002.138-.004.207-.008l2.974.001.181.006.329 1.642.024.084A.5.5 0 0 0 14.5 21h2l.09-.008A.5.5 0 0 0 17 20.5v-2.55a6.554 6.554 0 0 0 2.712-3.59.5.5 0 0 0 .138.02c.292 0 .69-.083 1.092-.337C21.605 13.625 22 12.879 22 11.8a.5.5 0 0 0-1 0c0 .741-.224 1.165-.592 1.397-.173.11-.35.16-.475.177a6.56 6.56 0 0 0-6.428-7.494H10.45l-.046.004ZM16 17.661V20h-1.09l-.328-1.64a.494.494 0 0 0-.187-.305.5.5 0 0 0-.338-.103 5.166 5.166 0 0 1-.531 0L10.5 17.95l-.198.007a5.19 5.19 0 0 1-.366-.006h-.017v-.001a.498.498 0 0 0-.5.409l-.33 1.64H8v-2.34a.501.501 0 0 0-.006-.068l-.002-.02a.5.5 0 0 0-.578-.404c-.359-.02-.8-.171-1.303-.44-.485-.261-1.007-.622-1.547-1.056a18.13 18.13 0 0 1-1.217-1.077l-.108-.106L3 14.249V10.95h1.85l.09-.008a.5.5 0 0 0 .382-.328 5.5 5.5 0 0 1 2.109-2.75.5.5 0 0 0 .219-.43V5.049l.053.01a2.78 2.78 0 0 1 1.945 1.534.5.5 0 0 0 .627.255.5.5 0 0 0 .175.032h3.05l.24.008a5.56 5.56 0 0 1 2.588 10.302.5.5 0 0 0-.328.47v.002Zm-7.008-8.25A.5.5 0 0 0 8 9.5v1l.008.09A.5.5 0 0 0 9 10.5v-1l-.008-.09ZM14.5 8a.5.5 0 0 1 .09.992L14.5 9h-3a.5.5 0 0 1-.09-.992L11.5 8h3Z",clipRule:"evenodd"})}))};SvgSavingAccountIcon.displayName="SvgSavingAccountIcon";var _default=SvgSavingAccountIcon;exports.default=_default;try{SavingAccountIcon.displayName="SavingAccountIcon",SavingAccountIcon.__docgenInfo={description:"",displayName:"SavingAccountIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{SavingAccountIcon.displayName="SavingAccountIcon",SavingAccountIcon.__docgenInfo={description:"",displayName:"SavingAccountIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/SavingAccountIcon.tsx#SavingAccountIcon"]={docgenInfo:SavingAccountIcon.__docgenInfo,name:"SavingAccountIcon",path:"../../packages/boi-react-native-icons/build/SavingAccountIcon.tsx#SavingAccountIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/SearchIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgSearchIcon=function SvgSearchIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2 10a8 8 0 1 1 13.996 5.296l5.854 5.854a.48.48 0 0 1 0 .7.47.47 0 0 1-.35.15.47.47 0 0 1-.35-.15l-5.854-5.854A8 8 0 0 1 2 10Zm15 0a7 7 0 1 0-14 0 7 7 0 0 0 14 0Zm-1.82.5a.5.5 0 0 1-.5-.5A4.69 4.69 0 0 0 10 5.32a.5.5 0 0 1 0-1A5.69 5.69 0 0 1 15.68 10a.5.5 0 0 1-.5.5Z",clipRule:"evenodd"})}))};SvgSearchIcon.displayName="SvgSearchIcon";var _default=SvgSearchIcon;exports.default=_default;try{SearchIcon.displayName="SearchIcon",SearchIcon.__docgenInfo={description:"",displayName:"SearchIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{SearchIcon.displayName="SearchIcon",SearchIcon.__docgenInfo={description:"",displayName:"SearchIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/SearchIcon.tsx#SearchIcon"]={docgenInfo:SearchIcon.__docgenInfo,name:"SearchIcon",path:"../../packages/boi-react-native-icons/build/SearchIcon.tsx#SearchIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/SendMobileIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgSendMobileIcon=function SvgSendMobileIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.71 22H5.28A3.32 3.32 0 0 1 2 18.65V5.35A3.32 3.32 0 0 1 5.28 2h7.43A3.33 3.33 0 0 1 16 5.35v3.81a.5.5 0 0 1-1 0V6H3v11h12v-3.1a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5v4.75A3.33 3.33 0 0 1 12.71 22ZM3.022 5A2.32 2.32 0 0 1 5.28 3h7.43a2.33 2.33 0 0 1 2.267 2H3.022ZM3 18.65V18h12v.65A2.32 2.32 0 0 1 12.71 21H5.28A2.31 2.31 0 0 1 3 18.65Zm15.14-3.79a.52.52 0 0 0 .71 0l3-3a.5.5 0 0 0 0-.71l-3-3a.5.5 0 0 0-.71 0 .51.51 0 0 0 0 .71L20.288 11H9.5a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5h10.79l-2.15 2.15a.51.51 0 0 0 0 .71ZM8 20h2a.5.5 0 0 0 .5-.5.51.51 0 0 0-.5-.5H8a.5.5 0 0 0 0 1Z",clipRule:"evenodd"})}))};SvgSendMobileIcon.displayName="SvgSendMobileIcon";var _default=SvgSendMobileIcon;exports.default=_default;try{SendMobileIcon.displayName="SendMobileIcon",SendMobileIcon.__docgenInfo={description:"",displayName:"SendMobileIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{SendMobileIcon.displayName="SendMobileIcon",SendMobileIcon.__docgenInfo={description:"",displayName:"SendMobileIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/SendMobileIcon.tsx#SendMobileIcon"]={docgenInfo:SendMobileIcon.__docgenInfo,name:"SendMobileIcon",path:"../../packages/boi-react-native-icons/build/SendMobileIcon.tsx#SendMobileIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/SendMoneyIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgSendMoneyIcon=function SvgSendMoneyIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"M2.5 9.5a.5.5 0 0 1 .492.41L3 10v4h4a.5.5 0 0 1 .492.41l.008.09a.5.5 0 0 1-.41.492L7 15H2.5a.5.5 0 0 1-.492-.41L2 14.5V10a.5.5 0 0 1 .5-.5ZM21.5 9a.5.5 0 0 1 .492.41L22 9.5V14a.5.5 0 0 1-.992.09L21 14v-4h-4a.5.5 0 0 1-.492-.41L16.5 9.5a.5.5 0 0 1 .41-.492L17 9h4.5Z"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",d:"M14.146 2.146a.5.5 0 0 1 .765.638l-.057.07-12 12a.5.5 0 0 1-.765-.638l.057-.07 12-12ZM21.146 9.146a.5.5 0 0 1 .765.638l-.057.07-12 12a.5.5 0 0 1-.765-.638l.057-.07 12-12Z"})]}))};SvgSendMoneyIcon.displayName="SvgSendMoneyIcon";var _default=SvgSendMoneyIcon;exports.default=_default;try{SendMoneyIcon.displayName="SendMoneyIcon",SendMoneyIcon.__docgenInfo={description:"",displayName:"SendMoneyIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{SendMoneyIcon.displayName="SendMoneyIcon",SendMoneyIcon.__docgenInfo={description:"",displayName:"SendMoneyIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/SendMoneyIcon.tsx#SendMoneyIcon"]={docgenInfo:SendMoneyIcon.__docgenInfo,name:"SendMoneyIcon",path:"../../packages/boi-react-native-icons/build/SendMoneyIcon.tsx#SendMoneyIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ServicesIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgServicesIcon=function SvgServicesIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.G,{clipPath:"url(#services_icon_svg__a)",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M21.493 10h.007a.5.5 0 0 0 .5-.5m-.507.5H2.5a.5.5 0 0 1-.5-.49v-.02a.498.498 0 0 1 .21-.397l9.484-6.988A.5.5 0 0 1 12.3 2.1l9.49 6.992a.49.49 0 0 1 .082.074c.077.086.125.2.127.325m-10-6.37L4.021 9H19.98L12 3.121ZM9 12H5v7h4v-7Zm1 0v7h4v-7h-4Zm5 7h4v-7h-4v7Zm5 0v-7h1.5a.5.5 0 1 0 0-1h-19a.5.5 0 0 0 0 1H4v7h-.5a1.5 1.5 0 0 0 0 3h17a1.5 1.5 0 1 0 0-3H20ZM3.5 20a.5.5 0 0 0 0 1h17a.5.5 0 1 0 0-1h-17Z",clipRule:"evenodd"})}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Defs,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.ClipPath,{id:"services_icon_svg__a",children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))};SvgServicesIcon.displayName="SvgServicesIcon";var _default=SvgServicesIcon;exports.default=_default;try{ServicesIcon.displayName="ServicesIcon",ServicesIcon.__docgenInfo={description:"",displayName:"ServicesIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ServicesIcon.displayName="ServicesIcon",ServicesIcon.__docgenInfo={description:"",displayName:"ServicesIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ServicesIcon.tsx#ServicesIcon"]={docgenInfo:ServicesIcon.__docgenInfo,name:"ServicesIcon",path:"../../packages/boi-react-native-icons/build/ServicesIcon.tsx#ServicesIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/ShareIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgShareIcon=function SvgShareIcon(props){return(0,_jsxRuntime.jsxs)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:[(0,_jsxRuntime.jsx)(_reactNativeSvg.Circle,{cx:5,cy:12,r:3,stroke:"currentColor"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Circle,{cx:19,cy:19,r:3,stroke:"currentColor"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Circle,{cx:19,cy:5,r:3,stroke:"currentColor"}),(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{stroke:"currentColor",d:"m8 11 8.5-4.5M16.5 17.5 8 13"})]}))};SvgShareIcon.displayName="SvgShareIcon";var _default=SvgShareIcon;exports.default=_default;try{ShareIcon.displayName="ShareIcon",ShareIcon.__docgenInfo={description:"",displayName:"ShareIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{ShareIcon.displayName="ShareIcon",ShareIcon.__docgenInfo={description:"",displayName:"ShareIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/ShareIcon.tsx#ShareIcon"]={docgenInfo:ShareIcon.__docgenInfo,name:"ShareIcon",path:"../../packages/boi-react-native-icons/build/ShareIcon.tsx#ShareIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/TransferIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgTransferIcon=function SvgTransferIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{stroke:"currentColor",strokeWidth:.9,d:"M22.827 8.031H9.62V4.054a.304.304 0 0 0-.496-.235l-7.511 6.248a.303.303 0 0 0 .192.538h21.022c.135 0 .245-.11.245-.245V8.277a.245.245 0 0 0-.245-.245ZM1.745 15.981h13.208v3.978c0 .255.297.396.496.234l7.51-6.247a.303.303 0 0 0-.192-.539H1.746a.246.246 0 0 0-.246.245v2.085c0 .135.11.244.245.244Z",clipRule:"evenodd"})}))};SvgTransferIcon.displayName="SvgTransferIcon";var _default=SvgTransferIcon;exports.default=_default;try{TransferIcon.displayName="TransferIcon",TransferIcon.__docgenInfo={description:"",displayName:"TransferIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{TransferIcon.displayName="TransferIcon",TransferIcon.__docgenInfo={description:"",displayName:"TransferIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/TransferIcon.tsx#TransferIcon"]={docgenInfo:TransferIcon.__docgenInfo,name:"TransferIcon",path:"../../packages/boi-react-native-icons/build/TransferIcon.tsx#TransferIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/UserIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");_interopRequireWildcard(__webpack_require__("../../node_modules/react/index.js"));var _reactNativeSvg=_interopRequireWildcard(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),_jsxRuntime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var SvgUserIcon=function SvgUserIcon(props){return(0,_jsxRuntime.jsx)(_reactNativeSvg.default,Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props,{children:(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.009 4.01a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm0 1a3 3 0 1 1 0 6 3 3 0 0 1 0-6Zm7 14.54a.5.5 0 1 0 1 0c0-1.95 0-6.5-8-6.5s-8 4.39-8 6.5a.5.5 0 1 0 1 0c0-2.06 0-5.5 7-5.5s7 3.44 7 5.5Z",clipRule:"evenodd"})}))};SvgUserIcon.displayName="SvgUserIcon";var _default=SvgUserIcon;exports.default=_default;try{UserIcon.displayName="UserIcon",UserIcon.__docgenInfo={description:"",displayName:"UserIcon",props:{'"width"':{defaultValue:null,description:"",name:"width",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"height"':{defaultValue:null,description:"",name:"height",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"viewBox"':{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string",raw:null,value:null}},'"preserveAspectRatio"':{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string",raw:null,value:null}},'"color"':{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"title"':{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string",raw:null,value:null}},'"opacity"':{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fill"':{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"fillOpacity"':{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fillRule"':{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"stroke"':{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"ColorValue",raw:null,value:null}},'"strokeWidth"':{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeOpacity"':{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeDasharray"':{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"NumberProp | readonly NumberProp[]",raw:null,value:null}},'"strokeDashoffset"':{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"strokeLinecap"':{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:"Linecap",raw:null,value:null}},'"strokeLinejoin"':{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:"Linejoin",raw:null,value:null}},'"strokeMiterlimit"':{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"vectorEffect"':{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:"VectorEffect",raw:null,value:null}},'"clipRule"':{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:"FillRule",raw:null,value:null}},'"clipPath"':{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string",raw:null,value:null}},'"translate"':{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"translateX"':{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"translateY"':{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"origin"':{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"originX"':{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"originY"':{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scale"':{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"scaleX"':{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"scaleY"':{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skew"':{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"skewX"':{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"skewY"':{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"rotation"':{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"x"':{defaultValue:null,description:"",name:"x",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"y"':{defaultValue:null,description:"",name:"y",required:!1,type:{name:"NumberArray",raw:null,value:null}},'"transform"':{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | ColumnMajorTransformMatrix | (PerpectiveTransform | RotateTransform | RotateXTransform | ... 9 more ... | MatrixTransform)[]",raw:null,value:null}},'"pointerEvents"':{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"none" | "box-none" | "box-only" | "auto"',raw:null,value:null}},'"onStartShouldSetResponder"':{defaultValue:null,description:"Does this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponder"':{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderEnd"':{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderGrant"':{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderReject"':{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderMove"':{defaultValue:null,description:"The user is moving their finger",name:"onResponderMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderRelease"':{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderStart"':{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onResponderTerminationRequest"':{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onResponderTerminate"':{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onStartShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"onMoveShouldSetResponderCapture"':{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"(event: GestureResponderEvent) => boolean",raw:null,value:null}},'"disabled"':{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"onPress"':{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressIn"':{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPressOut"':{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onLongPress"':{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"delayPressIn"':{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number",raw:null,value:null}},'"delayPressOut"':{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number",raw:null,value:null}},'"delayLongPress"':{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number",raw:null,value:null}},'"id"':{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string",raw:null,value:null}},'"marker"':{defaultValue:null,description:"",name:"marker",required:!1,type:{name:"string",raw:null,value:null}},'"markerStart"':{defaultValue:null,description:"",name:"markerStart",required:!1,type:{name:"string",raw:null,value:null}},'"markerMid"':{defaultValue:null,description:"",name:"markerMid",required:!1,type:{name:"string",raw:null,value:null}},'"markerEnd"':{defaultValue:null,description:"",name:"markerEnd",required:!1,type:{name:"string",raw:null,value:null}},'"mask"':{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string",raw:null,value:null}},'"onLayout"':{defaultValue:null,description:"",name:"onLayout",required:!1,type:{name:"(event: LayoutChangeEvent) => void",raw:null,value:null}},'"accessibilityLabel"':{defaultValue:null,description:"",name:"accessibilityLabel",required:!1,type:{name:"string",raw:null,value:null}},'"accessible"':{defaultValue:null,description:"",name:"accessible",required:!1,type:{name:"boolean",raw:null,value:null}},'"testID"':{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string",raw:null,value:null}},'"font"':{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject",raw:null,value:null}},'"fontStyle"':{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"FontStyle",raw:null,value:null}},'"fontVariant"':{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:"FontVariant",raw:null,value:null}},'"fontWeight"':{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"FontWeight",raw:null,value:null}},'"fontStretch"':{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:"FontStretch",raw:null,value:null}},'"fontSize"':{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFamily"':{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string",raw:null,value:null}},'"textAnchor"':{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:"TextAnchor",raw:null,value:null}},'"textDecoration"':{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"TextDecoration",raw:null,value:null}},'"letterSpacing"':{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"wordSpacing"':{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"kerning"':{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"NumberProp",raw:null,value:null}},'"fontFeatureSettings"':{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string",raw:null,value:null}},'"fontVariantLigatures"':{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:"FontVariantLigatures",raw:null,value:null}},'"fontVariationSettings"':{defaultValue:null,description:"",name:"fontVariationSettings",required:!1,type:{name:"string",raw:null,value:null}},'"hitSlop"':{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets",raw:null,value:null}},'"removeClippedSubviews"':{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean",raw:null,value:null}},'"style"':{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>",raw:null,value:null}},'"nativeID"':{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string",raw:null,value:null}},'"collapsable"':{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean",raw:null,value:null}},'"needsOffscreenAlphaCompositing"':{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean",raw:null,value:null}},'"renderToHardwareTextureAndroid"':{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean",raw:null,value:null}},'"focusable"':{defaultValue:null,description:"Whether this `View` should be focusable with a non-touch input device, eg. receive focus with a hardware keyboard.",name:"focusable",required:!1,type:{name:"boolean",raw:null,value:null}},'"shouldRasterizeIOS"':{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean",raw:null,value:null}},'"isTVSelectable"':{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform [object Object]",name:"isTVSelectable",required:!1,type:{name:"boolean",raw:null,value:null}},'"hasTVPreferredFocus"':{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform [object Object]",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean",raw:null,value:null}},'"tvParallaxProperties"':{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform [object Object]",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties",raw:null,value:null}},'"tvParallaxShiftDistanceX"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxShiftDistanceY"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform [object Object]",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxTiltAngle"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform [object Object]",name:"tvParallaxTiltAngle",required:!1,type:{name:"number",raw:null,value:null}},'"tvParallaxMagnification"':{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform [object Object]",name:"tvParallaxMagnification",required:!1,type:{name:"number",raw:null,value:null}},'"onTouchStart"':{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchMove"':{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEnd"':{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchCancel"':{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onTouchEndCapture"':{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"(event: GestureResponderEvent) => void",raw:null,value:null}},'"onPointerEnter"':{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerEnterCapture"':{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeave"':{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerLeaveCapture"':{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMove"':{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerMoveCapture"':{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancel"':{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerCancelCapture"':{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDown"':{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerDownCapture"':{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUp"':{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"onPointerUpCapture"':{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"(event: PointerEvent) => void",raw:null,value:null}},'"accessibilityActions"':{defaultValue:null,description:"Provides an array of custom actions available for accessibility.",name:"accessibilityActions",required:!1,type:{name:"readonly Readonly<{ name: string; label?: string; }>[]",raw:null,value:null}},'"aria-label"':{defaultValue:null,description:"Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\nhttps://github.com/facebook/react-native/issues/34424",name:"aria-label",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityRole"':{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:"AccessibilityRole",raw:null,value:null}},'"accessibilityState"':{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityState",required:!1,type:{name:"AccessibilityState",raw:null,value:null}},'"aria-busy"':{defaultValue:null,description:"alias for accessibilityState\n\nsee https://reactnative.dev/docs/accessibility#accessibilitystate",name:"aria-busy",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-checked"':{defaultValue:null,description:"",name:"aria-checked",required:!1,type:{name:'boolean | "mixed"',raw:null,value:null}},'"aria-disabled"':{defaultValue:null,description:"",name:"aria-disabled",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-expanded"':{defaultValue:null,description:"",name:"aria-expanded",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-selected"':{defaultValue:null,description:"",name:"aria-selected",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-labelledby"':{defaultValue:null,description:"Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.\n@platform [object Object]",name:"aria-labelledby",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityHint"':{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string",raw:null,value:null}},'"accessibilityValue"':{defaultValue:null,description:"Represents the current value of a component. It can be a textual description of a component's value, or for range-based components, such as sliders and progress bars,\nit contains range information (minimum, current, and maximum).",name:"accessibilityValue",required:!1,type:{name:"AccessibilityValue",raw:null,value:null}},'"aria-valuemax"':{defaultValue:null,description:"",name:"aria-valuemax",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuemin"':{defaultValue:null,description:"",name:"aria-valuemin",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuenow"':{defaultValue:null,description:"",name:"aria-valuenow",required:!1,type:{name:"number",raw:null,value:null}},'"aria-valuetext"':{defaultValue:null,description:"",name:"aria-valuetext",required:!1,type:{name:"string",raw:null,value:null}},'"onAccessibilityAction"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.",name:"onAccessibilityAction",required:!1,type:{name:"(event: AccessibilityActionEvent) => void",raw:null,value:null}},'"importantForAccessibility"':{defaultValue:null,description:"[Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants"',raw:null,value:null}},'"aria-hidden"':{defaultValue:null,description:"A value indicating whether the accessibility elements contained within\nthis accessibility element are hidden.",name:"aria-hidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"aria-live"':{defaultValue:null,description:"",name:"aria-live",required:!1,type:{name:'"polite" | "assertive" | "off"',raw:null,value:null}},'"aria-modal"':{defaultValue:null,description:"",name:"aria-modal",required:!1,type:{name:"boolean",raw:null,value:null}},'"role"':{defaultValue:null,description:"Indicates to accessibility services to treat UI component like a specific role.",name:"role",required:!1,type:{name:"Role",raw:null,value:null}},'"accessibilityLiveRegion"':{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform [object Object]",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive"',raw:null,value:null}},'"accessibilityLabelledBy"':{defaultValue:null,description:"A reference to another element `nativeID` used to build complex forms. The value of `accessibilityLabelledBy` should match the `nativeID` of the related element.\n@platform [object Object]",name:"accessibilityLabelledBy",required:!1,type:{name:"string | string[]",raw:null,value:null}},'"accessibilityElementsHidden"':{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform [object Object]",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityViewIsModal"':{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform [object Object]",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean",raw:null,value:null}},'"onAccessibilityEscape"':{defaultValue:null,description:"When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).\n@platform [object Object]",name:"onAccessibilityEscape",required:!1,type:{name:"() => void",raw:null,value:null}},'"onAccessibilityTap"':{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform [object Object]",name:"onAccessibilityTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"onMagicTap"':{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform [object Object]",name:"onMagicTap",required:!1,type:{name:"() => void",raw:null,value:null}},'"accessibilityIgnoresInvertColors"':{defaultValue:null,description:"https://reactnative.dev/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform [object Object]",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean",raw:null,value:null}},'"accessibilityLanguage"':{defaultValue:null,description:"By using the accessibilityLanguage property, the screen reader will understand which language to use while reading the element's label, value and hint. The provided string value must follow the BCP 47 specification (https://www.rfc-editor.org/info/bcp47).\nhttps://reactnative.dev/docs/accessibility#accessibilitylanguage-ios\n@platform [object Object]",name:"accessibilityLanguage",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{UserIcon.displayName="UserIcon",UserIcon.__docgenInfo={description:"",displayName:"UserIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../../packages/boi-react-native-icons/build/UserIcon.tsx#UserIcon"]={docgenInfo:UserIcon.__docgenInfo,name:"UserIcon",path:"../../packages/boi-react-native-icons/build/UserIcon.tsx#UserIcon"})}catch(__react_docgen_typescript_loader_error){}},"../../packages/boi-react-native-icons/build/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js");var _interopRequireDefault=__webpack_require__("../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"AddPersonIcon",{enumerable:!0,get:function get(){return _AddPersonIcon.default}}),Object.defineProperty(exports,"AppleIcon",{enumerable:!0,get:function get(){return _AppleIcon.default}}),Object.defineProperty(exports,"ApplyIcon",{enumerable:!0,get:function get(){return _ApplyIcon.default}}),Object.defineProperty(exports,"ArrowLeftIcon",{enumerable:!0,get:function get(){return _ArrowLeftIcon.default}}),Object.defineProperty(exports,"ArrowRightIcon",{enumerable:!0,get:function get(){return _ArrowRightIcon.default}}),Object.defineProperty(exports,"BillIcon",{enumerable:!0,get:function get(){return _BillIcon.default}}),Object.defineProperty(exports,"BurgerMenuIcon",{enumerable:!0,get:function get(){return _BurgerMenuIcon.default}}),Object.defineProperty(exports,"CalculatorIcon",{enumerable:!0,get:function get(){return _CalculatorIcon.default}}),Object.defineProperty(exports,"CalendarIcon",{enumerable:!0,get:function get(){return _CalendarIcon.default}}),Object.defineProperty(exports,"CheckIcon",{enumerable:!0,get:function get(){return _CheckIcon.default}}),Object.defineProperty(exports,"ChevronDownIcon",{enumerable:!0,get:function get(){return _ChevronDownIcon.default}}),Object.defineProperty(exports,"ChevronRightIcon",{enumerable:!0,get:function get(){return _ChevronRightIcon.default}}),Object.defineProperty(exports,"CloseIcon",{enumerable:!0,get:function get(){return _CloseIcon.default}}),Object.defineProperty(exports,"ContactIcon",{enumerable:!0,get:function get(){return _ContactIcon.default}}),Object.defineProperty(exports,"CurrentAccountIcon",{enumerable:!0,get:function get(){return _CurrentAccountIcon.default}}),Object.defineProperty(exports,"EditIcon",{enumerable:!0,get:function get(){return _EditIcon.default}}),Object.defineProperty(exports,"FilterIconIcon",{enumerable:!0,get:function get(){return _FilterIconIcon.default}}),Object.defineProperty(exports,"FingerprintIcon",{enumerable:!0,get:function get(){return _FingerprintIcon.default}}),Object.defineProperty(exports,"HelpIcon",{enumerable:!0,get:function get(){return _HelpIcon.default}}),Object.defineProperty(exports,"LoanIcon",{enumerable:!0,get:function get(){return _LoanIcon.default}}),Object.defineProperty(exports,"LockIcon",{enumerable:!0,get:function get(){return _LockIcon.default}}),Object.defineProperty(exports,"MessagesIcon",{enumerable:!0,get:function get(){return _MessagesIcon.default}}),Object.defineProperty(exports,"MobileIcon",{enumerable:!0,get:function get(){return _MobileIcon.default}}),Object.defineProperty(exports,"MoreIcon",{enumerable:!0,get:function get(){return _MoreIcon.default}}),Object.defineProperty(exports,"MortgagesIcon",{enumerable:!0,get:function get(){return _MortgagesIcon.default}}),Object.defineProperty(exports,"NotificationIcon",{enumerable:!0,get:function get(){return _NotificationIcon.default}}),Object.defineProperty(exports,"OrderIcon",{enumerable:!0,get:function get(){return _OrderIcon.default}}),Object.defineProperty(exports,"PercentageIcon",{enumerable:!0,get:function get(){return _PercentageIcon.default}}),Object.defineProperty(exports,"ProfileIcon",{enumerable:!0,get:function get(){return _ProfileIcon.default}}),Object.defineProperty(exports,"SalaryIcon",{enumerable:!0,get:function get(){return _SalaryIcon.default}}),Object.defineProperty(exports,"SavingAccountIcon",{enumerable:!0,get:function get(){return _SavingAccountIcon.default}}),Object.defineProperty(exports,"SearchIcon",{enumerable:!0,get:function get(){return _SearchIcon.default}}),Object.defineProperty(exports,"SendMobileIcon",{enumerable:!0,get:function get(){return _SendMobileIcon.default}}),Object.defineProperty(exports,"SendMoneyIcon",{enumerable:!0,get:function get(){return _SendMoneyIcon.default}}),Object.defineProperty(exports,"ServicesIcon",{enumerable:!0,get:function get(){return _ServicesIcon.default}}),Object.defineProperty(exports,"ShareIcon",{enumerable:!0,get:function get(){return _ShareIcon.default}}),Object.defineProperty(exports,"TransferIcon",{enumerable:!0,get:function get(){return _TransferIcon.default}}),Object.defineProperty(exports,"UserIcon",{enumerable:!0,get:function get(){return _UserIcon.default}});var _AddPersonIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/AddPersonIcon.tsx")),_AppleIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/AppleIcon.tsx")),_ApplyIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ApplyIcon.tsx")),_ArrowLeftIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ArrowLeftIcon.tsx")),_ArrowRightIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ArrowRightIcon.tsx")),_BillIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/BillIcon.tsx")),_BurgerMenuIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/BurgerMenuIcon.tsx")),_CalculatorIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/CalculatorIcon.tsx")),_CalendarIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/CalendarIcon.tsx")),_CheckIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/CheckIcon.tsx")),_ChevronDownIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ChevronDownIcon.tsx")),_ChevronRightIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ChevronRightIcon.tsx")),_CloseIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/CloseIcon.tsx")),_ContactIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ContactIcon.tsx")),_CurrentAccountIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/CurrentAccountIcon.tsx")),_EditIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/EditIcon.tsx")),_FilterIconIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/FilterIconIcon.tsx")),_FingerprintIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/FingerprintIcon.tsx")),_HelpIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/HelpIcon.tsx")),_LoanIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/LoanIcon.tsx")),_LockIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/LockIcon.tsx")),_MessagesIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/MessagesIcon.tsx")),_MobileIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/MobileIcon.tsx")),_MoreIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/MoreIcon.tsx")),_MortgagesIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/MortgagesIcon.tsx")),_NotificationIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/NotificationIcon.tsx")),_OrderIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/OrderIcon.tsx")),_PercentageIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/PercentageIcon.tsx")),_ProfileIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ProfileIcon.tsx")),_SalaryIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/SalaryIcon.tsx")),_SavingAccountIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/SavingAccountIcon.tsx")),_SearchIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/SearchIcon.tsx")),_SendMobileIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/SendMobileIcon.tsx")),_SendMoneyIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/SendMoneyIcon.tsx")),_ServicesIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ServicesIcon.tsx")),_ShareIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/ShareIcon.tsx")),_TransferIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/TransferIcon.tsx")),_UserIcon=_interopRequireDefault(__webpack_require__("../../packages/boi-react-native-icons/build/UserIcon.tsx"))},"../../packages/boi-react-native-icons/dist/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_require__("../../node_modules/core-js/modules/es.object.create.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-names.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.function.name.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.from.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.is-array.js");var __create=Object.create,__defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropNames=Object.getOwnPropertyNames,__getOwnPropSymbols=Object.getOwnPropertySymbols,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=function __defNormalProp(obj,key,value){return key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value},__spreadValues=function __spreadValues(a,b){for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols){var _step,_iterator=_createForOfIteratorHelper(__getOwnPropSymbols(b));try{for(_iterator.s();!(_step=_iterator.n()).done;){prop=_step.value;__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop])}}catch(err){_iterator.e(err)}finally{_iterator.f()}}return a},__spreadProps=function __spreadProps(a,b){return __defProps(a,__getOwnPropDescs(b))},__copyProps=function __copyProps(to,from,except,desc){if(from&&"object"==typeof from||"function"==typeof from){var _step2,_loop=function _loop(key){__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:function get(){return from[key]},enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})},_iterator2=_createForOfIteratorHelper(__getOwnPropNames(from));try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop(_step2.value)}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}return to},__toESM=function __toESM(mod,isNodeMode,target){return target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)},build_exports={};!function __export(target,all){for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})}(build_exports,{AddPersonIcon:function AddPersonIcon(){return AddPersonIcon_default},AppleIcon:function AppleIcon(){return AppleIcon_default},ApplyIcon:function ApplyIcon(){return ApplyIcon_default},ArrowLeftIcon:function ArrowLeftIcon(){return ArrowLeftIcon_default},ArrowRightIcon:function ArrowRightIcon(){return ArrowRightIcon_default},BillIcon:function BillIcon(){return BillIcon_default},BurgerMenuIcon:function BurgerMenuIcon(){return BurgerMenuIcon_default},CalculatorIcon:function CalculatorIcon(){return CalculatorIcon_default},CalendarIcon:function CalendarIcon(){return CalendarIcon_default},CheckIcon:function CheckIcon(){return CheckIcon_default},ChevronDownIcon:function ChevronDownIcon(){return ChevronDownIcon_default},ChevronRightIcon:function ChevronRightIcon(){return ChevronRightIcon_default},CloseIcon:function CloseIcon(){return CloseIcon_default},ContactIcon:function ContactIcon(){return ContactIcon_default},CurrentAccountIcon:function CurrentAccountIcon(){return CurrentAccountIcon_default},EditIcon:function EditIcon(){return EditIcon_default},FilterIconIcon:function FilterIconIcon(){return FilterIconIcon_default},FingerprintIcon:function FingerprintIcon(){return FingerprintIcon_default},HelpIcon:function HelpIcon(){return HelpIcon_default},LoanIcon:function LoanIcon(){return LoanIcon_default},LockIcon:function LockIcon(){return LockIcon_default},MessagesIcon:function MessagesIcon(){return MessagesIcon_default},MobileIcon:function MobileIcon(){return MobileIcon_default},MoreIcon:function MoreIcon(){return MoreIcon_default},MortgagesIcon:function MortgagesIcon(){return MortgagesIcon_default},NotificationIcon:function NotificationIcon(){return NotificationIcon_default},OrderIcon:function OrderIcon(){return OrderIcon_default},PercentageIcon:function PercentageIcon(){return PercentageIcon_default},ProfileIcon:function ProfileIcon(){return ProfileIcon_default},SalaryIcon:function SalaryIcon(){return SalaryIcon_default},SavingAccountIcon:function SavingAccountIcon(){return SavingAccountIcon_default},SearchIcon:function SearchIcon(){return SearchIcon_default},SendMobileIcon:function SendMobileIcon(){return SendMobileIcon_default},SendMoneyIcon:function SendMoneyIcon(){return SendMoneyIcon_default},ServicesIcon:function ServicesIcon(){return ServicesIcon_default},ShareIcon:function ShareIcon(){return ShareIcon_default},TransferIcon:function TransferIcon(){return TransferIcon_default},UserIcon:function UserIcon(){return UserIcon_default}}),module.exports=function __toCommonJS(mod){return __copyProps(__defProp({},"__esModule",{value:!0}),mod)}(build_exports);var import_react_native_svg=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),AddPersonIcon_default=function SvgAddPersonIcon(props){return(0,import_jsx_runtime.jsx)(import_react_native_svg.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 26 24"},props),{children:(0,import_jsx_runtime.jsx)(import_react_native_svg.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.292 3.98c-2.394 0-4.334 1.79-4.334 4s1.94 4 4.334 4c2.393 0 4.333-1.79 4.333-4s-1.94-4-4.333-4Zm0 1c1.795 0 3.25 1.343 3.25 3s-1.455 3-3.25 3-3.25-1.343-3.25-3 1.455-3 3.25-3Zm7.041 14.54c0 .276.243.5.542.5.297-.005.536-.226.542-.5 0-1.95 0-6.5-8.125-6.5s-8.125 4.39-8.125 6.5c0 .276.242.5.541.5.297-.005.536-.226.542-.5 0-2.19 0-5.5 7.042-5.5 7.041 0 7.041 3.44 7.041 5.5Zm2.167-8.54h-2.708c-.3 0-.542-.224-.542-.5s.242-.5.542-.5H19.5v-2.5c0-.276.242-.5.542-.5.299 0 .541.224.541.5v2.5h2.709c.299 0 .541.224.541.5-.005.274-.245.495-.541.5h-2.709v2.5c-.005.274-.245.495-.541.5-.3 0-.542-.224-.542-.5v-2.5Z",clipRule:"evenodd"})}))},import_react_native_svg2=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime2=__webpack_require__("../../node_modules/react/jsx-runtime.js"),AppleIcon_default=function SvgAppleIcon(props){return(0,import_jsx_runtime2.jsxs)(import_react_native_svg2.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime2.jsx)(import_react_native_svg2.Path,{fill:"currentColor",d:"m12.45 7-.348.36.376.362.346-.39L12.449 7Zm-8.626.326.42.273-.42-.273ZM8.949 21.5l-.112.487a.5.5 0 0 0 .112.013v-.5Zm3-1-.277-.416.277.416Zm4 1 .121.485-.12-.485Zm5-14.174.42-.27-.42.27Zm-8.153-.686c-.95-.914-2.719-1.648-4.501-1.76-1.796-.112-3.742.405-4.89 2.174l.838.545c.883-1.36 2.404-1.82 3.99-1.72 1.598.1 3.126.766 3.87 1.481l.693-.72Zm-9.392.414c-.465.717-.758 1.917-.861 3.269a16.037 16.037 0 0 0 .322 4.55c.684 3.126 2.441 6.3 5.972 7.114l.225-.974c-2.97-.686-4.569-3.377-5.22-6.353a15.038 15.038 0 0 1-.302-4.26c.1-1.301.376-2.297.703-2.801l-.839-.545ZM8.95 22c.851 0 1.675-.28 2.266-.543a8.158 8.158 0 0 0 .988-.526l.016-.01.005-.003.002-.001-.277-.417-.277-.416h-.001l-.01.007a7.121 7.121 0 0 1-.852.452c-.535.238-1.21.457-1.86.457v1Zm3.278-1.084c.23-.153.393-.22.514-.23.085-.007.195.008.355.168l.707-.708c-.34-.34-.73-.491-1.145-.457-.38.032-.716.215-.986.395l.555.832Zm.869-.063c.29.29.745.628 1.252.868.495.234 1.123.414 1.722.264l-.242-.97c-.269.067-.64-.003-1.053-.198a3.698 3.698 0 0 1-.972-.67l-.707.707Zm2.974 1.132c1.135-.284 2.218-1.082 3.146-2.135.933-1.06 1.744-2.415 2.325-3.88 1.153-2.902 1.458-6.387-.172-8.915l-.84.542c1.376 2.135 1.182 5.236.083 8.005-.544 1.37-1.298 2.623-2.146 3.587-.855.97-1.773 1.61-2.638 1.826l.242.97Zm5.3-14.93c-.854-1.323-2.512-2.168-4.252-2.322-1.754-.156-3.67.384-5.043 1.936l.749.662c1.127-1.274 2.71-1.735 4.206-1.602 1.51.134 2.852.865 3.499 1.868l.84-.542Z"}),(0,import_jsx_runtime2.jsx)(import_react_native_svg2.Path,{stroke:"currentColor",strokeLinecap:"round",d:"M16 8c1.167.167 3.4 1.1 3 3.5M12.45 7c-.167-.833-.1-2.8 1.5-4"})]}))},import_react_native_svg3=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime3=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ApplyIcon_default=function SvgApplyIcon(props){return(0,import_jsx_runtime3.jsxs)(import_react_native_svg3.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime3.jsx)(import_react_native_svg3.G,{clipPath:"url(#apply_icon_svg__a)",children:(0,import_jsx_runtime3.jsx)(import_react_native_svg3.Path,{fill:"currentColor",fillRule:"evenodd",d:"M22 7.5a4.5 4.5 0 1 0-9 0 4.5 4.5 0 0 0 9 0Zm-8 0a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0Zm-10.5-2h1A1.5 1.5 0 0 1 6 7h2a4.38 4.38 0 0 1 2.3 1.1l5.7 4.53c.438.325.712.826.75 1.37a1.92 1.92 0 0 1-.198 1H19c.82 0 3 0 3 2s-2.18 2-3 2h-9a.54.54 0 0 1-.28-.08l-4.213-2.809c-.266.242-.62.389-1.007.389h-1A1.5 1.5 0 0 1 2 15V7a1.5 1.5 0 0 1 1.5-1.5Zm2.484 9.717L10.15 18H19c1.46 0 2-.27 2-1s-.54-1-2-1h-3.5a.501.501 0 0 1-.126-.016 2 2 0 0 1-.534.086 1.93 1.93 0 0 1-1.1-.34L10.86 14H9a.5.5 0 0 1 0-1h2a.48.48 0 0 1 .26.07l3 1.82a.94.94 0 0 0 1.21-.09.9.9 0 0 0 .27-.71.93.93 0 0 0-.37-.67l-5.7-4.53A4.11 4.11 0 0 0 8 8H6v7c0 .074-.005.146-.016.217ZM5 7v8a.5.5 0 0 1-.5.5h-1A.5.5 0 0 1 3 15V7a.5.5 0 0 1 .5-.5h1A.5.5 0 0 1 5 7Zm15.5.5a3 3 0 0 0-3-3 .5.5 0 0 0 0 1 2 2 0 0 1 2 2 .5.5 0 0 0 1 0Z",clipRule:"evenodd"})}),(0,import_jsx_runtime3.jsx)(import_react_native_svg3.Defs,{children:(0,import_jsx_runtime3.jsx)(import_react_native_svg3.ClipPath,{id:"apply_icon_svg__a",children:(0,import_jsx_runtime3.jsx)(import_react_native_svg3.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))},import_react_native_svg4=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime4=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ArrowLeftIcon_default=function SvgArrowLeftIcon(props){return(0,import_jsx_runtime4.jsx)(import_react_native_svg4.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime4.jsx)(import_react_native_svg4.Path,{fill:"currentColor",fillRule:"evenodd",d:"M11.96 19.804a.52.52 0 0 1-.38.17.48.48 0 0 1-.33-.08l-9.08-8a.5.5 0 0 1-.073-.67.503.503 0 0 1 .202-.194l8.951-7.886a.51.51 0 0 1 .71 0 .49.49 0 0 1-.05.7l-8.083 7.13H21.53a.5.5 0 1 1 0 1H3.828l8.082 7.12a.51.51 0 0 1 .05.71Z",clipRule:"evenodd"})}))},import_react_native_svg5=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime5=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ArrowRightIcon_default=function SvgArrowRightIcon(props){return(0,import_jsx_runtime5.jsx)(import_react_native_svg5.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime5.jsx)(import_react_native_svg5.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.07 19.804a.52.52 0 0 0 .38.17.48.48 0 0 0 .33-.08l9.08-8a.5.5 0 0 0 .073-.67.503.503 0 0 0-.202-.194L12.78 3.144a.51.51 0 0 0-.71 0 .49.49 0 0 0 .05.7l8.083 7.13H2.5a.5.5 0 0 0 0 1h17.702l-8.082 7.12a.51.51 0 0 0-.05.71Z",clipRule:"evenodd"})}))},import_react_native_svg6=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime6=__webpack_require__("../../node_modules/react/jsx-runtime.js"),BillIcon_default=function SvgBillIcon(props){return(0,import_jsx_runtime6.jsx)(import_react_native_svg6.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 26 24"},props),{children:(0,import_jsx_runtime6.jsx)(import_react_native_svg6.Path,{fill:"currentColor",fillRule:"evenodd",d:"M3.792 21H2.708c-.299 0-.541-.224-.541-.5s.242-.5.541-.5h.542V4.5c0-.828.728-1.5 1.625-1.5h9.75c.898 0 1.625.672 1.625 1.5V20h.542c.299 0 .541.224.541.5s-.242.5-.541.5h-13Zm11.375-1V4.5c0-.276-.243-.5-.542-.5h-9.75c-.3 0-.542.224-.542.5V20h10.834ZM8.125 7H6.5c-.3 0-.542-.224-.542-.5S6.201 6 6.5 6h1.625c.3 0 .542.224.542.5s-.243.5-.542.5Zm0 3H6.5c-.3 0-.542-.224-.542-.5S6.201 9 6.5 9h1.625c.3 0 .542.224.542.5s-.243.5-.542.5Zm0 3H6.5c-.3 0-.542-.224-.542-.5s.243-.5.542-.5h1.625c.3 0 .542.224.542.5s-.243.5-.542.5Zm4.333 6c-.299 0-.541-.224-.541-.5v-1.13c0-1.2-.13-1.37-.618-1.37H8.201c-.488 0-.618.17-.618 1.37v1.13c0 .276-.242.5-.541.5-.3 0-.542-.224-.542-.5v-1.13c0-.88 0-2.37 1.7-2.37h3.1c1.7 0 1.7 1.49 1.7 2.37v1.13c0 .276-.242.5-.542.5Zm-1.083-6H13c.3 0 .542-.224.542-.5S13.299 12 13 12h-1.625c-.3 0-.542.224-.542.5s.243.5.542.5Zm0-3H13c.3 0 .542-.224.542-.5S13.299 9 13 9h-1.625c-.3 0-.542.224-.542.5s.243.5.542.5Zm0-3H13c.3 0 .542-.224.542-.5S13.299 6 13 6h-1.625c-.3 0-.542.224-.542.5s.243.5.542.5Zm8.667 5h-2.167c-.3 0-.542-.224-.542-.5s.243-.5.542-.5h2.167V9c0-.276.242-.5.541-.5.3 0 .542.224.542.5v2h2.167c.299 0 .541.224.541.5s-.242.5-.541.5h-2.167v2c0 .276-.242.5-.542.5-.299 0-.541-.224-.541-.5v-2Z",clipRule:"evenodd"})}))},import_react_native_svg7=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime7=__webpack_require__("../../node_modules/react/jsx-runtime.js"),BurgerMenuIcon_default=function SvgBurgerMenuIcon(props){return(0,import_jsx_runtime7.jsx)(import_react_native_svg7.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime7.jsx)(import_react_native_svg7.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2.5 7.09h16.76a.5.5 0 0 0 0-1H2.5a.5.5 0 1 0 0 1Zm19 6H4.74a.5.5 0 1 1 0-1H21.5a.5.5 0 0 1 0 1Zm-2.24 6H2.5a.5.5 0 1 1 0-1h16.76a.5.5 0 0 1 0 1Z",clipRule:"evenodd"})}))},import_react_native_svg8=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime8=__webpack_require__("../../node_modules/react/jsx-runtime.js"),CalculatorIcon_default=function SvgCalculatorIcon(props){return(0,import_jsx_runtime8.jsx)(import_react_native_svg8.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime8.jsx)(import_react_native_svg8.Path,{fill:"currentColor",fillRule:"evenodd",d:"M7 2h10a3 3 0 0 1 3 3v14a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V5a3 3 0 0 1 3-3Zm12 3a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5ZM8 4h8a2 2 0 1 1 0 4H8a2 2 0 1 1 0-4Zm9 2a1 1 0 0 0-1-1H8a1 1 0 0 0 0 2h8a1 1 0 0 0 1-1Zm-3.5 10.38h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0-.5.5.51.51 0 0 0 .5.5Zm3 2h-3a.51.51 0 0 1-.5-.5.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1ZM8.5 13a.51.51 0 0 0 .5.5.5.5 0 0 0 .5-.5v-1h1a.5.5 0 0 0 0-1h-1v-1a.5.5 0 0 0-1 0v1h-1a.5.5 0 0 0-.5.5.51.51 0 0 0 .5.5h1v1Zm5-1h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0-.5.5.51.51 0 0 0 .5.5Zm-5.88 6.93a.5.5 0 0 1-.35-.85l1.15-1.15-1.15-1.15a.5.5 0 0 1 .355-.848.5.5 0 0 1 .355.148l1.145 1.145 1.145-1.145a.5.5 0 0 1 .71 0 .5.5 0 0 1 0 .7l-1.15 1.15 1.15 1.15a.5.5 0 0 1-.36.85.5.5 0 0 1-.35-.15l-1.145-1.145L7.98 18.78a.51.51 0 0 1-.36.15Z",clipRule:"evenodd"})}))},import_react_native_svg9=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime9=__webpack_require__("../../node_modules/react/jsx-runtime.js"),CalendarIcon_default=function SvgCalendarIcon(props){return(0,import_jsx_runtime9.jsx)(import_react_native_svg9.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props),{children:(0,import_jsx_runtime9.jsx)(import_react_native_svg9.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.667 4.333a.333.333 0 0 0 .666 0V3.36l2.334.007A.34.34 0 0 1 14 3.7V6H2V3.667c0-.184.15-.334.333-.334l2.334.007v.913a.333.333 0 1 0 .666 0v-.91l5.334.015v.975ZM2 6.667h12v7c0 .184-.15.333-.333.333H2.333A.333.333 0 0 1 2 13.667v-7Zm-.667 7V3.7a1 1 0 0 1 1-1h2.334v-.947a.333.333 0 1 1 .666 0V2.7h5.334V1.667c0-.184.149-.334.333-.334a.34.34 0 0 1 .333.334V2.7h2.334c.55.004.996.45 1 1v10a1 1 0 0 1-1 .967H2.333a1 1 0 0 1-1-1Zm2.334-5h1.666c.184 0 .334-.15.334-.334A.34.34 0 0 0 5.333 8H3.667a.333.333 0 1 0 0 .667Zm5.22 0h-1.78a.333.333 0 0 1-.334-.334A.34.34 0 0 1 7.107 8h1.78a.333.333 0 0 1 0 .667Zm1.78 0h1.666c.184 0 .334-.15.334-.334A.34.34 0 0 0 12.333 8h-1.666a.333.333 0 0 0 0 .667Zm-5.334 2H3.667a.333.333 0 1 1 0-.667h1.666a.34.34 0 0 1 .334.333c0 .184-.15.334-.334.334Zm1.774 0h1.78a.333.333 0 1 0 0-.667h-1.78a.34.34 0 0 0-.334.333c0 .184.15.334.334.334Zm5.226 0h-1.666a.333.333 0 0 1 0-.667h1.666a.34.34 0 0 1 .334.333c0 .184-.15.334-.334.334Zm-8.666 2h1.666c.184 0 .334-.15.334-.334A.34.34 0 0 0 5.333 12H3.667a.333.333 0 1 0 0 .667Zm5.22 0h-1.78a.333.333 0 0 1-.334-.334.34.34 0 0 1 .334-.333h1.78a.333.333 0 1 1 0 .667Zm1.78 0h1.666c.184 0 .334-.15.334-.334a.34.34 0 0 0-.334-.333h-1.666a.333.333 0 0 0 0 .667Z",clipRule:"evenodd"})}))},import_react_native_svg10=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime10=__webpack_require__("../../node_modules/react/jsx-runtime.js"),CheckIcon_default=function SvgCheckIcon(props){return(0,import_jsx_runtime10.jsx)(import_react_native_svg10.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props),{children:(0,import_jsx_runtime10.jsx)(import_react_native_svg10.Path,{fill:"currentColor",d:"M14.1 1.89a1.085 1.085 0 0 1 1.5-.162c.409.319.513.872.273 1.306l-.107.156L6.488 14.5.312 8.477a1.022 1.022 0 0 1 0-1.471c.37-.361.945-.401 1.361-.12l.148.12 4.49 4.378L14.1 1.89Z"})}))},import_react_native_svg11=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime11=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ChevronDownIcon_default=function SvgChevronDownIcon(props){return(0,import_jsx_runtime11.jsx)(import_react_native_svg11.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props),{children:(0,import_jsx_runtime11.jsx)(import_react_native_svg11.Path,{fill:"currentColor",d:"M8.063 10.566a.282.282 0 0 1-.411 0l-4.16-4.16a.282.282 0 0 1 0-.411l.446-.447a.282.282 0 0 1 .41 0l3.51 3.51 3.508-3.51a.282.282 0 0 1 .41 0l.447.447a.282.282 0 0 1 0 .41l-4.16 4.161Z"})}))},import_react_native_svg12=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime12=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ChevronRightIcon_default=function SvgChevronRightIcon(props){return(0,import_jsx_runtime12.jsx)(import_react_native_svg12.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props),{children:(0,import_jsx_runtime12.jsx)(import_react_native_svg12.Path,{fill:"currentColor",d:"M10.366 7.852a.282.282 0 0 1 0 .41l-4.16 4.161a.282.282 0 0 1-.411 0l-.447-.446a.282.282 0 0 1 0-.41l3.51-3.51-3.51-3.509a.282.282 0 0 1 0-.41l.447-.447a.282.282 0 0 1 .41 0l4.161 4.16Z"})}))},import_react_native_svg13=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime13=__webpack_require__("../../node_modules/react/jsx-runtime.js"),CloseIcon_default=function SvgCloseIcon(props){return(0,import_jsx_runtime13.jsx)(import_react_native_svg13.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime13.jsx)(import_react_native_svg13.Path,{fill:"currentColor",fillRule:"evenodd",d:"M3.15 20.85a.47.47 0 0 0 .35.15.47.47 0 0 0 .35-.15L12 12.7l8.15 8.15a.47.47 0 0 0 .35.15.47.47 0 0 0 .35-.15.48.48 0 0 0 0-.7L12.71 12l8.14-8.15a.495.495 0 1 0-.7-.7L12 11.3 3.85 3.15a.495.495 0 1 0-.7.7L11.29 12l-8.14 8.15a.48.48 0 0 0 0 .7Z",clipRule:"evenodd"})}))},import_react_native_svg14=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime14=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ContactIcon_default=function SvgContactIcon(props){return(0,import_jsx_runtime14.jsx)(import_react_native_svg14.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime14.jsx)(import_react_native_svg14.Path,{fill:"currentColor",fillRule:"evenodd",d:"M21.42 13a.5.5 0 0 1-.49-.51 9.46 9.46 0 0 0-9.41-9.41.49.49 0 0 1-.51-.49c0-.274.216-.5.49-.51 5.749.027 10.403 4.681 10.43 10.43a.51.51 0 0 1-.51.49ZM4.83 4.54a1.8 1.8 0 0 1 1.28-.53V4a1.8 1.8 0 0 1 1.27.53l2.56 2.55a1.82 1.82 0 0 1 0 2.56l-1.5 1.5c.66.77 1.38 1.56 2.14 2.33.76.77 1.56 1.48 2.33 2.14l1.5-1.5a1.81 1.81 0 0 1 2.56 0l2.55 2.56a1.79 1.79 0 0 1 0 2.55l-.64.64-1.28 1.28-.33.33A1.79 1.79 0 0 1 16 22h-.22c-1.53-.2-4.82-1.09-8.72-5-3.9-3.91-4.8-7.18-5-8.72a1.83 1.83 0 0 1 .52-1.5l.33-.32 1.28-1.28.64-.64Zm1.8.7A.8.8 0 0 0 6.06 5l.05.01a.76.76 0 0 0-.57.24l-.64.64-1.28 1.27-.33.33a.8.8 0 0 0-.23.67c.18 1.46 1.04 4.47 4.71 8.13 3.67 3.66 6.67 4.53 8.14 4.71H16a.84.84 0 0 0 .52-.24l.33-.33 1.27-1.28.64-.64a.76.76 0 0 0 .24-.57.8.8 0 0 0-.24-.57l-2.55-2.55a.82.82 0 0 0-.57-.24.8.8 0 0 0-.57.24l-1.5 1.49a1 1 0 0 1-.71.3 1 1 0 0 1-.64-.24c-.87-.73-1.68-1.47-2.4-2.19s-1.46-1.53-2.19-2.4a1 1 0 0 1 .06-1.35l1.49-1.5a.8.8 0 0 0 .24-.57.82.82 0 0 0-.24-.57L6.63 5.24Zm11.522 7.6a.5.5 0 0 0 .348.16.5.5 0 0 0 .5-.48 8 8 0 0 0-2.14-5.37A7.72 7.72 0 0 0 11.48 5a.5.5 0 0 0-.48.52.48.48 0 0 0 .52.48 6.8 6.8 0 0 1 4.64 1.85 7 7 0 0 1 1.86 4.63.5.5 0 0 0 .132.36Z",clipRule:"evenodd"})}))},import_react_native_svg15=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime15=__webpack_require__("../../node_modules/react/jsx-runtime.js"),CurrentAccountIcon_default=function SvgCurrentAccountIcon(props){return(0,import_jsx_runtime15.jsx)(import_react_native_svg15.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime15.jsx)(import_react_native_svg15.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2 4.5C2 6.22 5.89 7 9.5 7S17 6.22 17 4.5 13.11 2 9.5 2 2 2.78 2 4.5Zm1 0C3 4.05 5.21 3 9.5 3S16 4 16 4.5 13.79 6 9.5 6 3 4.95 3 4.5Zm5.676 13.505a6.95 6.95 0 0 1-.606-2.015 21.49 21.49 0 0 1-3.88-.48C2.7 15.14 2 14.67 2 14a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56 1.182.25 2.383.395 3.59.431a7 7 0 0 1 .293-2.002A23.416 23.416 0 0 1 4.18 12.5C2.7 12.14 2 11.67 2 11a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56 1.404.286 2.831.433 4.263.44a7.018 7.018 0 0 1 1.429-2H9.5a24 24 0 0 1-5.32-.51C2.7 9.14 2 8.67 2 8a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56a25.78 25.78 0 0 0 7.005.426 7 7 0 1 1-2.158 10.017 24.083 24.083 0 0 1-5.077-.513C2.7 18.14 2 17.67 2 17a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5c0 .06.33.31 1.41.56 1.406.28 2.834.429 4.266.445ZM15 21a6 6 0 0 1-5.974-5.437.506.506 0 0 0-.015-.2 5.983 5.983 0 0 1 2.723-5.396.5.5 0 0 0 .331-.202 5.973 5.973 0 0 1 3.907-.686A6 6 0 0 1 15 21Zm3.5-6a.5.5 0 0 0 1 0 4.51 4.51 0 0 0-4.5-4.5.5.5 0 0 0 0 1 3.5 3.5 0 0 1 3.5 3.5Z",clipRule:"evenodd"})}))},import_react_native_svg16=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime16=__webpack_require__("../../node_modules/react/jsx-runtime.js"),EditIcon_default=function SvgEditIcon(props){return(0,import_jsx_runtime16.jsx)(import_react_native_svg16.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime16.jsx)(import_react_native_svg16.Path,{fill:"currentColor",fillRule:"evenodd",d:"m20.15 4.7-.85-.85a3 3 0 0 0-4.1 0L3.31 15.74a.53.53 0 0 0-.15.33L3 20.48a.5.5 0 0 0 .15.37.47.47 0 0 0 .35.15l4.41-.16a.53.53 0 0 0 .33-.15L20.15 8.8a2.9 2.9 0 0 0 0-4.1ZM7.69 19.84 4 20l.14-3.67 9.69-9.7 3.54 3.54-9.68 9.67ZM18.1 9.44l1.34-1.34a1.91 1.91 0 0 0 0-2.69l-.85-.85a2 2 0 0 0-2.69 0L14.56 5.9l3.54 3.54Z",clipRule:"evenodd"})}))},import_react_native_svg17=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime17=__webpack_require__("../../node_modules/react/jsx-runtime.js"),FilterIconIcon_default=function SvgFilterIconIcon(props){return(0,import_jsx_runtime17.jsx)(import_react_native_svg17.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime17.jsx)(import_react_native_svg17.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.05 6H4.5a.5.5 0 0 0 0 1h5.55a2.5 2.5 0 0 0 4.9 0h4.55a.5.5 0 0 0 0-1h-4.55a2.5 2.5 0 0 0-4.9 0Zm.95.5a1.5 1.5 0 1 0 3 0 1.5 1.5 0 0 0-3 0ZM4.5 12h2.55a2.5 2.5 0 0 1 4.9 0h7.55a.5.5 0 0 1 0 1h-7.55a2.5 2.5 0 0 1-4.9 0H4.5a.5.5 0 0 1 0-1Zm6.5.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0ZM4.5 18h8.55a2.5 2.5 0 0 1 4.9 0h1.55a.5.5 0 0 1 0 1h-1.55a2.5 2.5 0 0 1-4.9 0H4.5a.5.5 0 0 1 0-1Zm11 2a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3Z",clipRule:"evenodd"})}))},import_react_native_svg18=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime18=__webpack_require__("../../node_modules/react/jsx-runtime.js"),FingerprintIcon_default=function SvgFingerprintIcon(props){return(0,import_jsx_runtime18.jsx)(import_react_native_svg18.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime18.jsx)(import_react_native_svg18.Path,{fill:"currentColor",fillRule:"evenodd",d:"M11.646 1.003c-3.43.061-5.65 1.636-5.65 1.636-.282.186-.353.608-.161.896.202.32.595.37.898.155 0 0 4.348-3.285 10.594.04a.623.623 0 0 0 .857-.236c.192-.309.06-.7-.282-.896-1.685-.906-3.28-1.359-4.712-1.523a11.362 11.362 0 0 0-1.544-.072Zm.427 2.819c-6.067-.088-8.968 5.157-8.968 5.157a.715.715 0 0 0 .173.942c.296.208.693.098.937-.252 0 0 2.463-4.577 7.838-4.479 5.395.077 7.756 4.446 7.756 4.446.183.317.57.427.876.24.325-.196.397-.612.224-.952 0 0-2.8-5.015-8.836-5.102ZM7.056 8.479c1.222-1.054 2.848-1.69 4.545-1.816a8.214 8.214 0 0 1 5.051 1.273c1.586 1.033 2.707 2.682 3.313 4.351.596 1.66.728 3.38-.06 4.601-.758 1.2-2.182 1.607-3.414 1.284-1.233-.324-2.314-1.482-2.364-3.193 0-1.137-.758-1.68-1.637-1.784-.889-.084-1.737.26-1.98 1.262-.555 2.233.91 6.02 4.779 7.262.353.104.525.48.424.824a.64.64 0 0 1-.798.428c-4.465-1.44-6.395-5.77-5.627-8.816.404-1.67 1.97-2.42 3.324-2.254 1.404.167 2.757 1.273 2.788 3.057.03 1.19.646 1.753 1.404 1.951.757.199 1.616-.052 2.04-.73.414-.647.445-2.024-.07-3.443-.506-1.42-1.506-2.859-2.789-3.694-2.616-1.67-6.131-1.262-8.121.418-2.04 1.773-3.425 4.83-1.869 9.494a.65.65 0 0 1-.384.825.63.63 0 0 1-.808-.407C3.116 14.3 4.652 10.534 7.056 8.479Zm4.677.422v.01c-1.817.065-3.634 1.06-4.676 3.158-1.347 2.693-.735 5.44.164 7.418.908 1.99 2.144 3.309 2.144 3.309.245.27.643.27.898.01.255-.259.255-.659.01-.95 0 0-1.092-1.19-1.899-2.953-.806-1.762-1.296-3.99-.194-6.196 1.144-2.27 3.186-2.822 4.982-2.27 1.818.562 3.339 2.238 3.308 4.714-.04.378.215.703.572.724.347.033.653-.248.684-.692.061-3.092-1.899-5.33-4.206-6.044a5.571 5.571 0 0 0-1.787-.238Zm-.006 6.29a.63.63 0 0 1 .605-.652c.357 0 .635.285.635.641 0 0 .02 1.213.664 2.334.645 1.131 1.785 2.18 4.482 1.926.387-.03.684.234.704.59a.626.626 0 0 1-.585.673c-3.074.296-4.839-1.09-5.672-2.547-.803-1.457-.833-2.965-.833-2.965Z",clipRule:"evenodd"})}))},import_react_native_svg19=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime19=__webpack_require__("../../node_modules/react/jsx-runtime.js"),HelpIcon_default=function SvgHelpIcon(props){return(0,import_jsx_runtime19.jsxs)(import_react_native_svg19.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime19.jsx)(import_react_native_svg19.G,{clipPath:"url(#help_icon_svg__a)",children:(0,import_jsx_runtime19.jsx)(import_react_native_svg19.Path,{fill:"currentColor",fillRule:"evenodd",d:"M21.5 22a.432.432 0 0 1-.19 0l-3.86-1.58a10 10 0 1 1 3-3.1l1.48 4a.5.5 0 0 1-.12.53.52.52 0 0 1-.31.15ZM12 3a9 9 0 0 0-8.87 10.53 9 9 0 0 0 14 5.87.52.52 0 0 1 .47-.05l3.06 1.26-1.17-3.22a.48.48 0 0 1 0-.45A9 9 0 0 0 12.82 3 7.497 7.497 0 0 0 12 3Zm0 11.5a.5.5 0 0 1-.5-.5v-1.2c0-.837.685-1.366 1.343-1.874l.007-.006A3.15 3.15 0 0 0 14.5 8.4c0-1.21-.91-1.9-2.5-1.9-1.59 0-2.5.69-2.5 1.9a.5.5 0 1 1-1 0c0-1.4.92-2.9 3.5-2.9s3.5 1.5 3.5 2.9a4.08 4.08 0 0 1-2 3.31l-.155.12v.001c-.45.349-.845.655-.845.969V14a.5.5 0 0 1-.5.5ZM10.5 17a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Zm2 0a.5.5 0 1 0-1 0 .5.5 0 0 0 1 0Z",clipRule:"evenodd"})}),(0,import_jsx_runtime19.jsx)(import_react_native_svg19.Defs,{children:(0,import_jsx_runtime19.jsx)(import_react_native_svg19.ClipPath,{id:"help_icon_svg__a",children:(0,import_jsx_runtime19.jsx)(import_react_native_svg19.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))},import_react_native_svg20=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime20=__webpack_require__("../../node_modules/react/jsx-runtime.js"),LoanIcon_default=function SvgLoanIcon(props){return(0,import_jsx_runtime20.jsx)(import_react_native_svg20.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime20.jsx)(import_react_native_svg20.Path,{fill:"currentColor",fillRule:"evenodd",d:"M14.194 8.67A4 4 0 0 0 17.83 11a3.79 3.79 0 0 0 3.08-1.61.502.502 0 1 0-.82-.58A2.75 2.75 0 0 1 17.83 10a2.997 2.997 0 0 1-2.493-1.33h2.833a.51.51 0 0 0 .5-.5.5.5 0 0 0-.5-.5h-3.265a3.012 3.012 0 0 1-.074-.75h3.339a.51.51 0 0 0 .5-.5.5.5 0 0 0-.5-.5h-3.14A3.001 3.001 0 0 1 17.83 4a2.75 2.75 0 0 1 2.26 1.19.502.502 0 0 0 .82-.58A3.79 3.79 0 0 0 17.83 3a4.002 4.002 0 0 0-3.852 2.92H13.5a.5.5 0 0 0 0 1h.33V7c0 .228.02.452.056.67H13.5a.5.5 0 0 0 0 1h.694ZM4.5 5.5h-1A1.5 1.5 0 0 0 2 7v8a1.5 1.5 0 0 0 1.5 1.5h1c.388 0 .741-.147 1.007-.389L9.72 18.92A.54.54 0 0 0 10 19h9c.82 0 3 0 3-2s-2.18-2-3-2h-2.448a1.92 1.92 0 0 0 .198-1 1.87 1.87 0 0 0-.75-1.37L10.3 8.1A4.38 4.38 0 0 0 8 7H6a1.5 1.5 0 0 0-1.5-1.5ZM10.15 18l-4.166-2.783c.01-.071.016-.143.016-.217V8h2a4.11 4.11 0 0 1 1.67.89l5.7 4.53a.93.93 0 0 1 .37.67.9.9 0 0 1-.27.71.94.94 0 0 1-1.21.09l-3-1.82A.48.48 0 0 0 11 13H9a.5.5 0 0 0 0 1h1.86l2.88 1.73a1.93 1.93 0 0 0 1.1.34 2 2 0 0 0 .534-.086c.04.01.082.016.126.016H19c1.46 0 2 .27 2 1s-.54 1-2 1h-8.85ZM5 7.5V7a.5.5 0 0 0-.5-.5h-1A.5.5 0 0 0 3 7v8a.5.5 0 0 0 .5.5h1A.5.5 0 0 0 5 15V7.5Z",clipRule:"evenodd"})}))},import_react_native_svg21=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime21=__webpack_require__("../../node_modules/react/jsx-runtime.js"),LockIcon_default=function SvgLockIcon(props){return(0,import_jsx_runtime21.jsx)(import_react_native_svg21.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime21.jsx)(import_react_native_svg21.Path,{fill:"currentColor",fillRule:"evenodd",d:"M16.5 11h-11a.5.5 0 0 0-.5.5v9a.51.51 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-2ZM7 10V7a5 5 0 0 1 10 0v3h1.5a1.5 1.5 0 0 1 1.5 1.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 4 20.5v-9A1.5 1.5 0 0 1 5.5 10H7Zm1 0h8V7a4 4 0 0 0-8 0v3Zm5.5 4.5a1.5 1.5 0 0 1-1 1.415V18.5a.5.5 0 0 1-1 0v-2.585a1.5 1.5 0 1 1 2-1.415Zm-2 0a.51.51 0 0 0 .5.5.5.5 0 1 0-.5-.5Z",clipRule:"evenodd"})}))},import_react_native_svg22=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime22=__webpack_require__("../../node_modules/react/jsx-runtime.js"),MessagesIcon_default=function SvgMessagesIcon(props){return(0,import_jsx_runtime22.jsx)(import_react_native_svg22.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime22.jsx)(import_react_native_svg22.Path,{fill:"currentColor",fillRule:"evenodd",d:"M22 17.5a1.5 1.5 0 0 1-1.5 1.5h-17A1.5 1.5 0 0 1 2 17.5v-11A1.5 1.5 0 0 1 3.5 5h17A1.5 1.5 0 0 1 22 6.5v11ZM3.5 6a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5h17a.5.5 0 0 0 .5-.5v-11a.5.5 0 0 0-.5-.5h-17Zm6.79 7.59a2.5 2.5 0 0 0 1.71.67 2.5 2.5 0 0 0 1.69-.67l6.13-5.72a.503.503 0 0 0-.68-.74L13 12.86a1.49 1.49 0 0 1-2 0L4.84 7.13a.502.502 0 1 0-.68.74l6.13 5.72ZM4.5 16a.47.47 0 0 1-.35-.15.48.48 0 0 1 0-.7l3-3a.495.495 0 1 1 .7.7l-3 3a.47.47 0 0 1-.35.15Zm14.65-.15a.47.47 0 0 0 .35.15.47.47 0 0 0 .35-.15.48.48 0 0 0 0-.7l-3-3a.495.495 0 1 0-.7.7l3 3Z",clipRule:"evenodd"})}))},import_react_native_svg23=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime23=__webpack_require__("../../node_modules/react/jsx-runtime.js"),MobileIcon_default=function SvgMobileIcon(props){return(0,import_jsx_runtime23.jsx)(import_react_native_svg23.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime23.jsx)(import_react_native_svg23.Path,{fill:"currentColor",fillRule:"evenodd",d:"M16 2H8a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h8a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3ZM6 18V7h12v11H6Zm0 1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2H6ZM6 6h12V5a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v1Zm5-1h2a.5.5 0 0 0 0-1h-2a.5.5 0 0 0 0 1Z",clipRule:"evenodd"})}))},import_react_native_svg24=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime24=__webpack_require__("../../node_modules/react/jsx-runtime.js"),MoreIcon_default=function SvgMoreIcon(props){return(0,import_jsx_runtime24.jsx)(import_react_native_svg24.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime24.jsx)(import_react_native_svg24.Path,{fill:"currentColor",fillRule:"evenodd",d:"M4.5 15.36a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5Zm0-4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3Zm5 1.5a2.5 2.5 0 1 0 5 0 2.5 2.5 0 0 0-5 0Zm1 0a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Zm6.5 0a2.5 2.5 0 1 0 5 0 2.5 2.5 0 0 0-5 0Zm1 0a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z",clipRule:"evenodd"})}))},import_react_native_svg25=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime25=__webpack_require__("../../node_modules/react/jsx-runtime.js"),MortgagesIcon_default=function SvgMortgagesIcon(props){return(0,import_jsx_runtime25.jsx)(import_react_native_svg25.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime25.jsx)(import_react_native_svg25.Path,{fill:"currentColor",fillRule:"evenodd",d:"M17.88 22H6.13A2.09 2.09 0 0 1 4 20v-7H2.5a.5.5 0 0 1-.36-.85l9.5-10A.48.48 0 0 1 12 2a.54.54 0 0 1 .36.14l1 1a.502.502 0 1 1-.71.71l-.64-.64L3.67 12h.83a.5.5 0 0 1 .5.5v7.46a1.09 1.09 0 0 0 1.13 1h11.75a1.08 1.08 0 0 0 1.12-1v-7.5a.5.5 0 0 1 .5-.5h.79l-.14-.15a.5.5 0 0 1 0-.71.51.51 0 0 1 .71 0l1 1a.51.51 0 0 1-.36.86H20v7A2.09 2.09 0 0 1 17.88 22Zm-3.38-2a.51.51 0 0 1-.5-.5v-3.86c0-1-.82-1.64-2-1.64-1.18 0-2 .67-2 1.64v3.82a.5.5 0 0 1-.5.5.51.51 0 0 1-.5-.5v-3.82a3 3 0 0 1 6 0v3.82a.5.5 0 0 1-.5.54Zm.69-12.34A4 4 0 0 0 18.83 10a3.76 3.76 0 0 0 3.08-1.61.501.501 0 0 0-.81-.59A2.79 2.79 0 0 1 18.83 9a2.997 2.997 0 0 1-2.5-1.34h2.84a.5.5 0 1 0 0-1h-3.267a3.009 3.009 0 0 1-.072-.75h3.339a.5.5 0 1 0 0-1h-3.136A3.001 3.001 0 0 1 18.83 3a2.78 2.78 0 0 1 2.27 1.19.501.501 0 0 0 .81-.59A3.75 3.75 0 0 0 18.83 2a4.002 4.002 0 0 0-3.85 2.91h-.48a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5h.331L14.83 6c0 .225.019.445.054.66H14.5a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5h.69Z",clipRule:"evenodd"})}))},import_react_native_svg26=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime26=__webpack_require__("../../node_modules/react/jsx-runtime.js"),NotificationIcon_default=function SvgNotificationIcon(props){return(0,import_jsx_runtime26.jsx)(import_react_native_svg26.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime26.jsx)(import_react_native_svg26.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12 2a1.5 1.5 0 0 0-1.342 2.171A7.182 7.182 0 0 0 5.06 11.06v3.91a2.7 2.7 0 0 1-.52 1.76 2.41 2.41 0 0 0-.51 1.46A1.71 1.71 0 0 0 5.66 20h3.892A2.51 2.51 0 0 0 12 22a2.5 2.5 0 0 0 2.45-2h3.96a1.71 1.71 0 0 0 1.61-1.78 2.41 2.41 0 0 0-.5-1.46A2.7 2.7 0 0 1 19 15v-3.94a7.202 7.202 0 0 0-5.654-6.896c.098-.2.154-.426.154-.664A1.51 1.51 0 0 0 12 2Zm0 2a.5.5 0 1 0 0-1 .51.51 0 0 0-.5.5.5.5 0 0 0 .5.5ZM5.66 19.03h4.177A.509.509 0 0 1 10 19h4a.5.5 0 0 1 .171.03h4.239c.4 0 .62-.42.62-.81a1.42 1.42 0 0 0-.34-.91 3.72 3.72 0 0 1-.68-2.31v-3.91A6.16 6.16 0 0 0 12.06 5a6.17 6.17 0 0 0-6 6.06V15a3.65 3.65 0 0 1-.69 2.31 1.48 1.48 0 0 0-.34.91c0 .39.22.81.63.81Zm6.345 1.972A1.5 1.5 0 0 1 10.59 20h2.83a1.5 1.5 0 0 1-1.415 1.002ZM16.5 11.54a.5.5 0 0 1-.5-.5.54.54 0 0 1 .49-.54.48.48 0 0 1 .51.45V11a.5.5 0 0 1-.5.54Zm-.94-2.05a.51.51 0 0 0 .44.26.39.39 0 0 0 .24-.08.48.48 0 0 0 .2-.67A5.23 5.23 0 0 0 12 6.25a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5 4.3 4.3 0 0 1 3.56 2.24Z",clipRule:"evenodd"})}))},import_react_native_svg27=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime27=__webpack_require__("../../node_modules/react/jsx-runtime.js"),OrderIcon_default=function SvgOrderIcon(props){return(0,import_jsx_runtime27.jsx)(import_react_native_svg27.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime27.jsx)(import_react_native_svg27.Path,{fill:"currentColor",fillRule:"evenodd",d:"m19.85 6.15-4-4-.14-.15H5.5A1.5 1.5 0 0 0 4 3.5v17A1.5 1.5 0 0 0 5.5 22h13a1.5 1.5 0 0 0 1.5-1.5V6.29l-.15-.14ZM18.29 6H16.5a.5.5 0 0 1-.5-.5V3.71L18.29 6ZM5.5 21h13a.5.5 0 0 0 .5-.5V7h-2.5A1.5 1.5 0 0 1 15 5.5V3H5.5a.5.5 0 0 0-.5.5v17a.5.5 0 0 0 .5.5Zm11-11h-9a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1Zm-9 2h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1Zm0-5h5a.5.5 0 0 0 0-1h-5a.5.5 0 0 0 0 1Zm5 2h-5a.5.5 0 0 1 0-1h5a.5.5 0 0 1 0 1Zm4 5h-9a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1Zm-9 2h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1Z",clipRule:"evenodd"})}))},import_react_native_svg28=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime28=__webpack_require__("../../node_modules/react/jsx-runtime.js"),PercentageIcon_default=function SvgPercentageIcon(props){return(0,import_jsx_runtime28.jsx)(import_react_native_svg28.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime28.jsx)(import_react_native_svg28.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2.5 22a.47.47 0 0 1-.35-.15.48.48 0 0 1 0-.7l19-19a.495.495 0 1 1 .7.7l-19 19a.47.47 0 0 1-.35.15ZM3 6.5a3.5 3.5 0 1 0 7 0 3.5 3.5 0 0 0-7 0Zm1 0a2.5 2.5 0 1 1 5 0 2.5 2.5 0 0 1-5 0ZM17.5 21a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7Zm0-6a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5Z",clipRule:"evenodd"})}))},import_react_native_svg29=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime29=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ProfileIcon_default=function SvgProfileIcon(props){return(0,import_jsx_runtime29.jsxs)(import_react_native_svg29.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime29.jsx)(import_react_native_svg29.G,{clipPath:"url(#profile_icon_svg__a)",children:(0,import_jsx_runtime29.jsx)(import_react_native_svg29.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm19 0a9 9 0 1 0-18 0 9 9 0 0 0 18 0ZM9 8a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm5 0a2 2 0 1 0-4 0 2 2 0 0 0 4 0Zm3 9.5a.5.5 0 0 0 1 0c0-1.65 0-5.5-6-5.5s-6 3.71-6 5.5a.5.5 0 0 0 1 0c0-1.79 0-4.5 5-4.5s5 2.82 5 4.5Z",clipRule:"evenodd"})}),(0,import_jsx_runtime29.jsx)(import_react_native_svg29.Defs,{children:(0,import_jsx_runtime29.jsx)(import_react_native_svg29.ClipPath,{id:"profile_icon_svg__a",children:(0,import_jsx_runtime29.jsx)(import_react_native_svg29.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))},import_react_native_svg30=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime30=__webpack_require__("../../node_modules/react/jsx-runtime.js"),SalaryIcon_default=function SvgSalaryIcon(props){return(0,import_jsx_runtime30.jsxs)(import_react_native_svg30.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 23"},props),{children:[(0,import_jsx_runtime30.jsx)(import_react_native_svg30.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2.4 9h19.2a1.8 1.8 0 0 1 1.8 1.8v9.6a1.8 1.8 0 0 1-1.8 1.8H2.4a1.8 1.8 0 0 1-1.8-1.8v-9.6A1.8 1.8 0 0 1 2.4 9Zm19.2 1.2H2.4a.6.6 0 0 0-.6.6v9.6a.6.6 0 0 0 .6.6h19.2a.6.6 0 0 0 .6-.6v-9.6a.6.6 0 0 0-.6-.6Z",clipRule:"evenodd"}),(0,import_jsx_runtime30.jsx)(import_react_native_svg30.Path,{fill:"currentColor",d:"M19.8 15a.6.6 0 0 1 .108 1.19l-.108.01h-3.6a.6.6 0 0 1-.108-1.19L16.2 15h3.6Z"}),(0,import_jsx_runtime30.jsx)(import_react_native_svg30.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.56 12.6c.827.005 1.602.455 2.078 1.207a.404.404 0 0 1-.081.525c-.153.12-.364.08-.473-.09-.345-.557-.915-.89-1.525-.892-.86 0-1.596.598-1.889 1.44h2.119c.186 0 .337.168.337.375-.003.205-.152.371-.337.375h-2.253l-.001.06c0 .173.018.341.05.503h2.204c.186 0 .337.167.337.374-.003.206-.152.372-.337.375l-1.911.001c.363.601.98.997 1.681.997.61-.001 1.18-.335 1.525-.893.109-.17.32-.21.473-.09.153.12.189.356.08.525-.475.753-1.25 1.203-2.078 1.208-1.088 0-2.026-.716-2.453-1.747h-.469c-.186 0-.337-.168-.337-.376 0-.207.151-.375.337-.375h.26a3.347 3.347 0 0 1-.037-.502l.001-.06h-.224c-.186 0-.337-.168-.337-.375s.151-.375.337-.375h.323c.318-1.263 1.361-2.19 2.6-2.19Z",clipRule:"evenodd"}),(0,import_jsx_runtime30.jsx)(import_react_native_svg30.Path,{fill:"currentColor",d:"m11.989 8.112-.093-.008-.078-.024-.071-.037-.045-.033-.049-.047-2.758-3.042a.545.545 0 0 1 0-.717.428.428 0 0 1 .586-.058l.064.058 1.973 2.177V.507c0-.28.206-.507.46-.507.226 0 .414.18.453.416l.007.091V6.38l1.973-2.176a.43.43 0 0 1 .65 0c.16.176.178.45.054.647l-.053.07-2.759 3.042-.037.037-.056.042-.071.038-.078.024-.072.008ZM7.8 15.005a.6.6 0 0 1 .108 1.19l-.108.01H4.2a.6.6 0 0 1-.108-1.19l.108-.01h3.6Z"})]}))},import_react_native_svg31=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime31=__webpack_require__("../../node_modules/react/jsx-runtime.js"),SavingAccountIcon_default=function SvgSavingAccountIcon(props){return(0,import_jsx_runtime31.jsx)(import_react_native_svg31.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime31.jsx)(import_react_native_svg31.Path,{fill:"currentColor",fillRule:"evenodd",d:"M10.404 5.884A3.78 3.78 0 0 0 7.152 4a.5.5 0 0 0-.502.5v2.692l-.009.006a6.5 6.5 0 0 0-2.058 2.57l-.078.182H2.5l-.09.008a.5.5 0 0 0-.41.492v4l.009.094a.5.5 0 0 0 .125.247l.206.213.313.309c.4.387.833.774 1.283 1.136.585.471 1.156.865 1.703 1.158.481.259.935.435 1.361.515V20.5l.008.09A.5.5 0 0 0 7.5 21h2l.088-.008a.5.5 0 0 0 .402-.394l.329-1.641c.069-.002.138-.004.207-.008l2.974.001.181.006.329 1.642.024.084A.5.5 0 0 0 14.5 21h2l.09-.008A.5.5 0 0 0 17 20.5v-2.55a6.554 6.554 0 0 0 2.712-3.59.5.5 0 0 0 .138.02c.292 0 .69-.083 1.092-.337C21.605 13.625 22 12.879 22 11.8a.5.5 0 0 0-1 0c0 .741-.224 1.165-.592 1.397-.173.11-.35.16-.475.177a6.56 6.56 0 0 0-6.428-7.494H10.45l-.046.004ZM16 17.661V20h-1.09l-.328-1.64a.494.494 0 0 0-.187-.305.5.5 0 0 0-.338-.103 5.166 5.166 0 0 1-.531 0L10.5 17.95l-.198.007a5.19 5.19 0 0 1-.366-.006h-.017v-.001a.498.498 0 0 0-.5.409l-.33 1.64H8v-2.34a.501.501 0 0 0-.006-.068l-.002-.02a.5.5 0 0 0-.578-.404c-.359-.02-.8-.171-1.303-.44-.485-.261-1.007-.622-1.547-1.056a18.13 18.13 0 0 1-1.217-1.077l-.108-.106L3 14.249V10.95h1.85l.09-.008a.5.5 0 0 0 .382-.328 5.5 5.5 0 0 1 2.109-2.75.5.5 0 0 0 .219-.43V5.049l.053.01a2.78 2.78 0 0 1 1.945 1.534.5.5 0 0 0 .627.255.5.5 0 0 0 .175.032h3.05l.24.008a5.56 5.56 0 0 1 2.588 10.302.5.5 0 0 0-.328.47v.002Zm-7.008-8.25A.5.5 0 0 0 8 9.5v1l.008.09A.5.5 0 0 0 9 10.5v-1l-.008-.09ZM14.5 8a.5.5 0 0 1 .09.992L14.5 9h-3a.5.5 0 0 1-.09-.992L11.5 8h3Z",clipRule:"evenodd"})}))},import_react_native_svg32=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime32=__webpack_require__("../../node_modules/react/jsx-runtime.js"),SearchIcon_default=function SvgSearchIcon(props){return(0,import_jsx_runtime32.jsx)(import_react_native_svg32.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime32.jsx)(import_react_native_svg32.Path,{fill:"currentColor",fillRule:"evenodd",d:"M2 10a8 8 0 1 1 13.996 5.296l5.854 5.854a.48.48 0 0 1 0 .7.47.47 0 0 1-.35.15.47.47 0 0 1-.35-.15l-5.854-5.854A8 8 0 0 1 2 10Zm15 0a7 7 0 1 0-14 0 7 7 0 0 0 14 0Zm-1.82.5a.5.5 0 0 1-.5-.5A4.69 4.69 0 0 0 10 5.32a.5.5 0 0 1 0-1A5.69 5.69 0 0 1 15.68 10a.5.5 0 0 1-.5.5Z",clipRule:"evenodd"})}))},import_react_native_svg33=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime33=__webpack_require__("../../node_modules/react/jsx-runtime.js"),SendMobileIcon_default=function SvgSendMobileIcon(props){return(0,import_jsx_runtime33.jsx)(import_react_native_svg33.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime33.jsx)(import_react_native_svg33.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.71 22H5.28A3.32 3.32 0 0 1 2 18.65V5.35A3.32 3.32 0 0 1 5.28 2h7.43A3.33 3.33 0 0 1 16 5.35v3.81a.5.5 0 0 1-1 0V6H3v11h12v-3.1a.5.5 0 0 1 .5-.5.51.51 0 0 1 .5.5v4.75A3.33 3.33 0 0 1 12.71 22ZM3.022 5A2.32 2.32 0 0 1 5.28 3h7.43a2.33 2.33 0 0 1 2.267 2H3.022ZM3 18.65V18h12v.65A2.32 2.32 0 0 1 12.71 21H5.28A2.31 2.31 0 0 1 3 18.65Zm15.14-3.79a.52.52 0 0 0 .71 0l3-3a.5.5 0 0 0 0-.71l-3-3a.5.5 0 0 0-.71 0 .51.51 0 0 0 0 .71L20.288 11H9.5a.51.51 0 0 0-.5.5.5.5 0 0 0 .5.5h10.79l-2.15 2.15a.51.51 0 0 0 0 .71ZM8 20h2a.5.5 0 0 0 .5-.5.51.51 0 0 0-.5-.5H8a.5.5 0 0 0 0 1Z",clipRule:"evenodd"})}))},import_react_native_svg34=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime34=__webpack_require__("../../node_modules/react/jsx-runtime.js"),SendMoneyIcon_default=function SvgSendMoneyIcon(props){return(0,import_jsx_runtime34.jsxs)(import_react_native_svg34.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime34.jsx)(import_react_native_svg34.Path,{fill:"currentColor",d:"M2.5 9.5a.5.5 0 0 1 .492.41L3 10v4h4a.5.5 0 0 1 .492.41l.008.09a.5.5 0 0 1-.41.492L7 15H2.5a.5.5 0 0 1-.492-.41L2 14.5V10a.5.5 0 0 1 .5-.5ZM21.5 9a.5.5 0 0 1 .492.41L22 9.5V14a.5.5 0 0 1-.992.09L21 14v-4h-4a.5.5 0 0 1-.492-.41L16.5 9.5a.5.5 0 0 1 .41-.492L17 9h4.5Z"}),(0,import_jsx_runtime34.jsx)(import_react_native_svg34.Path,{fill:"currentColor",d:"M14.146 2.146a.5.5 0 0 1 .765.638l-.057.07-12 12a.5.5 0 0 1-.765-.638l.057-.07 12-12ZM21.146 9.146a.5.5 0 0 1 .765.638l-.057.07-12 12a.5.5 0 0 1-.765-.638l.057-.07 12-12Z"})]}))},import_react_native_svg35=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime35=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ServicesIcon_default=function SvgServicesIcon(props){return(0,import_jsx_runtime35.jsxs)(import_react_native_svg35.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime35.jsx)(import_react_native_svg35.G,{clipPath:"url(#services_icon_svg__a)",children:(0,import_jsx_runtime35.jsx)(import_react_native_svg35.Path,{fill:"currentColor",fillRule:"evenodd",d:"M21.493 10h.007a.5.5 0 0 0 .5-.5m-.507.5H2.5a.5.5 0 0 1-.5-.49v-.02a.498.498 0 0 1 .21-.397l9.484-6.988A.5.5 0 0 1 12.3 2.1l9.49 6.992a.49.49 0 0 1 .082.074c.077.086.125.2.127.325m-10-6.37L4.021 9H19.98L12 3.121ZM9 12H5v7h4v-7Zm1 0v7h4v-7h-4Zm5 7h4v-7h-4v7Zm5 0v-7h1.5a.5.5 0 1 0 0-1h-19a.5.5 0 0 0 0 1H4v7h-.5a1.5 1.5 0 0 0 0 3h17a1.5 1.5 0 1 0 0-3H20ZM3.5 20a.5.5 0 0 0 0 1h17a.5.5 0 1 0 0-1h-17Z",clipRule:"evenodd"})}),(0,import_jsx_runtime35.jsx)(import_react_native_svg35.Defs,{children:(0,import_jsx_runtime35.jsx)(import_react_native_svg35.ClipPath,{id:"services_icon_svg__a",children:(0,import_jsx_runtime35.jsx)(import_react_native_svg35.Path,{fill:"#fff",d:"M0 0h24v24H0z"})})})]}))},import_react_native_svg36=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime36=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ShareIcon_default=function SvgShareIcon(props){return(0,import_jsx_runtime36.jsxs)(import_react_native_svg36.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:[(0,import_jsx_runtime36.jsx)(import_react_native_svg36.Circle,{cx:5,cy:12,r:3,stroke:"currentColor"}),(0,import_jsx_runtime36.jsx)(import_react_native_svg36.Circle,{cx:19,cy:19,r:3,stroke:"currentColor"}),(0,import_jsx_runtime36.jsx)(import_react_native_svg36.Circle,{cx:19,cy:5,r:3,stroke:"currentColor"}),(0,import_jsx_runtime36.jsx)(import_react_native_svg36.Path,{stroke:"currentColor",d:"m8 11 8.5-4.5M16.5 17.5 8 13"})]}))},import_react_native_svg37=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime37=__webpack_require__("../../node_modules/react/jsx-runtime.js"),TransferIcon_default=function SvgTransferIcon(props){return(0,import_jsx_runtime37.jsx)(import_react_native_svg37.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime37.jsx)(import_react_native_svg37.Path,{stroke:"currentColor",strokeWidth:.9,d:"M22.827 8.031H9.62V4.054a.304.304 0 0 0-.496-.235l-7.511 6.248a.303.303 0 0 0 .192.538h21.022c.135 0 .245-.11.245-.245V8.277a.245.245 0 0 0-.245-.245ZM1.745 15.981h13.208v3.978c0 .255.297.396.496.234l7.51-6.247a.303.303 0 0 0-.192-.539H1.746a.246.246 0 0 0-.246.245v2.085c0 .135.11.244.245.244Z",clipRule:"evenodd"})}))},import_react_native_svg38=__toESM(__webpack_require__("../../node_modules/react-native-svg/lib/module/index.js")),import_jsx_runtime38=__webpack_require__("../../node_modules/react/jsx-runtime.js"),UserIcon_default=function SvgUserIcon(props){return(0,import_jsx_runtime38.jsx)(import_react_native_svg38.default,__spreadProps(__spreadValues({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),{children:(0,import_jsx_runtime38.jsx)(import_react_native_svg38.Path,{fill:"currentColor",fillRule:"evenodd",d:"M12.009 4.01a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm0 1a3 3 0 1 1 0 6 3 3 0 0 1 0-6Zm7 14.54a.5.5 0 1 0 1 0c0-1.95 0-6.5-8-6.5s-8 4.39-8 6.5a.5.5 0 1 0 1 0c0-2.06 0-5.5 7-5.5s7 3.44 7 5.5Z",clipRule:"evenodd"})}))}},"../../packages/boi-react-utils/dist/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _slicedToArray=__webpack_require__("../../node_modules/@babel/runtime/helpers/slicedToArray.js");function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_require__("../../node_modules/core-js/modules/es.object.create.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-own-property-names.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("../../node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.join.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("../../node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.map.js"),__webpack_require__("../../node_modules/core-js/modules/es.function.name.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.freeze.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.seal.js"),__webpack_require__("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("../../node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("../../node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.match.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.trim.js"),__webpack_require__("../../node_modules/core-js/modules/es.weak-map.js"),__webpack_require__("../../node_modules/core-js/modules/es.map.js"),__webpack_require__("../../node_modules/core-js/modules/es.reflect.construct.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.split.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("../../node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("../../node_modules/core-js/modules/es.set.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("../../node_modules/core-js/modules/es.promise.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.reduce.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.values.js"),__webpack_require__("../../node_modules/core-js/modules/es.array.from.js");var __create=Object.create,__defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropNames=Object.getOwnPropertyNames,__getOwnPropSymbols=Object.getOwnPropertySymbols,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=function __defNormalProp(obj,key,value){return key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value},__spreadValues=function __spreadValues(a,b){for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols){var _step,_iterator=_createForOfIteratorHelper(__getOwnPropSymbols(b));try{for(_iterator.s();!(_step=_iterator.n()).done;){prop=_step.value;__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop])}}catch(err){_iterator.e(err)}finally{_iterator.f()}}return a},__commonJS=function __commonJS(cb,mod){return function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports}},__copyProps=function __copyProps(to,from,except,desc){if(from&&"object"==typeof from||"function"==typeof from){var _step2,_loop=function _loop(key){__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:function get(){return from[key]},enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})},_iterator2=_createForOfIteratorHelper(__getOwnPropNames(from));try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop(_step2.value)}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}return to},require_react_production_min=__commonJS({"../../node_modules/react/cjs/react.production.min.js":function node_modulesReactCjsReactProductionMinJs(exports){var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;var B={isMounted:function isMounted(){return!1},enqueueForceUpdate:function enqueueForceUpdate(){},enqueueReplaceState:function enqueueReplaceState(){},enqueueSetState:function enqueueSetState(){}},C=Object.assign,D={};function E(a,b,e){this.props=a,this.context=b,this.refs=D,this.updater=e||B}function F(){}function G(a,b,e){this.props=a,this.context=b,this.refs=D,this.updater=e||B}E.prototype.isReactComponent={},E.prototype.setState=function(a,b){if("object"!=typeof a&&"function"!=typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")},E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")},F.prototype=E.prototype;var H=G.prototype=new F;H.constructor=G,C(H,E.prototype),H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}function O(a){return"object"==typeof a&&null!==a&&a.$$typeof===l}var P=/\/+/g;function Q(a,b){return"object"==typeof a&&null!==a&&null!=a.key?function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,(function(a2){return b[a2]}))}(""+a.key):b.toString(36)}function R(a,b,e,d,c){var k=typeof a;"undefined"!==k&&"boolean"!==k||(a=null);var h=!1;if(null===a)h=!0;else switch(k){case"string":case"number":h=!0;break;case"object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return c=c(h=a),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",(function(a2){return a2}))):null!=c&&(O(c)&&(c=function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;if(h=0,d=""===d?".":d+":",I(a))for(var g=0;g<a.length;g++){var f=d+Q(k=a[g],g);h+=R(k,b,e,f,c)}else if(f=function A(a){return null===a||"object"!=typeof a?null:"function"==typeof(a=z&&a[z]||a["@@iterator"])?a:null}(a),"function"==typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)h+=R(k=k.value,b,e,f=d+Q(k,g++),c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}function S(a,b,e){if(null==a)return a;var d=[],c=0;return R(a,d,"","",(function(a2){return b.call(e,a2,c++)})),d}function T(a){if(-1===a._status){var b=a._result;(b=b()).then((function(b2){0!==a._status&&-1!==a._status||(a._status=1,a._result=b2)}),(function(b2){0!==a._status&&-1!==a._status||(a._status=2,a._result=b2)})),-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result}var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function forEach(a,b,e){S(a,(function(){b.apply(this,arguments)}),e)},count:function count(a){var b=0;return S(a,(function(){b++})),b},toArray:function toArray(a){return S(a,(function(a2){return a2}))||[]},only:function only(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}},exports.Component=E,exports.Fragment=p,exports.Profiler=r,exports.PureComponent=G,exports.StrictMode=q,exports.Suspense=w,exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,exports.cloneElement=function(a,b,e){if(null==a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){if(void 0!==b.ref&&(k=b.ref,h=K.current),void 0!==b.key&&(c=""+b.key),a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}},exports.createContext=function(a){return(a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:t,_context:a},a.Consumer=a},exports.createElement=M,exports.createFactory=function(a){var b=M.bind(null,a);return b.type=a,b},exports.createRef=function(){return{current:null}},exports.forwardRef=function(a){return{$$typeof:v,render:a}},exports.isValidElement=O,exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}},exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}},exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}},exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},exports.useCallback=function(a,b){return U.current.useCallback(a,b)},exports.useContext=function(a){return U.current.useContext(a)},exports.useDebugValue=function(){},exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)},exports.useEffect=function(a,b){return U.current.useEffect(a,b)},exports.useId=function(){return U.current.useId()},exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)},exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)},exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)},exports.useMemo=function(a,b){return U.current.useMemo(a,b)},exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)},exports.useRef=function(a){return U.current.useRef(a)},exports.useState=function(a){return U.current.useState(a)},exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)},exports.useTransition=function(){return U.current.useTransition()},exports.version="18.2.0"}}),require_react=(__commonJS({"../../node_modules/react/cjs/react.development.js":function node_modulesReactCjsReactDevelopmentJs(exports,module2){0}}),__commonJS({"../../node_modules/react/index.js":function node_modulesReactIndexJs(exports,module2){module2.exports=require_react_production_min()}})),require_react_jsx_runtime_production_min=__commonJS({"../../node_modules/react/cjs/react-jsx-runtime.production.min.js":function node_modulesReactCjsReactJsxRuntimeProductionMinJs(exports){var f=require_react(),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q}}),require_jsx_runtime=(__commonJS({"../../node_modules/react/cjs/react-jsx-runtime.development.js":function node_modulesReactCjsReactJsxRuntimeDevelopmentJs(exports){0}}),__commonJS({"../../node_modules/react/jsx-runtime.js":function node_modulesReactJsxRuntimeJs(exports,module2){module2.exports=require_react_jsx_runtime_production_min()}})),src_exports={};!function __export(target,all){for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})}(src_exports,{getColorSelectArgType:function getColorSelectArgType(){return _getColorSelectArgType},getIconSelectArgType:function getIconSelectArgType(){return _getIconSelectArgType}}),module.exports=function __toCommonJS(mod){return __copyProps(__defProp({},"__esModule",{value:!0}),mod)}(src_exports);var flipObject=function flipObject(obj){return Object.keys(obj).reduce((function(newObject,key){return newObject[obj[key]]=isNaN(+key)?key:+key,newObject}),{})},import_jsx_runtime=function __toESM(mod,isNodeMode,target){return target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)}(require_jsx_runtime()),_getIconSelectArgType=function _getIconSelectArgType(icons){return{control:{type:"select"},mapping:Object.entries(__spreadValues({},icons)).reduce((function(accumulator,_ref){var _spreadProps,_ref2=_slicedToArray(_ref,2),key=_ref2[0],Icon=_ref2[1];return function __spreadProps(a,b){return __defProps(a,__getOwnPropDescs(b))}(__spreadValues({},accumulator),((_spreadProps={})[key]=(0,import_jsx_runtime.jsx)(Icon,{}),_spreadProps))}),{}),options:Object.keys(icons)}},_getColorSelectArgType=function _getColorSelectArgType(color){return{control:{type:"select",labels:flipObject(color)},options:Object.values(color)}}},"../../packages/boi-react-native-components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.mdx)$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../packages/boi-react-native-components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackEmptyContext},"../../packages/boi-react-native-components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(?:ts%7Ctsx%7Cjs%7Cjsx)?)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./src/Alert/Alert.stories.tsx":"../../packages/boi-react-native-components/src/Alert/Alert.stories.tsx","./src/BasicAlert/BasicAlert.stories.tsx":"../../packages/boi-react-native-components/src/BasicAlert/BasicAlert.stories.tsx","./src/BottomSheet/BottomSheet.stories.tsx":"../../packages/boi-react-native-components/src/BottomSheet/BottomSheet.stories.tsx","./src/Button/Button.stories.tsx":"../../packages/boi-react-native-components/src/Button/Button.stories.tsx","./src/ButtonV2/Button.stories.tsx":"../../packages/boi-react-native-components/src/ButtonV2/Button.stories.tsx","./src/Card/Card.stories.tsx":"../../packages/boi-react-native-components/src/Card/Card.stories.tsx","./src/Checkbox/Checkbox.stories.tsx":"../../packages/boi-react-native-components/src/Checkbox/Checkbox.stories.tsx","./src/CircularProgress/CircularProgress.stories.tsx":"../../packages/boi-react-native-components/src/CircularProgress/CircularProgress.stories.tsx","./src/IconButtonBase/IconButtonBase.stories.tsx":"../../packages/boi-react-native-components/src/IconButtonBase/IconButtonBase.stories.tsx","./src/Map/Map.stories.tsx":"../../packages/boi-react-native-components/src/Map/Map.stories.tsx","./src/MapCard/MapCard.stories.tsx":"../../packages/boi-react-native-components/src/MapCard/MapCard.stories.tsx","./src/NumberField/NumberField.stories.tsx":"../../packages/boi-react-native-components/src/NumberField/NumberField.stories.tsx","./src/OuterField/OuterField.stories.tsx":"../../packages/boi-react-native-components/src/OuterField/OuterField.stories.tsx","./src/QuickLinks/QuickLinks.stories.tsx":"../../packages/boi-react-native-components/src/QuickLinks/QuickLinks.stories.tsx","./src/Radio/Radio.stories.tsx":"../../packages/boi-react-native-components/src/Radio/Radio.stories.tsx","./src/RadioGroup/RadioGroup.stories.tsx":"../../packages/boi-react-native-components/src/RadioGroup/RadioGroup.stories.tsx","./src/Select/Select.stories.tsx":"../../packages/boi-react-native-components/src/Select/Select.stories.tsx","./src/Slider/Slider.stories.tsx":"../../packages/boi-react-native-components/src/Slider/Slider.stories.tsx","./src/Stepper/Step/Step.stories.tsx":"../../packages/boi-react-native-components/src/Stepper/Step/Step.stories.tsx","./src/Stepper/Stepper.stories.tsx":"../../packages/boi-react-native-components/src/Stepper/Stepper.stories.tsx","./src/Switch/Switch.stories.tsx":"../../packages/boi-react-native-components/src/Switch/Switch.stories.tsx","./src/Tabs/Tabs.stories.tsx":"../../packages/boi-react-native-components/src/Tabs/Tabs.stories.tsx","./src/TextField/TextField.stories.tsx":"../../packages/boi-react-native-components/src/TextField/TextField.stories.tsx","./src/Typography/Typography.stories.tsx":"../../packages/boi-react-native-components/src/Typography/Typography.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="../../packages/boi-react-native-components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(?:ts%7Ctsx%7Cjs%7Cjsx)?)$"},"../../packages/boi-react-native-icons/src sync ^\\.[\\\\/](?:Icons\\.stories\\.tsx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./Icons.stories.tsx":"../../packages/boi-react-native-icons/src/Icons.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="../../packages/boi-react-native-icons/src sync ^\\.[\\\\/](?:Icons\\.stories\\.tsx)$"},"../../packages/boi-fonts/dist/OpenSans-Bold.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Bold.fa428cdd.ttf"},"../../packages/boi-fonts/dist/OpenSans-Bold.woff":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Bold.08328bf7.woff"},"../../packages/boi-fonts/dist/OpenSans-Bold.woff2":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Bold.1a123173.woff2"},"../../packages/boi-fonts/dist/OpenSans-Italic.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Italic.a397a4c1.ttf"},"../../packages/boi-fonts/dist/OpenSans-Italic.woff":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Italic.a38e47c3.woff"},"../../packages/boi-fonts/dist/OpenSans-Italic.woff2":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Italic.c2d26fca.woff2"},"../../packages/boi-fonts/dist/OpenSans-Regular.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Regular.77c09223.ttf"},"../../packages/boi-fonts/dist/OpenSans-Regular.woff":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Regular.362b56e7.woff"},"../../packages/boi-fonts/dist/OpenSans-Regular.woff2":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-Regular.967e123a.woff2"},"../../packages/boi-fonts/dist/OpenSans-SemiBold.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-SemiBold.2f17aae8.ttf"},"../../packages/boi-fonts/dist/OpenSans-SemiBold.woff":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-SemiBold.fdf56b22.woff"},"../../packages/boi-fonts/dist/OpenSans-SemiBold.woff2":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-SemiBold.fb9fdde6.woff2"},"../../packages/boi-fonts/dist/OpenSans-SemiBoldItalic.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-SemiBoldItalic.3cddcd62.ttf"},"../../packages/boi-fonts/dist/OpenSans-SemiBoldItalic.woff":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-SemiBoldItalic.1059fe1f.woff"},"../../packages/boi-fonts/dist/OpenSans-SemiBoldItalic.woff2":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/OpenSans-SemiBoldItalic.b6b1d800.woff2"},"?c95a":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("../../node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("../../packages/boi-react-native-icons/src sync ^\\.[\\\\/](?:Icons\\.stories\\.tsx)$"),__webpack_require__("../../packages/boi-react-native-components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.mdx)$"),__webpack_require__("../../packages/boi-react-native-components sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(?:ts%7Ctsx%7Cjs%7Cjsx)?)$")],module,!1)},"../../packages/boi-design-tokens/build/app/index.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.weak-map.js"),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.object.to-string.js"),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.string.iterator.js"),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.array.iterator.js"),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/web.dom-collections.iterator.js"),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.object.define-property.js"),require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.lightScheme=exports.darkScheme=void 0;var _lightScheme=_interopRequireWildcard(require("./light/design-tokens"));exports.lightScheme=_lightScheme;var _darkScheme=_interopRequireWildcard(require("./dark/design-tokens"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}exports.darkScheme=_darkScheme},"../../packages/boi-design-tokens/build/app/light/design-tokens.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),Object.defineProperty(exports,"__esModule",{value:!0}),exports.lineHeight=exports.inputText=exports.inputDimensions=exports.inputColorsPlaceholder=exports.inputColorsDisabled=exports.inputColors=exports.inputBorderReadOnly=exports.inputBorderFocus=exports.inputBorderError=exports.inputBorderDisabled=exports.inputBorderActive=exports.inputBorder=exports.heading4=exports.heading3=exports.heading2=exports.heading1=exports.formElementContainer=exports.fontSize=exports.fontFamily=exports.durations=exports.dimension=exports.color=exports.clearButtonDimensions=exports.breakpoint=exports.bodyXSmall=exports.bodySmall=exports.bodyLarge=exports.body=exports.adornmentWidth=void 0,require("/Users/allens/Code/boi-turbo/node_modules/core-js/modules/es.object.define-property.js"),"undefined"==typeof exports&&(window.exports={}),Object.defineProperty(exports,"__esModule",{value:!0});exports.inputDimensions={height:48,width:"100%",paddingLeft:16,paddingRight:16};exports.inputText={fontFamily:"OpenSans-Regular",fontSize:16,letterSpacing:0,textAlign:"left"};exports.inputColors={color:"#161616",backgroundColor:"#EFEFEF"};exports.inputColorsDisabled={opacity:.7,color:"#979797",backgroundColor:"#EFEFEF"};exports.inputColorsPlaceholder={color:"#979797"};exports.inputBorder={borderStyle:"solid",borderWidth:1,borderColor:"#CCCCCC"};exports.inputBorderReadOnly={borderColor:"#EFEFEF"};exports.inputBorderFocus={borderColor:"#0000FF"};exports.inputBorderActive={borderColor:"#0000FF"};exports.inputBorderDisabled={borderColor:"#CCCCCC"};exports.inputBorderError={borderColor:"#B20000"};exports.clearButtonDimensions={height:48,width:40};exports.adornmentWidth={small:48,large:100};exports.formElementContainer={height:48,maxWidth:320};exports.heading1={color:"#161616",fontSize:24,lineHeight:36,fontFamily:"OpenSans-Bold"};exports.heading2={color:"#161616",fontSize:20,lineHeight:32,fontFamily:"OpenSans-Regular"};exports.heading3={color:"#161616",fontSize:18,lineHeight:32,fontFamily:"OpenSans-Bold"};exports.heading4={color:"#161616",fontSize:16,lineHeight:28,fontFamily:"OpenSans-Regular"};exports.bodyLarge={color:"#161616",fontSize:18,lineHeight:28,fontFamily:"OpenSans-Regular"};exports.body={color:"#161616",fontSize:16,lineHeight:24,fontFamily:"OpenSans-Regular"};exports.bodySmall={color:"#161616",fontSize:14,lineHeight:20,fontFamily:"OpenSans-Regular"};exports.bodyXSmall={color:"#161616",fontSize:12,lineHeight:20,fontFamily:"OpenSans-SemiBold"};exports.breakpoint={xSmall:"567px",small:"767px",medium:"1023px",large:"1280px"};exports.durations={formElementTransition:"0.25s"};exports.fontFamily={italic:"OpenSans-Italic",regular:"OpenSans-Regular",semiBold:"OpenSans-SemiBold",semiBoldItalic:"OpenSans-SemiBoldItalic",bold:"OpenSans-Bold"};exports.dimension={d1:1,d16:16,d40:40,d48:48,d100:100,d320:320};exports.fontSize={heading1:24,heading2:20,heading3:18,heading4:16,bodyLarge:18,body:16,bodySmall:14,bodyXSmall:12,button:16,smallButton:14,input:16};exports.lineHeight={heading1:36,heading2:32,heading3:32,heading4:28,bodyLarge:28,body:24,bodySmall:20,bodyXSmall:20};exports.color={primaryBlue:"#0000FF",teal:"#00FFC5",darkBlue:"#000066",lightBlue:"#B2DBFF",sage:"#32785A",fern:"#50B48C",lime:"#C4FB50",pear:"#A2CF40",lightTeal:"#357C83",darkTeal:"#1D4144",eggshell:"#52B8C2",grey:"#3C3C3C",background:"#DCDCDC",highlightPanels:"#EFEFEF",underlines:"#979797",fieldOutline:"#CCCCCC",white:"#FFFFFF",red:"#B20000",darkGrey:"#161616",text:"#161616"}}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[89],(()=>(__webpack_exec__("../../node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("../../node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("../../node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("../../node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"))));__webpack_require__.O()}]);