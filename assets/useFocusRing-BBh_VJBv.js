import{e as g,f as x,g as W,h as T,i as m,j as C,k as V,l as v,m as P,n as w}from"./useHover-DDDaVluF.js";import{r as i}from"./index-KmaxkdDD.js";function k(b){let{isDisabled:$,onBlurWithin:u,onFocusWithin:r,onFocusWithinChange:t}=b,s=i.useRef({isFocusWithin:!1}),{addGlobalListener:f,removeAllGlobalListeners:l}=g(),o=i.useCallback(e=>{e.currentTarget.contains(e.target)&&s.current.isFocusWithin&&!e.currentTarget.contains(e.relatedTarget)&&(s.current.isFocusWithin=!1,l(),u&&u(e),t&&t(!1))},[u,t,s,l]),c=x(o),d=i.useCallback(e=>{if(!e.currentTarget.contains(e.target))return;const a=W(e.target),n=T(a);if(!s.current.isFocusWithin&&n===m(e.nativeEvent)){r&&r(e),t&&t(!0),s.current.isFocusWithin=!0,c(e);let F=e.currentTarget;f(a,"focus",h=>{if(s.current.isFocusWithin&&!C(F,h.target)){let p=new V("blur",new a.defaultView.FocusEvent("blur",{relatedTarget:h.target}));p.target=F,p.currentTarget=F,o(p)}},{capture:!0})}},[r,t,c,f,o]);return $?{focusWithinProps:{onFocus:void 0,onBlur:void 0}}:{focusWithinProps:{onFocus:d,onBlur:o}}}function S(b={}){let{autoFocus:$=!1,isTextInput:u,within:r}=b,t=i.useRef({isFocused:!1,isFocusVisible:$||v()}),[s,f]=i.useState(!1),[l,o]=i.useState(()=>t.current.isFocused&&t.current.isFocusVisible),c=i.useCallback(()=>o(t.current.isFocused&&t.current.isFocusVisible),[]),d=i.useCallback(n=>{t.current.isFocused=n,f(n),c()},[c]);P(n=>{t.current.isFocusVisible=n,c()},[],{isTextInput:u});let{focusProps:e}=w({isDisabled:r,onFocusChange:d}),{focusWithinProps:a}=k({isDisabled:!r,onFocusWithinChange:d});return{isFocused:s,isFocusVisible:l,focusProps:r?a:e}}export{S as $,k as a};
