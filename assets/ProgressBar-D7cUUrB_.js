import{c as p,a as x,e as v,b as P}from"./utils-gyFJKyBV.js";import{c as g,a as V}from"./Label-D5Kag7W1.js";import{a as y,b as m}from"./useNumberFormatter-CsjwgOH6.js";import{r as u,e as c}from"./index-KmaxkdDD.js";import{$ as B}from"./filterDOMProps-CeZl_uWj.js";function I(f){let{value:e=0,minValue:a=0,maxValue:r=100,valueLabel:t,isIndeterminate:l,formatOptions:o={style:"percent"}}=f,s=B(f,{labelable:!0}),{labelProps:i,fieldProps:d}=g({...f,labelElementType:"span"});e=m(e,a,r);let b=(e-a)/(r-a),$=y(o);if(!l&&!t){let n=o.style==="percent"?b:e;t=$.format(n)}return{progressBarProps:p(s,{...d,"aria-valuenow":l?void 0:e,"aria-valuemin":a,"aria-valuemax":r,"aria-valuetext":l?void 0:t,role:"progressbar"}),labelProps:i}}const E=u.createContext(null),R=u.forwardRef(function(e,a){[e,a]=x(e,a,E);let{value:r=0,minValue:t=0,maxValue:l=100,isIndeterminate:o=!1}=e;r=m(r,t,l);let[s,i]=v(!e["aria-label"]&&!e["aria-labelledby"]),{progressBarProps:d,labelProps:b}=I({...e,label:i}),$=o?void 0:(r-t)/(l-t)*100,n=P({...e,defaultClassName:"react-aria-ProgressBar",values:{percentage:$,valueText:d["aria-valuetext"],isIndeterminate:o}});return c.createElement("div",{...d,...n,ref:a,slot:e.slot||void 0},c.createElement(V.Provider,{value:{...b,ref:s,elementType:"span"}},n.children))});export{R as $,E as a};
