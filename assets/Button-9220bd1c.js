import{j as e}from"./jsx-runtime-6eef64cc.js";import{u as a}from"./index-2d8ea55a.js";import{M as h,C as n}from"./index-dfba687d.js";import{S as s}from"./index-aa3a2926.js";import{B as l,P as i,S as c,W as d,L as u,a as m,b as p,c as x}from"./Button.stories-f9b8a12e.js";import"./index-c013ead5.js";import"./_commonjsHelpers-725317a4.js";import"./iframe-ac1dd81f.js";import"../sb-preview/runtime.js";import"./index-cda6679a.js";import"./extends-98964cd2.js";import"./index-8c3ac41d.js";import"./index-bce99968.js";import"./index-356e4a49.js";import"./index-b1e3628a.js";import"./index-7aa2f780.js";import"./Button-677395b0.js";import"./index-22f9e29b.js";import"./Typography-df6f4efa.js";import"./Spinner-ad785f98.js";const j=""+new URL("do-01-16a25b85.png",import.meta.url).href,b=""+new URL("do-02-2a4aaaa5.png",import.meta.url).href,g=""+new URL("do-03-0cf2a880.png",import.meta.url).href,w=""+new URL("do-04-ca6d7898.png",import.meta.url).href,f=""+new URL("do-05-abacd821.png",import.meta.url).href,y=""+new URL("dont-01-93986e6c.png",import.meta.url).href,v=""+new URL("dont-02-ca08113d.png",import.meta.url).href,D=""+new URL("dont-03-f4f91f5b.png",import.meta.url).href,k=""+new URL("dont-04-138c59e8.png",import.meta.url).href,B=""+new URL("dont-05-7cfc3313.png",import.meta.url).href;function r(o){const t={h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...a(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(h,{of:l}),`
`,e.jsx(t.h1,{id:"button",children:"Button"}),`
`,e.jsx(t.p,{children:"Buttons are clickable elements that are used to trigger actions."}),`
`,e.jsx(t.h2,{id:"overview",children:"Overview"}),`
`,e.jsx(t.p,{children:"Buttons should look like buttons and they should be placed where the user expects to find one. Label buttons with what they do. Buttons with generic or misleading labels can be a huge source of frustrations for customers and colleagues."}),`
`,e.jsxs(s,{children:[e.jsxs("div",{children:[e.jsx(t.h2,{id:"when-to-use",children:"When to use"}),e.jsx(t.p,{children:"Use buttons when the user-action causes a change in either back-end or the front-end of the digital product. For example, submitting a form, opening a modal or a panel on the same page."})]}),e.jsxs("div",{children:[e.jsx(t.h2,{id:"when-not-to-use",children:"When not to use"}),e.jsxs(t.ul,{children:[`
`,e.jsx(t.li,{children:"Do not use buttons as navigational elements. Instead, use text links when the desired action is to go to the next page or an external web page."}),`
`,e.jsx(t.li,{children:"For navigational actions that appear within a sentence, use a text link"}),`
`,e.jsx(t.li,{children:"When the user will be brought to a new page or external website, use text links"}),`
`,e.jsx(t.li,{children:"Where you want to present a number of choices that are of equal weight, use a text link"}),`
`]})]})]}),`
`,e.jsx(t.h2,{id:"button-types",children:"Button types"}),`
`,e.jsxs(s,{children:[e.jsxs("div",{children:[e.jsx(n,{of:i,layout:"centered"}),e.jsx(t.h3,{id:"primary-buttons",children:"Primary buttons"}),e.jsx(t.p,{children:"For the principal call-to-action (CTA) on the page. Primary buttons should only appear once per screen."})]}),e.jsxs("div",{children:[e.jsx(n,{of:c,layout:"centered"}),e.jsx(t.h3,{id:"secondary-buttons",children:"Secondary buttons"}),e.jsx(t.p,{children:"For secondary actions on each page. When used in conjunction with a primary button the secondary button's function is to perform the negative action of the set, such as 'Cancel'. Secondary buttons can be used in isolation or when there are multiple CTAs."})]}),e.jsxs("div",{children:[e.jsx(n,{of:d,layout:"centered"}),e.jsx(t.h3,{id:"buttons-with-icons",children:"Buttons with icons"}),e.jsx(t.p,{children:"Icons visually communicate the button's action and help draw attention. They should be placed to the left of the button label and should always be the same colour as the button label."})]}),e.jsxs("div",{children:[e.jsx(n,{of:u,layout:"centered"}),e.jsx(t.h3,{id:"buttons-with-loader",children:"Buttons with loader"}),e.jsx(t.p,{children:"Introduce a 24px loader on the 'down' state of your buttons, the loader follows the colour of the button label that would have been there. For example, if the label would have been #white, the loader would be #white."})]})]}),`
`,e.jsx(t.h2,{id:"button-states",children:"Button states"}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Default"})," - Use a default state communicates an interactive component or element."]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Hover"})," - This state communicate when a user has placed a cursor above an interactive element."]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Down"})," - This state communicates when a user has selected an interactive element."]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Focus"})," - This state communicates when the focus is on a certain component, while using keyboard navigation or screen reader."]}),`
`,e.jsxs(s,{children:[e.jsx("div",{children:e.jsx(n,{of:m,layout:"centered"})}),e.jsx("div",{children:e.jsx(n,{of:p,layout:"centered"})})]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Disabled"})," - A disabled state communicates a non interactive component or element. We recommend ",e.jsx(t.strong,{children:"not to use"})," disabled buttons and allow users to interact with all buttons and receive feedback on what they still need to do to progress in their journey. Only use disabled buttons if research shows it makes the user interface easier to understand."]}),`
`,e.jsx(t.h2,{id:"how-it-works",children:"How it works"}),`
`,e.jsxs(s,{children:[e.jsxs("div",{children:[e.jsx(n,{of:i,layout:"centered"}),e.jsxs(t.ul,{children:[`
`,e.jsx(t.li,{children:"Width determined by 32px + n(characters) + 32px"}),`
`,e.jsx(t.li,{children:"104px minimum width for any button"}),`
`,e.jsx(t.li,{children:"48px minimum height for any button"}),`
`,e.jsx(t.li,{children:"Minimum 24px for left and right padding"}),`
`]})]}),e.jsxs("div",{children:[e.jsx(n,{of:x,layout:"padded"}),e.jsxs(t.ul,{children:[`
`,e.jsx(t.li,{children:"On mobile, stack buttons with primary being above secondary"}),`
`,e.jsx(t.li,{children:"Button should be full screen width in size"}),`
`]})]})]}),`
`,e.jsx(t.h2,{id:"content",children:"Content"}),`
`,e.jsx(t.h3,{id:"button-labels",children:"Button labels"}),`
`,e.jsx(t.p,{children:"Buttons, call-to-action (CTA) buttons prompt the user to take action. Their labels should be clear and easily absorbed, so users can make an instant decision on whether to interact. Shorter labels are recommended as they perform best in customer testing and for assistive technology like screen-readers."}),`
`,e.jsx(t.h3,{id:"button-labels-should",children:"Button labels should:"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsx(t.li,{children:"Be short - between 1 to 4 words"}),`
`,e.jsx(t.li,{children:"Be specific - match the destination content and help customers know what to expect"}),`
`,e.jsx(t.li,{children:"Make sense in isolation without relying on words around it"}),`
`,e.jsx(t.li,{children:"Start with a verb whenever possible. Be direct, use active language to encourage the user to take the next step."}),`
`,e.jsx(t.li,{children:"Use sentence case. The only exception is when we redirect customers to a specific site destination, for example 'Back to Manage cards'."}),`
`,e.jsx(t.li,{children:"Use Log in rather than Sign in. Both are correct, but we choose log in for consistency. Note that the imperative verb log in uses two words, but the noun (your login details) is just one."}),`
`]}),`
`,e.jsx(t.h2,{id:"dos-and-donts",children:"Do's and dont's"}),`
`,e.jsxs(s,{children:[e.jsxs("div",{children:[e.jsx("img",{src:j}),e.jsx(t.p,{children:"Do maintain equal width for both primary and secondary buttons when using together."})]}),e.jsxs("div",{children:[e.jsx("img",{src:y}),e.jsx(t.p,{children:"Do not make buttons different widths when using both primary and secondary buttons together."})]}),e.jsxs("div",{children:[e.jsx("img",{src:b}),e.jsx(t.p,{children:"Do place the primary button on the right when using both primary and secondary buttons next to each other."})]}),e.jsxs("div",{children:[e.jsx("img",{src:v}),e.jsx(t.p,{children:"Do not place the primary button on the left when using both primary and secondary buttons next to each other."})]}),e.jsxs("div",{children:[e.jsx("img",{src:g}),e.jsx(t.p,{children:"Do use only one primary button per page. Use a secondary button or a text link to provide an alternative action."})]}),e.jsxs("div",{children:[e.jsx("img",{src:D}),e.jsx(t.p,{children:"Do not use more than one primary button on a page."})]}),e.jsxs("div",{children:[e.jsx("img",{src:w}),e.jsx(t.p,{children:"Do position the icon to the left of the button label."})]}),e.jsxs("div",{children:[e.jsx("img",{src:k}),e.jsx(t.p,{children:"Do not position the icon to the right of the button label."})]}),e.jsxs("div",{children:[e.jsx("img",{src:f}),e.jsx(t.p,{children:"Do make icons the same colour as button label."})]}),e.jsxs("div",{children:[e.jsx("img",{src:B}),e.jsx(t.p,{children:"Do not make icons a different colour as button label."})]})]})]})}function N(o={}){const{wrapper:t}={...a(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(r,{...o})}):r(o)}export{N as default};
