function C(r){return r.slice(0,1).toUpperCase()+r.slice(1)}function M({value:r="",max:n=999999999,min:s=0,maxDecimalPlaces:c=0,hasCommaSeperators:l=!1}){var h,b,p;let i=!1,e=r==null?void 0:r.toString();const u=e==null?void 0:e.slice(-1);if(isNaN(Number(u))&&u!=="."&&(e=e==null?void 0:e.slice(0,-1)),((h=e==null?void 0:e.match(/\,/))==null?void 0:h.length)===1&&(e=String(e).replace(/,/g,"")),s<0&&r==="-")return"-";if(isNaN(Number(e))||r===null||(e==null?void 0:e.trim().length)===0)return"";c>0&&((b=e==null?void 0:e.match(/\./))==null?void 0:b.length)===1&&(i=!0);const m=Number(e);let t=Math.trunc(m),f=(p=e==null?void 0:e.split("."))==null?void 0:p[1];f&&(f==null?void 0:f.length)>c&&(f=f.slice(0,-1)),t>n&&(t=n),t===n&&i&&(i=!1),t<s&&(t=s),s<0&&t===s&&i&&(i=!1);let o;l&&t!==0&&(o=new Intl.NumberFormat("en",{}).format(t));const N=y(t)||w(t)?"-":"";return i&&f&&c>0?N+(o||t)+"."+f:i&&c>0?N+(o||t)+".":N+(o||t).toString()}var w=r=>1/r===-1/0,y=r=>r<0&&r>-1,d=r=>{try{if(typeof r=="number")return r;const n=new Number(`${r}`).valueOf();return Number.isNaN(n)?0:n}catch{return 0}};export{C as c,M as f,d as s};
